<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Infinispan on tour, March-April 2019</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/GqF53MLexVE/infinispan-on-tour-march-april-2019.html" /><category term="breizh camp" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="greach conf" scheme="searchisko:content:tags" /><category term="public speaking" scheme="searchisko:content:tags" /><category term="voxxed days milano" scheme="searchisko:content:tags" /><author><name>Katia Aresti</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_on_tour_march_april_2019</id><updated>2019-04-15T13:48:26Z</updated><published>2019-04-15T11:08:00Z</published><content type="html">&lt;div style="text-align: center;"&gt;&lt;b&gt;&lt;span style="font-size: large;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;b&gt;&lt;span style="font-size: large;"&gt;Infinispan has been on tour!!&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&amp;nbsp;I - &lt;a href="https://twitter.com/karesti" target="_blank"&gt;Katia Aresti&lt;/a&gt; - had the chance to present 3 talks in 3 different conferences and countries during the last month:&lt;br /&gt;&lt;br /&gt;&lt;a href="https://www.breizhcamp.org/" target="_blank"&gt;Breizh Camp 2019&lt;/a&gt; the 22th March, Rennes (France)&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: center;"&gt;&lt;img alt="BreizhCamp - 9Ã¨me Ã©dition - 20, 21 et 22 Mars 2019 logo" src="https://www.breizhcamp.org/img/logo.png" /&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="https://www.greachconf.com/" target="_blank"&gt;Greach Conf 2019&lt;/a&gt;, 29th March, Madrid (Spain)&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: center;"&gt;&lt;img alt="Greach 2019" height="57" src="https://static1.squarespace.com/static/5bbb8964ab1a624b2849c12c/t/5bbb89d3ec212de44fe418ea/1553429592481/?format=1500w" width="200" /&gt;&lt;/div&gt;&lt;br /&gt;&lt;a href="https://voxxeddays.com/milan/" target="_blank"&gt;Voxxed Days Milano 2019&lt;/a&gt;, 13th April, Milan (Italy)&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: center;"&gt;&lt;img alt="VoxxedDays Milan" height="55" src="https://voxxeddays.com/milan/wp-content/uploads/sites/47/2018/06/Milano-grey.png" width="200" /&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;h4&gt;Breizh Camp&lt;/h4&gt;&lt;div&gt;2019 has been BreizhCamp's 9th - Code Busters - edition and they sold-out the conference in a matter of hours (wow).&lt;br /&gt;&lt;br /&gt;I did not have the time to attend any talk. Unfortunately, due to my personal schedule, I arrived on Thursday night, and I was presenting on Friday after lunch. This was the second time I was giving this presentation, but I did lot's of changes since the first time, including:&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;Big upgrades to my presentation look and feel&amp;nbsp;&lt;/li&gt;&lt;li&gt;Harry-Potterize my &lt;a href="https://github.com/karesti/harry-potter-vertx" target="_blank"&gt;Vert.x Clustered + Infinispan Embedded&lt;/a&gt;. An original demo containing more examples of Vert.x and Infinispan can be found &lt;a href="https://github.com/infinispan-demos/vertx-api" target="_blank"&gt;here&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Creating and live-coding an &lt;a href="https://github.com/infinispan-demos/harry-potter-quarkus" target="_blank"&gt;Infinispan Client/Server + Quarkus Demo&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Using &lt;a href="https://blog.infinispan.org/2019/04/operator-021-out-with-dns-ping-and.html" target="_blank"&gt;Infinispan Operator&lt;/a&gt; to create an Infinispan Cluster in &lt;a href="https://www.devoxx.fr/" target="_blank"&gt;Openshift 4&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-VB--7t2qCfs/XLRiXygkwOI/AAAAAAAACiI/idqpzL07zNsD4_ozwPYvzfIKzM9Lv4jWQCLcBGAs/s1600/Katia_BreizhCamp.jpg" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="484" data-original-width="640" height="301" src="https://2.bp.blogspot.com/-VB--7t2qCfs/XLRiXygkwOI/AAAAAAAACiI/idqpzL07zNsD4_ozwPYvzfIKzM9Lv4jWQCLcBGAs/s400/Katia_BreizhCamp.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Breizh Camp Code Busters Edition, Photo credit @BreizhCamp 2019&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;On Friday morning I was stressed and I ran my presentation at the hotel. I arrived at the venue, delivered my talk and headed back to Paris. I deeply regretted not spending more time hanging out with other speakers and attendees, but I really couldn't make it this time :(&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h4&gt;Greach Conf&lt;/h4&gt;&lt;div&gt;Greach Conf is a lovely conference held in Madrid (Spain) for several years now. A 100% international conference, it has been organized by the Groovy community.&amp;nbsp;&lt;/div&gt;&lt;div&gt;This year they have changed the conference lineup adding an Android/Testing track and focusing on a bigger spectrum of technologies around the JVM.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-4m4cQgITzVo/XLRd37LS7wI/AAAAAAAAChw/u1Locua7ykEBUMoP0EfQW8p2dN1VsxsiQCLcBGAs/s1600/Katia_Greach.jpg" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="1067" data-original-width="1600" height="266" src="https://2.bp.blogspot.com/-4m4cQgITzVo/XLRd37LS7wI/AAAAAAAAChw/u1Locua7ykEBUMoP0EfQW8p2dN1VsxsiQCLcBGAs/s400/Katia_Greach.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Greach Conf 2019. Photo credit José Miguel Rodríguez&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;I learned a bunch of new things, including content related to &lt;a href="https://sdkman.io/" target="_blank"&gt;SDKMan!&lt;/a&gt;, &lt;a href="https://gradle.org/" target="_blank"&gt;Gradle&lt;/a&gt;, the future of &lt;a href="https://grails.org/" target="_blank"&gt;Grails&lt;/a&gt; and of course, &lt;a href="https://micronaut.io/" target="_blank"&gt;Micronaut&lt;/a&gt;. As the principal maintainer of &lt;a href="https://github.com/infinispan/infinispan-spring-boot" target="_blank"&gt;Spring-Boot and Infinispan integration&lt;/a&gt;, Micronaut felt new and familiar at the same time. I really enjoyed the workshop delivered by &lt;a href="https://twitter.com/alvaro_sanchez" target="_blank"&gt;Alvaro Sánchez &lt;/a&gt;who will be in &lt;a href="https://www.devoxx.fr/" target="_blank"&gt;Devoxx France&lt;/a&gt;&amp;nbsp;this week. The framework &lt;b&gt;is really impressive&lt;/b&gt;. Give it a try!&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;You will find on Twitter a complete thread about my Greach Conf impressions:&lt;/b&gt;&lt;/div&gt;&lt;blockquote class="twitter-tweet" data-lang="fr"&gt;&lt;div dir="ltr" lang="en"&gt;Coming back to Paris after 3 amazing days in Madrid as speaker and attendee at &lt;a href="https://twitter.com/greachconf?ref_src=twsrc%5Etfw"&gt;@greachconf&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/greach?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#greach&lt;/a&gt; opening a thread &lt;/div&gt;— Katia Aresti (@karesti) &lt;a href="https://twitter.com/karesti/status/1112041858270748672?ref_src=twsrc%5Etfw"&gt;30 mars 2019&lt;/a&gt;&lt;/blockquote&gt;&lt;script async="" charset="utf-8" src="https://platform.twitter.com/widgets.js"&gt;&lt;/script&gt; &lt;br /&gt;&lt;h4&gt;Voxxed Days Milano&lt;/h4&gt;Voxxed Days Milano (Italy) was organizing the first edition this year and I really loved this conference in every aspect of it! Thanks, &lt;a href="https://twitter.com/mariofusco" target="_blank"&gt;Mario Fusco&lt;/a&gt; and all the team involved for making it possible!&lt;br /&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-e6wRSpBEK20/XLRgR20WmkI/AAAAAAAACh8/pREi8mad0ikM2KAjzYB57moGyjXXw3_mQCLcBGAs/s1600/Katia_VoxxedMilano.jpg" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="618" data-original-width="1271" height="194" src="https://1.bp.blogspot.com/-e6wRSpBEK20/XLRgR20WmkI/AAAAAAAACh8/pREi8mad0ikM2KAjzYB57moGyjXXw3_mQCLcBGAs/s400/Katia_VoxxedMilano.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Voxxed Days Milano - Photo credit Sanne Grinovero&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;br /&gt;I've written a full thread on Twitter with my impressions. You can find it attached to the tweet where I share&lt;b&gt; all the content I've used in Greach Conf, BreizhCamp and Voxxed Days Milano:&lt;/b&gt;&lt;br /&gt;&lt;blockquote class="twitter-tweet" data-lang="fr"&gt;&lt;div dir="ltr" lang="en"&gt;My presentation content &lt;a href="https://twitter.com/hashtag/VDM19?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#VDM19&lt;/a&gt; is available! &lt;a href="https://twitter.com/VoxxedMilano?ref_src=twsrc%5Etfw"&gt;@VoxxedMilano&lt;/a&gt; ! Thanks for attending!&lt;br /&gt;&lt;br /&gt;The code of &lt;a href="https://twitter.com/vertx_project?ref_src=twsrc%5Etfw"&gt;@vertx_project&lt;/a&gt; and &lt;a href="https://twitter.com/Infinispan?ref_src=twsrc%5Etfw"&gt;@Infinispan&lt;/a&gt; embedded&lt;a href="https://t.co/KYNUJRzauU"&gt;https://t.co/KYNUJRzauU&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;The code of &lt;a href="https://twitter.com/QuarkusIO?ref_src=twsrc%5Etfw"&gt;@QuarkusIO&lt;/a&gt; and &lt;a href="https://twitter.com/Infinispan?ref_src=twsrc%5Etfw"&gt;@Infinispan&lt;/a&gt; client/server&lt;a href="https://t.co/9TV9tPBaeI"&gt;https://t.co/9TV9tPBaeI&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Deck: &lt;a href="https://t.co/HR8nMR7xlL"&gt;https://t.co/HR8nMR7xlL&lt;/a&gt;&lt;/div&gt;— Katia Aresti (@karesti) &lt;a href="https://twitter.com/karesti/status/1117012866354307072?ref_src=twsrc%5Etfw"&gt;13 avril 2019&lt;/a&gt;&lt;/blockquote&gt;&lt;script async="" charset="utf-8" src="https://platform.twitter.com/widgets.js"&gt;&lt;/script&gt; &lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: center;"&gt;&lt;b&gt;&lt;span style="font-size: large;"&gt;Thanks to Breizh Camp, Greach Conf and Voxxed Days Milano for the opportunity to share around distributed caches and for the amazing time I've had during this month in each of the conferences.&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;This tour is now over for a while but will continue before summer. I will be presenting this talk (with upgrades, so stay tuned) in &lt;a href="https://devfest.gdglille.org/" target="_blank"&gt;Dev Fest Lille in June 2019&lt;/a&gt;&amp;nbsp;(France), in &lt;a href="https://comunidadcode.com/" target="_blank"&gt;Comunidad CODE (Virtual talk)&lt;/a&gt;&amp;nbsp;and &lt;a href="https://www.meetup.com/fr-FR/Software-Crafters-Bilbao/" target="_blank"&gt;Software Crafters Bilbao&lt;/a&gt;&amp;nbsp;in Spanish.&lt;br /&gt;&lt;br /&gt;&lt;h4&gt;&lt;b&gt;Devoxx France&amp;nbsp;&lt;/b&gt;&lt;/h4&gt;&lt;a href="https://www.devoxx.fr/" target="_blank"&gt;Devoxx France &lt;/a&gt;is taking place this week in Paris. &lt;b&gt;I will be there,&lt;/b&gt; so if you want to chat about Distributed caches, Datagrids, NoSQL Key-Value databases, or integration with your favorite framework &lt;b&gt;feel free to reach me on twitter&lt;/b&gt;!&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;There are lot's of &lt;b&gt;new features and Reactive APIs to be done for Infinispan 10&lt;/b&gt;, so my main focus will be there for a bit.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: center;"&gt;Stay Tuned And Happy Coding!&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/IFJU1BG2A_Y" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/GqF53MLexVE" height="1" width="1" alt=""/&gt;</content><summary>Infinispan has been on tour!!  I - Katia Aresti - had the chance to present 3 talks in 3 different conferences and countries during the last month: Breizh Camp 2019 the 22th March, Rennes (France) Greach Conf 2019, 29th March, Madrid (Spain) Voxxed Days Milano 2019, 13th April, Milan (Italy) Breizh Camp 2019 has been BreizhCamp's 9th - Code Busters - edition and they sold-out the conference in a m...</summary><dc:creator>Katia Aresti</dc:creator><dc:date>2019-04-15T11:08:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/IFJU1BG2A_Y/infinispan-on-tour-march-april-2019.html</feedburner:origLink></entry><entry><title>What is your biggest work environment distraction?</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/VpiBXs43E2k/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Uncategorized" scheme="searchisko:content:tags" /><author><name>Rikki Endsley</name></author><id>searchisko:content:id:jbossorg_blog-what_is_your_biggest_work_environment_distraction</id><updated>2019-04-15T07:07:11Z</updated><published>2019-04-15T07:07:11Z</published><content type="html">&lt;p&gt;The &lt;a href="https://insights.stackoverflow.com/survey/2019#work-_-greatest-challenges-to-productivity"&gt;2019 Stack Overflow Developer Survey&lt;/a&gt; results show that more than 40% of respondents say a distracting work environment is the biggest challenge to productivity. What distracts you most in your work environment?&lt;/p&gt; &lt;p&gt;&lt;iframe src="https://docs.google.com/forms/d/e/1FAIpQLSc3JJEaRAR4NdfqUCEt0HZSFd4v8pqZOoMeG_iIzv8IOOP4hQ/viewform?embedded=true" width="640" height="965" frameborder="0" marginwidth="0" marginheight="0"&gt;Loading&amp;#8230;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fwhats-your-biggest-work-environment-distraction%2F&amp;#38;linkname=What%20is%20your%20biggest%20work%20environment%20distraction%3F" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fwhats-your-biggest-work-environment-distraction%2F&amp;#38;linkname=What%20is%20your%20biggest%20work%20environment%20distraction%3F" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fwhats-your-biggest-work-environment-distraction%2F&amp;#38;linkname=What%20is%20your%20biggest%20work%20environment%20distraction%3F" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fwhats-your-biggest-work-environment-distraction%2F&amp;#38;linkname=What%20is%20your%20biggest%20work%20environment%20distraction%3F" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fwhats-your-biggest-work-environment-distraction%2F&amp;#38;linkname=What%20is%20your%20biggest%20work%20environment%20distraction%3F" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fwhats-your-biggest-work-environment-distraction%2F&amp;#38;linkname=What%20is%20your%20biggest%20work%20environment%20distraction%3F" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fwhats-your-biggest-work-environment-distraction%2F&amp;#38;linkname=What%20is%20your%20biggest%20work%20environment%20distraction%3F" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fwhats-your-biggest-work-environment-distraction%2F&amp;#38;linkname=What%20is%20your%20biggest%20work%20environment%20distraction%3F" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fwhats-your-biggest-work-environment-distraction%2F&amp;#038;title=What%20is%20your%20biggest%20work%20environment%20distraction%3F" data-a2a-url="https://developers.redhat.com/blog/2019/04/15/whats-your-biggest-work-environment-distraction/" data-a2a-title="What is your biggest work environment distraction?"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/15/whats-your-biggest-work-environment-distraction/"&gt;What is your biggest work environment distraction?&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/VpiBXs43E2k" height="1" width="1" alt=""/&gt;</content><summary>The 2019 Stack Overflow Developer Survey results show that more than 40% of respondents say a distracting work environment is the biggest challenge to productivity. What distracts you most in your work environment? Loading… The post What is your biggest work environment distraction? appeared first on Red Hat Developer Blog.</summary><dc:creator>Rikki Endsley</dc:creator><dc:date>2019-04-15T07:07:11Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/15/whats-your-biggest-work-environment-distraction/</feedburner:origLink></entry><entry><title>How to set up your first Kubernetes environment on Windows</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/oif6YniIXnQ/" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><author><name>Don Schenck</name></author><id>searchisko:content:id:jbossorg_blog-how_to_set_up_your_first_kubernetes_environment_on_windows</id><updated>2019-04-15T07:01:24Z</updated><published>2019-04-15T07:01:24Z</published><content type="html">&lt;p&gt;You&amp;#8217;ve crushed the whole &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;containers&lt;/a&gt; thing—it was much easier than you anticipated, and you&amp;#8217;ve updated your resume. Now it&amp;#8217;s time to move into the spotlight, walk the red carpet, and own the whole &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; game. In this blog post, we&amp;#8217;ll get our Kubernetes environment up and running on Windows 10, spin up an image in a container, and drop the mic on our way out the door—headed to &lt;a href="https://developers.redhat.com/index.php/coderland/serverless/serverless-knative-intro/"&gt;Coderland&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;span id="more-580387"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Windows? Oh, yeah!&lt;/h2&gt; &lt;p&gt;Just because containers run on &lt;a href="https://developers.redhat.com/topics/linux/"&gt;Linux&lt;/a&gt; doesn&amp;#8217;t mean Windows developers should be left out of the picture. Quite the contrary: Given that .NET runs in containers now, Windows devs are full first-class citizens of the containers and Kubernetes community. In this article, we&amp;#8217;ll apply a bit of PowerShell magic and we&amp;#8217;ll have your Windows PC already to for you to start learning about and using Kubernetes.&lt;/p&gt; &lt;h2&gt;The parts&lt;/h2&gt; &lt;p&gt;Unlike a certain brand of kitchen cabinets that I recently purchased that had instructions only as diagrams with a stick figure person and some numbers and arrows, we&amp;#8217;ll lay out the items and steps with diagrams and words. We need:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;A way to run containers.&lt;/li&gt; &lt;li&gt;Kubernetes.&lt;/li&gt; &lt;li&gt;The Kubernetes command-line tool, &lt;code&gt;kubectl&lt;/code&gt;. We can argue over how to pronounce it later.&lt;/li&gt; &lt;li&gt;Red Hat OpenShift command-line tool, &lt;code&gt;oc&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;An image to run as a test.&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;A way to run containers&lt;/h2&gt; &lt;p class="selectionShareable"&gt;We need some sort of environment to run containers. Options include &lt;a href="https://kubernetes.io/docs/setup/minikube/"&gt;Minikube&lt;/a&gt;, &lt;a href="https://www.okd.io/minishift/"&gt;Minishift&lt;/a&gt;, and a &lt;a href="https://developers.redhat.com/products/openshift/overview/"&gt;Red Hat OpenShift&lt;/a&gt; cluster (running on, say, AWS). We’ll keep things simple and forward-looking by choosing Minishift; it&amp;#8217;s forward-looking in that, when we want to move from Kubernetes to OpenShift, we&amp;#8217;ll already have everything we need in place. This setup will run on our local machine yet give us the power of Kubernetes (and OpenShift, by the way) without spending any money. That’s always nice.&lt;/p&gt; &lt;p&gt;So let&amp;#8217;s install Minishift on Windows. For starters, if you&amp;#8217;re not using &lt;a href="https://chocolatey.org/"&gt;Chocolatey&lt;/a&gt;, stop everything and install it. You will absolutely love it, I promise.&lt;/p&gt; &lt;p&gt;From that point on, it&amp;#8217;s way too easy:&lt;/p&gt; &lt;pre&gt;choco install -y minishift&lt;/pre&gt; &lt;h3&gt;Prove it&lt;/h3&gt; &lt;p&gt;The command &lt;code&gt;minishift version&lt;/code&gt; should yield:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-582387 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/minishift_version.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/minishift_version.png" alt="" width="476" height="52" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/minishift_version.png 476w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/minishift_version-300x33.png 300w" sizes="(max-width: 476px) 100vw, 476px" /&gt;&lt;/p&gt; &lt;h2&gt;Installing Kubernetes&lt;/h2&gt; &lt;p&gt;Bonus! It&amp;#8217;s included in Minishift. Wow, that was easy.&lt;/p&gt; &lt;h2&gt;Installing kubectl&lt;/h2&gt; &lt;p&gt;The Kubernetes command-line tool, &lt;code&gt;kubectl&lt;/code&gt;, is a breeze to install on Windows:&lt;/p&gt; &lt;pre&gt;choco install -y kubernetes-cli&lt;/pre&gt; &lt;p&gt;(If that fails, there is a more in-depth explanation on the &lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/#install-kubectl-binary-via-curl"&gt;kubectl installation page&lt;/a&gt;.)&lt;/p&gt; &lt;h2&gt;Installing oc&lt;/h2&gt; &lt;p&gt;To install &lt;code&gt;oc&lt;/code&gt;, the OpenShift command-line tool, visit the &lt;a href="https://docs.okd.io/latest/cli_reference/get_started_cli.html#cli-windows"&gt;CLI installation page&lt;/a&gt; and follow the directions. Basically, you download it and make sure it&amp;#8217;s in your system&amp;#8217;s path.&lt;/p&gt; &lt;h2&gt;Fire it up&lt;/h2&gt; &lt;p&gt;Time to get your local cluster up and running. It&amp;#8217;s quite simple; at the command line, use the following command:&lt;/p&gt; &lt;pre&gt;minishift start&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If, at any time, you want to start fresh with Minishift, use the commands &lt;code&gt;minishift stop&lt;/code&gt; and &lt;code&gt;minishift delete --force --clear-cache&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;When that finishes, we need a few commands to get “attached,” if you will, to our cluster. We’re going to cheat here and use some OpenShift commands; those commands are shortcuts. If we didn’t use them, we’d have to alter our Kubernetes configuration and create a user and grant access. We can save a ton of steps. If you want to use only &lt;code class="notranslate"&gt;kubectl&lt;/code&gt; and be a purist, you can follow this blog post “&lt;a href="https://blog.christianposta.com/kubernetes/logging-into-a-kubernetes-cluster-with-kubectl/"&gt;Logging Into a Kubernetes Cluster With Kubectl&lt;/a&gt;.&amp;#8221;&lt;/p&gt; &lt;pre&gt;$MinishiftIP = minishift ip&lt;/pre&gt; &lt;pre&gt;oc login $MinishiftIP:8443 -u admin -p admin&lt;/pre&gt; &lt;pre&gt;oc new-project test&lt;/pre&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-582927 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/logging-in-to-openshift-1024x651.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/logging-in-to-openshift.png" alt="" width="1241" height="789" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/logging-in-to-openshift.png 1241w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/logging-in-to-openshift-300x191.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/logging-in-to-openshift-768x488.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/logging-in-to-openshift-1024x651.png 1024w" sizes="(max-width: 1241px) 100vw, 1241px" /&gt;&lt;/p&gt; &lt;h2&gt;An image to run&lt;/h2&gt; &lt;p&gt;Finally, it&amp;#8217;s a good idea to run a very basic image as a Kubernetes pod to test your setup. To do this, we&amp;#8217;ll run an image in a pod, create a route to it (i.e., create a URI), and then run &lt;code&gt;curl&lt;/code&gt; to make sure it&amp;#8217;s all working as expected.&lt;/p&gt; &lt;p&gt;Use this command to spin up a pod:&lt;/p&gt; &lt;pre&gt;kubectl run locationms --image=quay.io/donschenck/locationms:v2 --port=8080&lt;/pre&gt; &lt;p&gt;This will pull an image down from my public repository to your system and run it using Kubernetes.&lt;/p&gt; &lt;p&gt;A little more detail: This creates a &lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/"&gt;deployment&lt;/a&gt; named &lt;em&gt;locationms&lt;/em&gt;, retrieves the image, starts the image in a container, and uses port 8080 to route to it. Note that the deployment name and the name of the image &lt;em&gt;do not&lt;/em&gt; need to match. This is an area where you want to put some management thought into place. In other words, this is a great opportunity to make things really confusing if you&amp;#8217;re not thoughtful. Don&amp;#8217;t ask how I know this.&lt;/p&gt; &lt;p class="selectionShareable"&gt;Note that waiting for this pod to get up and running might take a few minutes, depending on your machine’s performance. When done on a server or high-performance PC, it takes about a minute or so. My MacBook Air with the i5 processor takes about four minutes. You can check on it by running &lt;code class="notranslate"&gt;kubectl get pods&lt;/code&gt;.&lt;/p&gt; &lt;p class="selectionShareable"&gt;When the pod is up and running, you cannot access it from your command line. Why is that? Because it’s running &amp;#8220;inside&amp;#8221; your Kubernetes cluster. However, Kubernetes is smart and provides a proxy to your pods in Kubernetes because there may be several containers running the same application; a pod of containers. All with the same URI. When you run &lt;code class="notranslate"&gt;kubectl get pods&lt;/code&gt; you can see your &lt;em&gt;locationms&lt;/em&gt; pod.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-582947 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/kubectl-get-pods.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/kubectl-get-pods.png" alt="" width="742" height="102" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/kubectl-get-pods.png 742w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/kubectl-get-pods-300x41.png 300w" sizes="(max-width: 742px) 100vw, 742px" /&gt;&lt;/p&gt; &lt;h2&gt;Reaching the application&lt;/h2&gt; &lt;p&gt;There are two aspects, if you will, to the proxy that Kubernetes has created. One aspect is the proxy itself. The other aspect is the public face of the proxy, which allows you to access your pods.&lt;/p&gt; &lt;p&gt;To test the proxy and its access to your pod is a two-step processing. Not to worry; this gets much better and much easier later. But for now, we must start the proxy and then access the pod through the proxy. You&amp;#8217;ll need two terminal windows to do this.&lt;/p&gt; &lt;p&gt;In the first terminal window, run the following command:&lt;/p&gt; &lt;pre&gt;kubectl proxy&lt;/pre&gt; &lt;p&gt;The proxy is running. This will tie up the command line (i.e., it runs interactively), so you need a second terminal window to run a command to reach it. The endpoint that leads to our application is &lt;code&gt;/api/v1&lt;/code&gt;. The format we want is &lt;code&gt;api/v1/namespaces/{our namespace}/pods/{pod name}/proxy/&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The {our namespace}, in our particular instance, is &lt;code&gt;test&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The pod name can be found, again, by running &lt;code&gt;kubectl get pods&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Put those pieces together and you can reach our application from your second terminal (remember: &lt;code&gt;kubectl proxy&lt;/code&gt; is still running in our first terminal window):&lt;/p&gt; &lt;pre&gt;curl http://localhost:8001/api/v1/namespaces/test/pods/locationms-foo/proxy/&lt;/pre&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-582957 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/curl-1-1024x433.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/curl-1.png" alt="" width="1328" height="561" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/curl-1.png 1328w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/curl-1-300x127.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/curl-1-768x324.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/curl-1-1024x433.png 1024w" sizes="(max-width: 1328px) 100vw, 1328px" /&gt;&lt;/p&gt; &lt;h2&gt;Let&amp;#8217;s have some fun&lt;/h2&gt; &lt;p&gt;While we&amp;#8217;re here, let&amp;#8217;s see the &lt;em&gt;locationms&lt;/em&gt; app in action by passing in an IP address. You can get your machine&amp;#8217;s IP address by using this:&lt;/p&gt; &lt;pre&gt;curl https://ipv4.icanhazip.com&lt;/pre&gt; &lt;p&gt;Then, using that IP address, we can run our application as in this example:&lt;/p&gt; &lt;pre&gt;$(curl http://localhost:8001/api/v1/namespaces/test/pods/locationms-7b4fb849cc-8lmwg/proxy/75.75.33.33).content | ConvertFrom-Json&lt;/pre&gt; &lt;p&gt;Of course, the actual pod name will be different. You should see the following results:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-582587 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/powershell_curl.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/powershell_curl.png" alt="" width="680" height="356" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/powershell_curl.png 680w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/powershell_curl-300x157.png 300w" sizes="(max-width: 680px) 100vw, 680px" /&gt;&lt;/p&gt; &lt;p&gt;(Cool side note: icanhazip.com is owned and run by &lt;a href="https://twitter.com/majorhayden"&gt;@majorhayden&lt;/a&gt;. We worked together at Rackspace, and now we work together at &lt;a href="https://developers.redhat.com"&gt;Red Hat&lt;/a&gt;.)&lt;/p&gt; &lt;h2&gt;By the way&amp;#8230;&lt;/h2&gt; &lt;p&gt;That application your running in a container? It&amp;#8217;s a .NET Core application, written in C#. Just more proof that .NET developers can take over the microservices world.&lt;/p&gt; &lt;h2&gt;Wait, there&amp;#8217;s more&lt;/h2&gt; &lt;p&gt;Although you now have a Kubernetes cluster running on your local machine, there&amp;#8217;s still a lot more to know and do. For instance, there must be an easier way to get to your application than running &lt;code&gt;kubectl proxy&lt;/code&gt; in a second terminal. There must be a way to run more than one container, or more than one application. There must be a way to update your code while it&amp;#8217;s running—a &amp;#8220;rolling update&amp;#8221; as it&amp;#8217;s known.&lt;/p&gt; &lt;p&gt;And there is. We&amp;#8217;ll cover all this as the series continues.&lt;/p&gt; &lt;h2&gt;Also read&lt;/h2&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/?p=574447"&gt;How to set up your first Kubernetes environment on MacOS&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fhow-to-set-up-your-first-kubernetes-environment-on-windows%2F&amp;#38;linkname=How%20to%20set%20up%20your%20first%20Kubernetes%20environment%20on%20Windows" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fhow-to-set-up-your-first-kubernetes-environment-on-windows%2F&amp;#38;linkname=How%20to%20set%20up%20your%20first%20Kubernetes%20environment%20on%20Windows" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fhow-to-set-up-your-first-kubernetes-environment-on-windows%2F&amp;#38;linkname=How%20to%20set%20up%20your%20first%20Kubernetes%20environment%20on%20Windows" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fhow-to-set-up-your-first-kubernetes-environment-on-windows%2F&amp;#38;linkname=How%20to%20set%20up%20your%20first%20Kubernetes%20environment%20on%20Windows" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fhow-to-set-up-your-first-kubernetes-environment-on-windows%2F&amp;#38;linkname=How%20to%20set%20up%20your%20first%20Kubernetes%20environment%20on%20Windows" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fhow-to-set-up-your-first-kubernetes-environment-on-windows%2F&amp;#38;linkname=How%20to%20set%20up%20your%20first%20Kubernetes%20environment%20on%20Windows" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fhow-to-set-up-your-first-kubernetes-environment-on-windows%2F&amp;#38;linkname=How%20to%20set%20up%20your%20first%20Kubernetes%20environment%20on%20Windows" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fhow-to-set-up-your-first-kubernetes-environment-on-windows%2F&amp;#38;linkname=How%20to%20set%20up%20your%20first%20Kubernetes%20environment%20on%20Windows" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fhow-to-set-up-your-first-kubernetes-environment-on-windows%2F&amp;#038;title=How%20to%20set%20up%20your%20first%20Kubernetes%20environment%20on%20Windows" data-a2a-url="https://developers.redhat.com/blog/2019/04/15/how-to-set-up-your-first-kubernetes-environment-on-windows/" data-a2a-title="How to set up your first Kubernetes environment on Windows"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/15/how-to-set-up-your-first-kubernetes-environment-on-windows/"&gt;How to set up your first Kubernetes environment on Windows&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/oif6YniIXnQ" height="1" width="1" alt=""/&gt;</content><summary>You’ve crushed the whole containers thing—it was much easier than you anticipated, and you’ve updated your resume. Now it’s time to move into the spotlight, walk the red carpet, and own the whole Kubernetes game. In this blog post, we’ll get our Kubernetes environment up and running on Windows 10, spin up an image in a container, and drop the mic on our way out the door—headed to Coderland. Window...</summary><dc:creator>Don Schenck</dc:creator><dc:date>2019-04-15T07:01:24Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/15/how-to-set-up-your-first-kubernetes-environment-on-windows/</feedburner:origLink></entry><entry><title>How to set up your first Kubernetes environment on MacOS</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/YsocZR8YyQ8/" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><author><name>Don Schenck</name></author><id>searchisko:content:id:jbossorg_blog-how_to_set_up_your_first_kubernetes_environment_on_macos</id><updated>2019-04-15T07:00:52Z</updated><published>2019-04-15T07:00:52Z</published><content type="html">&lt;p&gt;By following &lt;a href="https://developers.redhat.com/blog/2019/03/21/containers-kubernetes-and-microservices-start-here/"&gt;my previous article in this series&lt;/a&gt;, you&amp;#8217;ve crushed the whole &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;containers&lt;/a&gt; thing. It was much easier than you anticipated, and you&amp;#8217;ve updated your resume. Now it&amp;#8217;s time to move into the spotlight, walk the red carpet, and own the whole &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; game. In this blog post, we&amp;#8217;ll get our Kubernetes environment up and running on MacOS, spin up an image in a container, and head to &lt;a href="https://developers.redhat.com/index.php/coderland/serverless/serverless-knative-intro/"&gt;Coderland&lt;/a&gt;.&lt;br /&gt; &lt;span id="more-574447"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;The parts&lt;/h2&gt; &lt;p&gt;Unlike a certain brand of kitchen cabinets that I recently purchased that had instructions only as diagrams with a stick figure person and some numbers and arrows, we&amp;#8217;ll lay out the items and steps with diagrams and words. We need:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;A way to run containers&lt;/li&gt; &lt;li&gt;Kubernetes&lt;/li&gt; &lt;li&gt;The Kubernetes command-line tool, &lt;code&gt;kubectl&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;The &lt;code&gt;oc&lt;/code&gt; command-line tool for Red Hat OpenShift&lt;/li&gt; &lt;li&gt;An image to run as a test.&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;A way to run containers&lt;/h2&gt; &lt;p&gt;We need some sort of environment to run containers. Options include &lt;a href="https://kubernetes.io/docs/tutorials/hello-minikube/"&gt;Minikube&lt;/a&gt;, &lt;a href="https://www.okd.io/minishift/"&gt;Minishift&lt;/a&gt;, and a &lt;a href="https://developers.redhat.com/products/openshift/overview/"&gt;Red Hat OpenShift&lt;/a&gt; cluster (running on, say, AWS). We&amp;#8217;ll keep things simple and forward-looking by choosing Minishift. This will run on our local machine yet give us the power of Kubernetes (and OpenShift, by the way) without spending any money.&lt;/p&gt; &lt;p&gt;That&amp;#8217;s always nice.&lt;/p&gt; &lt;p&gt;So let&amp;#8217;s install Minishift on MacOS. It&amp;#8217;s one or four steps, depending on whether or not you&amp;#8217;re using &lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Installing Minishift: Two options&lt;/h2&gt; &lt;h3&gt;Option 1: Install using Homebrew&lt;/h3&gt; &lt;p&gt;&lt;code&gt;brew cask install --force minishift&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Boom. Done. You can skip to the &amp;#8220;Installing Kubernetes&amp;#8221; section.&lt;/p&gt; &lt;h3&gt;Option 2: DIY&lt;/h3&gt; &lt;ol&gt; &lt;li&gt;Visit the &lt;a href="https://github.com/minishift/minishift/releases"&gt;Minishift releases page&lt;/a&gt; and download the latest MacOS-compatible release (it has &amp;#8220;darwin-amd64&amp;#8221; in the name, around 9MB in size). Or download it using &lt;code&gt;wget&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Uncompress the file. The easiest way to do this is to double-click on the file, or use &lt;code&gt;tar&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Make sure the file is where you want it to reside (e.g., ~/minishift directory).&lt;/li&gt; &lt;li&gt;Make sure the directory is in your system PATH.&lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;Download using wget&lt;/h3&gt; &lt;p&gt;Download the latest version (as of this publication) with this command:&lt;/p&gt; &lt;p class="p1"&gt;&lt;span class="s1"&gt;&lt;code&gt;wget https://github.com/minishift/minishift/releases/download/v1.32.0/minishift-1.32.0-darwin-amd64.tgz&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;Uncompress the file&lt;/h3&gt; &lt;p class="p1"&gt;&lt;span class="s1"&gt;&lt;code&gt;tar -xvzf minishift-1.32.0-darwin-amd64.tgz&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3 class="p1"&gt;&lt;span class="s1"&gt;Move to where you want it&lt;/span&gt;&lt;/h3&gt; &lt;p class="p1"&gt;&lt;span class="s1"&gt;&lt;code&gt;mv minishift-1.32.0-darwin-amd64/minishift /usr/local/bin/minishift&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;Update PATH&lt;/h3&gt; &lt;p&gt;&lt;code&gt;export PATH=$PATH:/usr/local/bin/minishift&lt;/code&gt;&lt;/p&gt; &lt;h3&gt;Prove it&lt;/h3&gt; &lt;p&gt;The command &lt;code&gt;minishift version&lt;/code&gt; should yield:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-574767 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-13-at-1.01.12-PM.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-13-at-1.01.12-PM.png" alt="" width="440" height="106" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-13-at-1.01.12-PM.png 440w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-13-at-1.01.12-PM-300x72.png 300w" sizes="(max-width: 440px) 100vw, 440px" /&gt;&lt;/p&gt; &lt;h2&gt;Installing Kubernetes&lt;/h2&gt; &lt;p&gt;Bonus! It&amp;#8217;s included in Minishift. Wow, that was easy.&lt;/p&gt; &lt;h2&gt;Installing kubectl&lt;/h2&gt; &lt;p&gt;The Kubernetes command-line tool, kubectl, is a breeze to install on MacOS:&lt;/p&gt; &lt;pre&gt;brew install kubernetes-cli&lt;/pre&gt; &lt;p&gt;(If that fails, there is a more in-depth explanation on the &lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/#install-kubectl-binary-via-curl"&gt;kubectl installation page&lt;/a&gt;.)&lt;/p&gt; &lt;h2&gt;Installing oc&lt;/h2&gt; &lt;pre&gt;brew install openshift-cli&lt;/pre&gt; &lt;p&gt;(Or, you can use the DIY instructions at the &lt;a href="https://docs.okd.io/latest/cli_reference/get_started_cli.html#cli-mac"&gt;okd page&lt;/a&gt;. OKD is the upstream version of OpenShift. What is this upstream talk all about? It&amp;#8217;s part of &lt;a href="https://opensource.com/article/16/12/why-red-hat-takes-upstream-first-approach"&gt;Red Hat&amp;#8217;s strategy&lt;/a&gt;.)&lt;/p&gt; &lt;h2&gt;Fire it up&lt;/h2&gt; &lt;p&gt;Time to get your cluster up and running. It&amp;#8217;s quite simple; at the command line, use the following command:&lt;/p&gt; &lt;pre&gt;minishift start&lt;/pre&gt; &lt;p&gt;Note: If, at any time, you want to start fresh with Minishift, use the commands &lt;code&gt;minishift stop&lt;/code&gt; and &lt;code&gt;minishift delete --force --clear-cache&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;When that finishes, we need a few commands to get &amp;#8220;attached,&amp;#8221; if you will, to our cluster. We&amp;#8217;re going to cheat here and use some OpenShift commands. Those commands are shortcuts. If we didn&amp;#8217;t use them, we&amp;#8217;d have to alter our Kubernetes configuration and create a user and grant access. We can save a ton of steps. If you want to use only &lt;code&gt;kubectl&lt;/code&gt; and be a purist, you can follow this blog post &amp;#8220;&lt;a href="https://blog.christianposta.com/kubernetes/logging-into-a-kubernetes-cluster-with-kubectl/"&gt;Logging Into a Kubernetes Cluster With Kubectl&lt;/a&gt;.&amp;#8221;&lt;/p&gt; &lt;pre&gt;oc login $(minishift ip):8443 -u admin -p admin&lt;/pre&gt; &lt;pre&gt;oc new-project test&lt;/pre&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-580997 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-28-at-3.06.26-PM-1024x385.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-28-at-3.06.26-PM.png" alt="" width="1039" height="391" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-28-at-3.06.26-PM.png 1039w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-28-at-3.06.26-PM-300x113.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-28-at-3.06.26-PM-768x289.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-28-at-3.06.26-PM-1024x385.png 1024w" sizes="(max-width: 1039px) 100vw, 1039px" /&gt;&lt;/p&gt; &lt;h2&gt;An image to run&lt;/h2&gt; &lt;p&gt;Finally, it&amp;#8217;s a good idea to run a very basic image as a Kubernetes pod to test your setup. To do this, let&amp;#8217;s run an image in a pod and then run &lt;code&gt;curl&lt;/code&gt; to make sure it&amp;#8217;s all working as expected.&lt;/p&gt; &lt;p&gt;Use this command to spin up a pod:&lt;/p&gt; &lt;pre&gt;kubectl run locationms --image=quay.io/donschenck/locationms:v2 --port=8080&lt;/pre&gt; &lt;p&gt;This will pull an image down from my public repository to your system and run it using Kubernetes.&lt;/p&gt; &lt;p&gt;A little more detail: This creates a &lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/"&gt;deployment&lt;/a&gt; named &lt;em&gt;locationms&lt;/em&gt;, retrieves the image, starts the image in a container, and uses port 8080 to route to it. Note that the deployment name and the name of the image do not need to match. This is an area where you want to put some management thought into place. In other words, this is a great opportunity to make things really confusing if you&amp;#8217;re not thoughtful. Don&amp;#8217;t ask how I know this.&lt;/p&gt; &lt;p&gt;Note that waiting for this pod to get up and running might take a few minutes, depending on your machine&amp;#8217;s performance. When done on a server or high-performance PC, it takes about a minute or so. My MacBook Air with the i5 processor takes about four minutes. You can check on it by running &lt;code&gt;kubectl get pods&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;When the pod is up and running, you cannot access it from your command line. Why is that? Because it&amp;#8217;s running &amp;#8220;inside&amp;#8221; your Kubernetes cluster. However, Kubernetes is smart and provides a proxy to your pods in Kubernetes because there may be several containers running the same application; a pod of containers. All with the same URI. When you run &lt;code&gt;kubectl get pods&lt;/code&gt; you can see your &lt;em&gt;locationms&lt;/em&gt; pod.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-581437 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-29-at-11.35.47-AM.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-29-at-11.35.47-AM.png" alt="" width="705" height="93" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-29-at-11.35.47-AM.png 705w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-29-at-11.35.47-AM-300x40.png 300w" sizes="(max-width: 705px) 100vw, 705px" /&gt;&lt;/p&gt; &lt;h2&gt;Reaching the application&lt;/h2&gt; &lt;p&gt;There are two aspects, if you will, to the proxy that Kubernetes has created. One aspect is the proxy itself. The other aspect is the public face of the proxy, that which allows you to access your pods. In other words, the proxy runs on port 8001, while the proxy routes are what allow you to reach your application.&lt;/p&gt; &lt;p&gt;To test the proxy and its access to your pod is a two-step process. Not to worry; this gets much better and much easier later. But for now, we must start the proxy and then access the pod through the proxy. You&amp;#8217;ll need two terminal windows to do this.&lt;/p&gt; &lt;p&gt;In the first terminal window, run the following command:&lt;/p&gt; &lt;pre&gt;kubectl proxy&lt;/pre&gt; &lt;p&gt;The proxy is running. This will tie up the command line (i.e., it runs interactively), so you need a second terminal window to run the following command, which will return a list of the proxy routes:&lt;/p&gt; &lt;pre&gt;curl http://localhost:8001&lt;/pre&gt; &lt;div id="attachment_580357" style="width: 511px" class="wp-caption alignnone"&gt;&lt;img aria-describedby="caption-attachment-580357" class=" alignnone size-full wp-image-580357 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-27-at-3.58.01-PM.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-27-at-3.58.01-PM.png" alt="" width="501" height="781" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-27-at-3.58.01-PM.png 501w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-27-at-3.58.01-PM-192x300.png 192w" sizes="(max-width: 501px) 100vw, 501px" /&gt;&lt;p id="caption-attachment-580357" class="wp-caption-text"&gt;Kubernetes proxy routes&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Wow. Those results. Those are all the routes built into the Kubernetes proxy. And that&amp;#8217;s the thing: We&amp;#8217;re not reaching our application yet &amp;#8230; just the proxy.&lt;/p&gt; &lt;p&gt;The endpoint that leads to our application is &lt;code&gt;/api/v1&lt;/code&gt;. The format we want is &lt;code&gt;api/v1/namespaces/{our namespace}/pods/{pod name}/proxy/&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The {our namespace}, in our particular instance, is &lt;code&gt;test&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The pod name can be found, again, by running &lt;code&gt;kubectl get pods&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-581027 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-28-at-3.32.06-PM.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-28-at-3.32.06-PM.png" alt="" width="779" height="100" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-28-at-3.32.06-PM.png 779w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-28-at-3.32.06-PM-300x39.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-28-at-3.32.06-PM-768x99.png 768w" sizes="(max-width: 779px) 100vw, 779px" /&gt;&lt;/p&gt; &lt;p&gt;Put those pieces together and you can reach our application from your second terminal (remember: &lt;code&gt;kubectl proxy&lt;/code&gt; is still running in our first terminal window):&lt;/p&gt; &lt;pre&gt;curl http://localhost:8001/api/v1/namespaces/test/pods/locationms-7b4fb849cc-qd8zv/proxy/&lt;/pre&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-581037 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-28-at-3.34.19-PM-1024x67.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-28-at-3.34.19-PM.png" alt="" width="1139" height="74" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-28-at-3.34.19-PM.png 1139w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-28-at-3.34.19-PM-300x19.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-28-at-3.34.19-PM-768x50.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screen-Shot-2019-03-28-at-3.34.19-PM-1024x67.png 1024w" sizes="(max-width: 1139px) 100vw, 1139px" /&gt;&lt;/p&gt; &lt;h2&gt;Let&amp;#8217;s have some fun&lt;/h2&gt; &lt;p&gt;While we&amp;#8217;re here, let&amp;#8217;s see the &lt;em&gt;locationms&lt;/em&gt; app in action by passing in an IP address. You can get your machine&amp;#8217;s IP address by using this:&lt;/p&gt; &lt;pre&gt;curl https://ipv4.icanhazip.com&lt;/pre&gt; &lt;p&gt;Then, using that IP address, run our application such as in this example:&lt;/p&gt; &lt;pre&gt;curl http://localhost:8001/api/v1/namespaces/test/pods/locationms-7b4fb849cc-qd8zv/proxy/75.75.33.33&lt;/pre&gt; &lt;p&gt;You should see the following output:&lt;/p&gt; &lt;pre&gt;{"query":"75.75.33.33","status":"success","country":"United States","countryCode":"US","region":"VA","regionName":"Virginia","city":"Leesburg","zip":"20176","lat":39.1821,"lon":-77.5359,"timezone":"America/New_York","isp":"Comcast Cable Communications","org":"Comcast Cable Communications Holdings, Inc","as":"AS7922 Comcast Cable Communications, LLC"}&lt;/pre&gt; &lt;p&gt;[Cool side note: icanhazip.com is owned and run by &lt;a href="https://twitter.com/majorhayden"&gt;@majorhayden&lt;/a&gt;. We worked at together at Rackspace, and now we work together at &lt;a href="https://developers.redhat.com"&gt;Red Hat&lt;/a&gt;.]&lt;/p&gt; &lt;h2&gt;By the way&amp;#8230;&lt;/h2&gt; &lt;p&gt;By the way,&lt;em&gt; locationms&lt;/em&gt; is a .NET Core program written in C#. The magic of containers: (almost) all development languages are welcomed!&lt;/p&gt; &lt;h2&gt;Wait, there&amp;#8217;s more&lt;/h2&gt; &lt;p&gt;Although you now have a Kubernetes cluster running on your local machine, there&amp;#8217;s still a lot more to know and do. There must be an easier way to get to your application than running &lt;code&gt;kubectl proxy&lt;/code&gt; in a second terminal. There must be a way to run more than one container, or more than one application. There must be a way to update your code while it&amp;#8217;s running—a &amp;#8220;rolling update&amp;#8221; as it&amp;#8217;s known.&lt;/p&gt; &lt;p&gt;And there is. We&amp;#8217;ll cover all that as the series continues. In the meantime, own that red carpet.&lt;/p&gt; &lt;p&gt;P.S. It&amp;#8217;s pronounced &amp;#8220;kube-cuddle.&amp;#8221;&lt;/p&gt; &lt;h2&gt;Also read&lt;/h2&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/?p=580387"&gt;How to set up your first Kubernetes environment on Windows&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fhow-to-set-up-your-first-kubernetes-environment-on-macos%2F&amp;#38;linkname=How%20to%20set%20up%20your%20first%20Kubernetes%20environment%20on%20MacOS" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fhow-to-set-up-your-first-kubernetes-environment-on-macos%2F&amp;#38;linkname=How%20to%20set%20up%20your%20first%20Kubernetes%20environment%20on%20MacOS" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fhow-to-set-up-your-first-kubernetes-environment-on-macos%2F&amp;#38;linkname=How%20to%20set%20up%20your%20first%20Kubernetes%20environment%20on%20MacOS" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fhow-to-set-up-your-first-kubernetes-environment-on-macos%2F&amp;#38;linkname=How%20to%20set%20up%20your%20first%20Kubernetes%20environment%20on%20MacOS" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fhow-to-set-up-your-first-kubernetes-environment-on-macos%2F&amp;#38;linkname=How%20to%20set%20up%20your%20first%20Kubernetes%20environment%20on%20MacOS" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fhow-to-set-up-your-first-kubernetes-environment-on-macos%2F&amp;#38;linkname=How%20to%20set%20up%20your%20first%20Kubernetes%20environment%20on%20MacOS" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fhow-to-set-up-your-first-kubernetes-environment-on-macos%2F&amp;#38;linkname=How%20to%20set%20up%20your%20first%20Kubernetes%20environment%20on%20MacOS" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fhow-to-set-up-your-first-kubernetes-environment-on-macos%2F&amp;#38;linkname=How%20to%20set%20up%20your%20first%20Kubernetes%20environment%20on%20MacOS" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F15%2Fhow-to-set-up-your-first-kubernetes-environment-on-macos%2F&amp;#038;title=How%20to%20set%20up%20your%20first%20Kubernetes%20environment%20on%20MacOS" data-a2a-url="https://developers.redhat.com/blog/2019/04/15/how-to-set-up-your-first-kubernetes-environment-on-macos/" data-a2a-title="How to set up your first Kubernetes environment on MacOS"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/15/how-to-set-up-your-first-kubernetes-environment-on-macos/"&gt;How to set up your first Kubernetes environment on MacOS&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/YsocZR8YyQ8" height="1" width="1" alt=""/&gt;</content><summary>By following my previous article in this series, you’ve crushed the whole containers thing. It was much easier than you anticipated, and you’ve updated your resume. Now it’s time to move into the spotlight, walk the red carpet, and own the whole Kubernetes game. In this blog post, we’ll get our Kubernetes environment up and running on MacOS, spin up an image in a container, and head to Coderland. ...</summary><dc:creator>Don Schenck</dc:creator><dc:date>2019-04-15T07:00:52Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/15/how-to-set-up-your-first-kubernetes-environment-on-macos/</feedburner:origLink></entry><entry><title>Integration Key to Customer Experience - Example Service Integration</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/OCblalSX89c/integration-key-to-customer-experience-example-service-integration.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Architecture Blueprints" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="best practices" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-integration_key_to_customer_experience_example_service_integration</id><updated>2019-04-15T05:00:01Z</updated><published>2019-04-15T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: left; margin-right: 1em; text-align: left;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-u7XB2B3xaNQ/XDhn_IlLITI/AAAAAAAAtZU/OamDcBi0IJg0_GNUii6H3mXPDGb8OMuZQCLcBGAs/s1600/omnichannel-header.png" imageanchor="1" style="clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="815" data-original-width="1420" height="183" src="https://1.bp.blogspot.com/-u7XB2B3xaNQ/XDhn_IlLITI/AAAAAAAAtZU/OamDcBi0IJg0_GNUii6H3mXPDGb8OMuZQCLcBGAs/s320/omnichannel-header.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Part 9 - Example service integration&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style="text-align: left;"&gt;&lt;/div&gt;In &lt;a href="https://www.schabell.org/2019/03/integration-key-to-customer-experience-example-mobile-integration.html" target="_blank"&gt;my previous article from this series&lt;/a&gt; we looked in to details that determine how your integration becomes the key to transforming your customer experience.&lt;br /&gt;&lt;br /&gt;It started with laying out the process of how I've approached the use case by researching successful customer portfolio solutions as the basis for a generic architectural blueprint.&lt;br /&gt;&lt;br /&gt;Let's continue looking at more specific examples of how these blueprints solve specific integration use cases.&lt;br /&gt;&lt;br /&gt;This article walks you through an example integration scenario showing how expanding the previously discussed details provides blueprints for your own integration scenarios.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Blueprint scenario&lt;/h3&gt;&lt;div&gt;As mentioned before, the architectural details covered here are base on real customer integration solutions using open source technologies. The example scenario presented here is a&amp;nbsp;&lt;i&gt;generic common blueprint&lt;/i&gt;&amp;nbsp;that was uncovered researching customer solutions. It's my intent to provide a blueprint that provides guidance and not deep technical details.&lt;br /&gt;&lt;br /&gt;This section covers the visual representations as presented, but it's expected that they'll be evolving visually over time. There are many ways to represent each element in this architectural blueprint, but I've chosen icons, text and colours that I hope are going to make it all easy to absorb. Feel free to post comments at the bottom of this post, or &lt;a href="https://www.schabell.org/p/contact.html" target="_blank"&gt;contact me directly&lt;/a&gt; with your feedback.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Now let's take a look at the details in this blueprint and outline the solution.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;&lt;a href="https://3.bp.blogspot.com/-ZBnk8x-c0qI/XK2v1K68d5I/AAAAAAAAtlY/gaIoVBZJY58G-ur7VlXERcW_mfE-_ufRQCLcBGAs/s1600/Screenshot%2B2019-04-10%2Bat%2B10.56.34.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="618" data-original-width="1000" height="197" src="https://3.bp.blogspot.com/-ZBnk8x-c0qI/XK2v1K68d5I/AAAAAAAAtlY/gaIoVBZJY58G-ur7VlXERcW_mfE-_ufRQCLcBGAs/s320/Screenshot%2B2019-04-10%2Bat%2B10.56.34.png" title="" width="320" /&gt;&lt;/a&gt;Service integration&amp;nbsp;&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;The example blueprint shown in the figure titled &lt;i&gt;Example: Integration Service Use&lt;/i&gt;&amp;nbsp;outlines how to integrate microservices in to your architecture. In this example, starting from the top, an online application is used to connect to your services through an API gateway. It's leveraging a group of microservices that provide &lt;i&gt;frontend&lt;/i&gt;&amp;nbsp;functionality. These&amp;nbsp;&lt;i&gt;frontend microservices&lt;/i&gt;&amp;nbsp;are gathering data and information from the various organizational backend systems by working through&amp;nbsp;&lt;i&gt;integration microservices&lt;/i&gt;. The showcased backend system in this example case is a mainframe.&lt;br /&gt;&lt;br /&gt;While there is no direct link between the various internal microservices to security services, it's implied by showing the authentication and authorization services supported through Single Sign On (SSO) server. This SSO server is leveraging existing organizational choices that involve using a third party active directory solution. It's crucial to understand that SSO functionality is pervasive throughout the integration use cases, so consider it included as plugins for every service artifact in the architecture blueprint.&lt;br /&gt;&lt;br /&gt;There is a conscience effort here to keep this blueprint example as concise as possible, therefore the integration of various potential &lt;i&gt;backend systems&lt;/i&gt;&amp;nbsp;has been simplified to a single representative box.&lt;br /&gt;&lt;div style="-webkit-text-stroke-width: 0px; color: black; font-family: Times; font-size: medium; font-style: normal; font-variant-caps: normal; font-variant-ligatures: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-decoration-color: initial; text-decoration-style: initial; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;"&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="-webkit-text-stroke-width: 0px; color: black; font-family: Times; font-size: medium; font-variant-caps: normal; font-variant-ligatures: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-decoration-color: initial; text-decoration-style: initial; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;"&gt;&lt;h3 style="font-style: normal; text-align: left;"&gt;Third party service integration&amp;nbsp;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-hvGkm_0Zsd4/XK2zSuzAbQI/AAAAAAAAtlk/tqejUOFdglYFDPi8nTwGAQwYkp1Hgg6wQCLcBGAs/s1600/Screenshot%2B2019-04-10%2Bat%2B11.11.25.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="616" data-original-width="1001" height="196" src="https://1.bp.blogspot.com/-hvGkm_0Zsd4/XK2zSuzAbQI/AAAAAAAAtlk/tqejUOFdglYFDPi8nTwGAQwYkp1Hgg6wQCLcBGAs/s320/Screenshot%2B2019-04-10%2Bat%2B11.11.25.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/h3&gt;&lt;div style="font-style: normal;"&gt;While the above blueprint shows service integration within your own organization using open technologies, what about legacy third party service implementations?&amp;nbsp;&lt;/div&gt;&lt;div style="font-style: normal;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="font-style: normal;"&gt;Many organizations are forced to live, at least for the time being, with legacy choices and have service integrations that need to tie in existing technology platforms.&amp;nbsp; With open technologies like Red Hat Fuse, it's like having a universal tool for connecting to almost any technology.&amp;nbsp;&lt;/div&gt;&lt;div style="font-style: normal;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The example blueprint shown in the figure titled&amp;nbsp;&lt;i&gt;Example: Integration To Third Party Service Use&lt;/i&gt;&amp;nbsp;outlines how to integrate your organization with third party services in your architecture. In this example, starting from the top, an online application is used to connect to your services through an API gateway. It's leveraging a group of microservices that provide&amp;nbsp;&lt;i style="font-style: normal;"&gt;frontend&lt;/i&gt;&amp;nbsp;functionality. These&amp;nbsp;&lt;i style="font-style: normal;"&gt;frontend microservices&lt;/i&gt;&amp;nbsp;are gathering data and information from the various organizational backend systems by working through&amp;nbsp;&lt;i style="font-style: normal;"&gt;integration microservices&lt;/i&gt;.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The showcased backend system in this example case are a set of &lt;i&gt;security services&lt;/i&gt;&amp;nbsp;that have been implemented on a third party platform using proprietary technology. Have no fear, you can enable the services they provide in place by fronting them with a set of integration microservices. This enables your development organization to deliver agile and flexible applications without having to rip and replace large parts of your existing architecture.&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;What's next&lt;/h3&gt;&lt;div&gt;This overview covers the first example architecture blueprints on process integration for omnichannel customer experience use case.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;An overview of the series on omnichannel customer experience portfolio architecture blueprint can be found here:&lt;br /&gt;&lt;ol style="text-align: left;"&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-introduction.html" target="_blank"&gt;An introduction&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-architectural-elements.html" target="_blank"&gt;Generic common architectural elements&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-external-application-details.html" target="_blank"&gt;External application details&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/12/integration-key-to-customer-experience-api-management-details.html" target="_blank"&gt;API management details&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/12/integraiton-key-to-customer-experience-container-platform.html" target="_blank"&gt;Container platform essentials&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/12/integration-key-to-customer-experience-storage-services.html" target="_blank"&gt;Storage services&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2019/01/integration-key-to-customer-experience-example-process-integration.html" target="_blank"&gt;Example process integration&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2019/03/integration-key-to-customer-experience-example-mobile-integration.html" target="_blank"&gt;Example mobile integration&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2019/04/integration-key-to-customer-experience-example-service-integration.html" target="_blank"&gt;Example service integration&lt;/a&gt;&lt;/li&gt;&lt;li&gt;More example integration blueprints&lt;/li&gt;&lt;/ol&gt;Catch up on any articles you missed by following one of the links above.&lt;br /&gt;&lt;br /&gt;Next in this series, we start taking a look at more specific integration architecture blueprints that tie in all the elements we've discussed as part of a specific case in an architecture for omnichannel customer experience.&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=NkBaRQwcpGc:IGpL83HoD0E:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=NkBaRQwcpGc:IGpL83HoD0E:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=NkBaRQwcpGc:IGpL83HoD0E:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=NkBaRQwcpGc:IGpL83HoD0E:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=NkBaRQwcpGc:IGpL83HoD0E:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=NkBaRQwcpGc:IGpL83HoD0E:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=NkBaRQwcpGc:IGpL83HoD0E:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=NkBaRQwcpGc:IGpL83HoD0E:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=NkBaRQwcpGc:IGpL83HoD0E:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=NkBaRQwcpGc:IGpL83HoD0E:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=NkBaRQwcpGc:IGpL83HoD0E:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/NkBaRQwcpGc" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/OCblalSX89c" height="1" width="1" alt=""/&gt;</content><summary>Part 9 - Example service integration In my previous article from this series we looked in to details that determine how your integration becomes the key to transforming your customer experience. It started with laying out the process of how I've approached the use case by researching successful customer portfolio solutions as the basis for a generic architectural blueprint. Let's continue looking ...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-04-15T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/NkBaRQwcpGc/integration-key-to-customer-experience-example-service-integration.html</feedburner:origLink></entry><entry><title>5 Red Hat Summit sessions developers won’t want to miss</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/LDK6g3s7oFc/" /><category term="community" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="red hat summit" scheme="searchisko:content:tags" /><author><name>Doug Tidwell</name></author><id>searchisko:content:id:jbossorg_blog-5_red_hat_summit_sessions_developers_won_t_want_to_miss</id><updated>2019-04-13T07:00:09Z</updated><published>2019-04-13T07:00:09Z</published><content type="html">&lt;p&gt;Oh sure, like countless thousands of others you&amp;#8217;re planning on attending &lt;a href="https://www.redhat.com/en/summit/2019"&gt;Red Hat Summit in Boston&lt;/a&gt; this year. But you&amp;#8217;re a little anxious that you might miss the best sessions at the show. In no particular order, here are five sessions (actually five sessions and a workshop) that will enrich your life, expand your horizons, and give you the knowledge you need to lead your team forward. Be sure to check them out.&lt;span id="more-585187"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Red Hat Enterprise Linux roadmap&lt;/h2&gt; &lt;p&gt;Wednesday, May 8, 10:30–11:15 a.m.&lt;/p&gt; &lt;p&gt;Perry Myers and Ronald Pacheco will talk about how the new capabilities being built into Red Hat Enterprise Linux make it the foundation for the open hybrid cloud. There is a whole track titled &amp;#8220;Road to Red Hat Enterprise Linux 8&amp;#8221; that includes lots of great sessions. If I had to choose only one (and I just did), this is the one I&amp;#8217;d attend.&lt;/p&gt; &lt;p&gt;For a great discussion of the open hybrid cloud, see &lt;a href="https://www.redhat.com/en/blog/why-what-and-how-open-hybrid-cloud"&gt;Irshad Raihan&amp;#8217;s excellent article &amp;#8220;The why, what, and how of the open hybrid cloud.&amp;#8221;&lt;/a&gt;&lt;br /&gt; &lt;!--more--&gt;&lt;/p&gt; &lt;h2&gt;How do you OpenShift?&lt;/h2&gt; &lt;p&gt;Tuesday, May 7, 2:30–3:15 p.m.&lt;/p&gt; &lt;p&gt;Jared Burck will run the gamut of ways to build cloud-native applications with OpenShift, covering &lt;a href="https://www.okd.io/minishift/"&gt;Minishift&lt;/a&gt; versus CodeReady Containers (formerly the &lt;a href="https://developers.redhat.com/products/cdk/overview"&gt;Red Hat Container Development Kit&lt;/a&gt;), &lt;a href="https://docs.openshift.com/container-platform/3.7/cli_reference/get_started_cli.html"&gt;oc&lt;/a&gt; versus &lt;a href="https://github.com/openshift/odo/blob/master/docs/getting-started.md"&gt;odo&lt;/a&gt;, IDEs, utilities, runtimes, and other things you need to know to become a container development expert.&lt;/p&gt; &lt;h2&gt;Red Hat Enterprise Linux 8 beta container tools&lt;/h2&gt; &lt;p&gt;Wednesday, May 8, 4:30–5:15 p.m.&lt;/p&gt; &lt;p&gt;Scott McCarty and Dan Walsh will show you how to use the post-Docker container tools in the Red Hat Enterprise Linux 8 beta. &lt;a href="https://podman.io"&gt;Podman&lt;/a&gt;, &lt;a href="https://buildah.io"&gt;buildah&lt;/a&gt;, and &lt;a href="https://blog.openshift.com/promoting-container-images-between-registries-with-skopeo/"&gt;skopeo&lt;/a&gt; make it easy to build rootless containers (containers that don&amp;#8217;t require root access). Combining those tools with base images and container runtimes based on Red Hat Enterprise Linux gives you a powerful way to build and manage your containers. Dan and Scott will demonstrate podman in action, including its support for pod management and superior security features.&lt;/p&gt; &lt;p&gt;See &lt;a href="https://developers.redhat.com/blog/2019/02/21/podman-and-buildah-for-docker-users/"&gt;William Henry&amp;#8217;s article &amp;#8220;Podman and Buildah for Docker users&amp;#8221;&lt;/a&gt; if you&amp;#8217;d like some background before the session.&lt;/p&gt; &lt;h2&gt;Deliver cloud-native microservices with Knative on Red Hat OpenShift&lt;/h2&gt; &lt;p&gt;Thursday, May 9, 12:45–2:15 p.m.&lt;/p&gt; &lt;p&gt;In this workshop (no, it&amp;#8217;s not a session, but you&amp;#8217;ll learn a lot), David Gordon and Michael Costello will give you hands-on experience with cutting-edge tools. You&amp;#8217;ll build a microservice on Red Hat OpenShift, you&amp;#8217;ll set up a cloud-native CI/CD pipeline, then you&amp;#8217;ll work with &lt;a href="https://cloud.google.com/knative/"&gt;Knative&lt;/a&gt;. This is a fantastic opportunity to work with the most important serverless framework around.&lt;/p&gt; &lt;h2&gt;Quarkus—The framework and stack for a true cloud-native Java future&lt;/h2&gt; &lt;p&gt;Tuesday, May 7, 3:45–4:30 p.m.&lt;/p&gt; &lt;p&gt;TL;DR: &lt;a href="https://developers.redhat.com/blog/2019/03/20/quarkus-0-12-0-released/"&gt;Quarkus&lt;/a&gt; makes your cloud-native Java code run 10x to 100x faster. Seriously.&lt;/p&gt; &lt;p&gt;Assuming your heart is pounding at the thought of your hard-earned Java skills remaining relevant in today&amp;#8217;s containerized world, attend this session to learn about one of the hottest topics in the development world right now.&lt;/p&gt; &lt;p&gt;InfoQ recently published &lt;a href="https://www.infoq.com/news/2019/04/redhat-quarkus-qa"&gt;a very interesting Q&amp;#38;A with Red Hat&amp;#8217;s John Clingan and Mark Little&lt;/a&gt; if you&amp;#8217;d like more information.&lt;/p&gt; &lt;h2&gt;Streamline cloud-native application development with CodeReady Workspaces&lt;/h2&gt; &lt;p&gt;Tuesday, May 7, 10:30–11:15 a.m.&lt;/p&gt; &lt;p&gt;Stévan Le Meur will demonstrate the features of &lt;a href="https://developers.redhat.com/products/codeready-workspaces/overview"&gt;CodeReady Workspaces&lt;/a&gt;, the Red Hat-supported version of &lt;a href="https://www.eclipse.org/che/"&gt;Eclipse Che&lt;/a&gt;. In this session, you&amp;#8217;ll learn how to set up workspaces and &lt;a href="https://developers.redhat.com/che/creating-factories"&gt;factories&lt;/a&gt; to standardize development environments across your team. CodeReady Workspaces enable container-based development, simplify onboarding for new team members, and eliminate the &amp;#8220;It works on my machine&amp;#8221; syndrome.&lt;/p&gt; &lt;p&gt;(Note: It&amp;#8217;s possible your author will be part of this session. Stévan is awesome, so don&amp;#8217;t let that scare you away.)&lt;/p&gt; &lt;h2&gt;Where and how to register&lt;/h2&gt; &lt;p&gt;If you haven&amp;#8217;t registered yet, visit &lt;a href="https://www.redhat.com/en/summit/2019"&gt;Red Hat Summit&lt;/a&gt; to sign up. See you in Boston!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F13%2F5-red-hat-summit-sessions-developers-wont-want-to-miss%2F&amp;#38;linkname=5%20Red%20Hat%20Summit%20sessions%20developers%20won%E2%80%99t%20want%20to%20miss" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F13%2F5-red-hat-summit-sessions-developers-wont-want-to-miss%2F&amp;#38;linkname=5%20Red%20Hat%20Summit%20sessions%20developers%20won%E2%80%99t%20want%20to%20miss" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F13%2F5-red-hat-summit-sessions-developers-wont-want-to-miss%2F&amp;#38;linkname=5%20Red%20Hat%20Summit%20sessions%20developers%20won%E2%80%99t%20want%20to%20miss" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F13%2F5-red-hat-summit-sessions-developers-wont-want-to-miss%2F&amp;#38;linkname=5%20Red%20Hat%20Summit%20sessions%20developers%20won%E2%80%99t%20want%20to%20miss" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F13%2F5-red-hat-summit-sessions-developers-wont-want-to-miss%2F&amp;#38;linkname=5%20Red%20Hat%20Summit%20sessions%20developers%20won%E2%80%99t%20want%20to%20miss" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F13%2F5-red-hat-summit-sessions-developers-wont-want-to-miss%2F&amp;#38;linkname=5%20Red%20Hat%20Summit%20sessions%20developers%20won%E2%80%99t%20want%20to%20miss" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F13%2F5-red-hat-summit-sessions-developers-wont-want-to-miss%2F&amp;#38;linkname=5%20Red%20Hat%20Summit%20sessions%20developers%20won%E2%80%99t%20want%20to%20miss" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F13%2F5-red-hat-summit-sessions-developers-wont-want-to-miss%2F&amp;#38;linkname=5%20Red%20Hat%20Summit%20sessions%20developers%20won%E2%80%99t%20want%20to%20miss" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F13%2F5-red-hat-summit-sessions-developers-wont-want-to-miss%2F&amp;#038;title=5%20Red%20Hat%20Summit%20sessions%20developers%20won%E2%80%99t%20want%20to%20miss" data-a2a-url="https://developers.redhat.com/blog/2019/04/13/5-red-hat-summit-sessions-developers-wont-want-to-miss/" data-a2a-title="5 Red Hat Summit sessions developers won’t want to miss"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/13/5-red-hat-summit-sessions-developers-wont-want-to-miss/"&gt;5 Red Hat Summit sessions developers won&amp;#8217;t want to miss&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/LDK6g3s7oFc" height="1" width="1" alt=""/&gt;</content><summary>Oh sure, like countless thousands of others you’re planning on attending Red Hat Summit in Boston this year. But you’re a little anxious that you might miss the best sessions at the show. In no particular order, here are five sessions (actually five sessions and a workshop) that will enrich your life, expand your horizons, and give you the knowledge you need to lead your team forward. Be sure to c...</summary><dc:creator>Doug Tidwell</dc:creator><dc:date>2019-04-13T07:00:09Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/13/5-red-hat-summit-sessions-developers-wont-want-to-miss/</feedburner:origLink></entry><entry><title>Red Hat Summit 2019 Labs: Integration and APIs roadmap</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/HCPGzuSPxoo/" /><category term="Agile Integration" scheme="searchisko:content:tags" /><category term="API" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="events" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="hybrid cloud" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Products" scheme="searchisko:content:tags" /><category term="red hat summit" scheme="searchisko:content:tags" /><category term="summit labs" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_summit_2019_labs_integration_and_apis_roadmap</id><updated>2019-04-12T15:00:07Z</updated><published>2019-04-12T15:00:07Z</published><content type="html">&lt;p&gt;&lt;a href="https://www.redhat.com/en/summit/2019" target="_blank" rel="noopener noreferrer"&gt;Red Hat Summit 2019&lt;/a&gt; is rocking Boston, MA from May 7-9 in the &lt;a href="https://www.signatureboston.com/BCEC" target="_blank" rel="noopener noreferrer"&gt;Boston Convention and Exhibition Center&lt;/a&gt;. Everything you need to know about the current state of open source enterprise-ready software can be found at this event. From customers talking about their experiences leveraging open source in their solutions, to the creators of open source technologies you&amp;#8217;re using, and all the way down to hands-on lab experiences on these technologies.&lt;/p&gt; &lt;p&gt;This hands-on appeal is what this series of articles is about. Previously, we looked at the &lt;a href="https://developers.redhat.com/blog/2019/03/31/red-hat-summit-2019-labs-cloud-native-app-dev-roadmap/"&gt;labs in the Cloud-Native App Dev track&lt;/a&gt;, and this time, we provide a roadmap to the &amp;#8220;Integration and APIs&amp;#8221; lab content.&lt;/p&gt; &lt;p&gt;&lt;span id="more-585877"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The following labs can be found in the &lt;a href="https://summit.redhat.com/conference/sessions" target="_blank" rel="noopener noreferrer"&gt;session catalog online&lt;/a&gt;, by searching on title or filtering on &amp;#8220;instructor-led lab&amp;#8221; and &amp;#8220;Integration &amp;#38; APIs.&amp;#8221;&lt;/p&gt; &lt;h3&gt;Agile integration with APIs and containers workshop&lt;/h3&gt; &lt;p&gt;The agile integration with APIs and containers session is a hands-on workshop for developing, testing, and deploying integrated cloud-native solutions.&lt;/p&gt; &lt;p&gt;This 2-hour lab will start with an overview of agile integration and a discussion of the necessary architecture. We’ll also present examples of how customers are using Red Hat’s agile integration methodology to stay competitive. This hands-on workshop is designed for integrators who will be leading the activities of API development and security. These activities are UI-driven and allow the integrator to successfully deploy, integrate, (Red Hat Fuse), secure, and manage API services. We&amp;#8217;ll also cover accelerating the development of cloud-native applications, developing API-centric services, providing API security, and establishing operational management.&lt;br /&gt; &lt;i&gt;&lt;br /&gt; &lt;/i&gt;&lt;i&gt;Speakers: Simon Green, Yossi Koren, Christina WeiMei Lin, Vinay Bhalerao&lt;/i&gt;&lt;/p&gt; &lt;h3&gt;Agile integration for the enterprise&lt;/h3&gt; &lt;p&gt;Organizations invest in a deep portfolio of technologies to meet diverse business requirements. The interconnectivity of these systems is fundamental to the success of the business. To keep pace with the competition, solutions must achieve scalability to meet market demand, as well as to meet business stakeholder requirements. Agile integration is the key to the success of organizations seeking to scale and support demanding stakeholder expectations.&lt;/p&gt; &lt;p&gt;In this lab, you&amp;#8217;ll learn to use Red Hat’s integration portfolio for various use cases, including:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Integrating applications without coding.&lt;/li&gt; &lt;li&gt;Implementing advanced integration scenarios that use multiple backend services.&lt;/li&gt; &lt;li&gt;Becoming fluent with a variety of deployment methodologies.&lt;/li&gt; &lt;li&gt;Building fault-tolerant microservices applications.&lt;/li&gt; &lt;li&gt;Facilitating integration to legacy systems, by exposing these systems as microservices.&lt;/li&gt; &lt;li&gt;Designing, exposing, and managing REST APIs.&lt;/li&gt; &lt;li&gt;Applying service-level agreements to microservices monitoring.&lt;/li&gt; &lt;li&gt;Using cloud-native infrastructure to host a highly available integration solution.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You&amp;#8217;ll get hands-on experience with Red Hat Fuse Online, Red Hat Fuse for OpenShift Container Platform, Red Hat Fuse for Red Hat JBoss Enterprise Application Platform (EAP), ISTIO, Red Hat 3scale API Management, and Red Hat OpenShift Application Runtimes.&lt;/p&gt; &lt;p&gt;&lt;i&gt;Speakers: Andrew Block, Chad Darby, Hong Hua Chin&lt;/i&gt;&lt;/p&gt; &lt;h3&gt;Bridging microservice boundaries with Apache Kafka and Debezium&lt;/h3&gt; &lt;p&gt;Domain-driven design suggests splitting large systems into bounded contexts. Implemented by independent teams as loosely coupled microservices, this pattern lets organizations adapt to new business requirements quickly. While they shouldn’t share resources such as a common database, services don’t exist in isolation either: often one service needs data from another for providing its functionality.&lt;/p&gt; &lt;p&gt;In this lab. we&amp;#8217;ll cover:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;How microservices can share data using Apache Kafka while maintaining proper isolation and independence.&lt;/li&gt; &lt;li&gt;How to use change data capture (CDC) to stream data changes directly out of a database, without any application changes needed.&lt;/li&gt; &lt;li&gt;How to propagate the data owned by a microservice to sync systems such as caches and full-text search indexes.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Based on Red Hat OpenShift, Red Hat AMQ streams, Kafka, and Debezium, an open source CDC solution. This hands-on lab will guide you through the steps to successfully implement asynchronous data exchange patterns between your microservices.&lt;/p&gt; &lt;p&gt;&lt;i&gt;Speakers: Emmanuel Bernard, Gunnar Morling, Marius Bogoevici, Paolo Patierno&lt;/i&gt;&lt;/p&gt; &lt;h3&gt;Learning to use the Camel Rest DSL with 3scale and OpenShift&lt;/h3&gt; &lt;p&gt;This lab will give an introduction to the open source integration framework Apache Camel, the upstream project for Red Hat Fuse, as well as Red Hat 3scale API Automation and Red Hat OpenShift Container Platform. You&amp;#8217;ll learn Camel basics and be walked through developing and deploying a route with Spring Boot. We&amp;#8217;ll also cover how to use Camel with OpenShift Container Platform and 3Scale API Automation to have web-scale applications and with fully managed APIs. Due to the common need for REST APIs in enterprise applications, we&amp;#8217;ll cover how to start writing a REST Camel route using examples of the Camel REST DSL.&lt;/p&gt; &lt;p&gt;Come learn how to deploy camel routes onto OpenShift Container Platform and set up API management using 3scale API Management to manage your API usage, URLs, and more.&lt;br /&gt; &lt;i&gt;&lt;br /&gt; Speakers: Claus Ibsen, Mary Cochran, Dusty Humphries&lt;/i&gt;&lt;/p&gt; &lt;h3&gt;Navigating hybrid cloud integration—a hackathon&lt;/h3&gt; &lt;p&gt;Be innovative and create your own hybrid integration solution with Red Hat integration technology to solve day-to-day integration challenges. You&amp;#8217;ll be handed a set of integration problems to choose from and have access to Red Hat Fuse, Red Hat&amp;#8217;s integration platform. You can work individually or in groups to build your integration solution on top of it. Common challenges include connecting to brownfield system, SaaS applications, handling streaming of events, and providing APIs.&lt;/p&gt; &lt;p&gt;&lt;i&gt;Speaker: Gary Gaughan, Nicola Ferraro, Christina WeiMei Lin, Evan Shortiss, Hugo Guerrero Olivares&lt;/i&gt;&lt;i&gt;&lt;br /&gt; &lt;/i&gt;&lt;/p&gt; &lt;h3&gt;Running Apache Kafka on OpenShift with AMQ streams&lt;/h3&gt; &lt;p&gt;In this lab, you’ll learn the practical aspects of deploying, operating, and interacting with an Apache Kafka cluster on Red Hat OpenShift Container Platform thanks to Red Hat AMQ streams. We&amp;#8217;ll cover how to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Manage Apache Kafka clusters, topics, and users on OpenShift Container Platform using the AMQ streams operators and Kubernetes custom resources (CRDs).&lt;/li&gt; &lt;li&gt;Self-service your Kafka clusters, topics, and users by monitoring specific projects.&lt;/li&gt; &lt;li&gt;Create persistent Kafka clusters using persistent volume.&lt;/li&gt; &lt;li&gt;Interact with your Kafka cluster from both within and outside the OpenShift Container Platform instance, using a set of sample applications.&lt;/li&gt; &lt;li&gt;Manage and monitor your Kafka clusters, using Grafana and Prometheus.&lt;/li&gt; &lt;li&gt;Implement a cross-datacenter solution using MirrorMaker deployed by the AMQ streams cluster operator.&lt;/li&gt; &lt;li&gt;Handle cluster and clients TLS certificates for encryption and authentication.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;i&gt;Speaker: Marius Bogoevici, Paolo Patierno, Emmanuel Bernard, Gunnar Morling&lt;/i&gt;&lt;/p&gt; &lt;p&gt;Register now for one of these instructor-led labs at &lt;a href="https://www.redhat.com/en/summit/2019"&gt;Red Hat Summit 2019&lt;/a&gt;. We look forward to seeing you there!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Fred-hat-summit-2019-labs-integration-and-apis-roadmap%2F&amp;#38;linkname=Red%20Hat%20Summit%202019%20Labs%3A%20Integration%20and%20APIs%20roadmap" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Fred-hat-summit-2019-labs-integration-and-apis-roadmap%2F&amp;#38;linkname=Red%20Hat%20Summit%202019%20Labs%3A%20Integration%20and%20APIs%20roadmap" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Fred-hat-summit-2019-labs-integration-and-apis-roadmap%2F&amp;#38;linkname=Red%20Hat%20Summit%202019%20Labs%3A%20Integration%20and%20APIs%20roadmap" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Fred-hat-summit-2019-labs-integration-and-apis-roadmap%2F&amp;#38;linkname=Red%20Hat%20Summit%202019%20Labs%3A%20Integration%20and%20APIs%20roadmap" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Fred-hat-summit-2019-labs-integration-and-apis-roadmap%2F&amp;#38;linkname=Red%20Hat%20Summit%202019%20Labs%3A%20Integration%20and%20APIs%20roadmap" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Fred-hat-summit-2019-labs-integration-and-apis-roadmap%2F&amp;#38;linkname=Red%20Hat%20Summit%202019%20Labs%3A%20Integration%20and%20APIs%20roadmap" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Fred-hat-summit-2019-labs-integration-and-apis-roadmap%2F&amp;#38;linkname=Red%20Hat%20Summit%202019%20Labs%3A%20Integration%20and%20APIs%20roadmap" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Fred-hat-summit-2019-labs-integration-and-apis-roadmap%2F&amp;#38;linkname=Red%20Hat%20Summit%202019%20Labs%3A%20Integration%20and%20APIs%20roadmap" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Fred-hat-summit-2019-labs-integration-and-apis-roadmap%2F&amp;#038;title=Red%20Hat%20Summit%202019%20Labs%3A%20Integration%20and%20APIs%20roadmap" data-a2a-url="https://developers.redhat.com/blog/2019/04/12/red-hat-summit-2019-labs-integration-and-apis-roadmap/" data-a2a-title="Red Hat Summit 2019 Labs: Integration and APIs roadmap"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/12/red-hat-summit-2019-labs-integration-and-apis-roadmap/"&gt;Red Hat Summit 2019 Labs: Integration and APIs roadmap&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/HCPGzuSPxoo" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Summit 2019 is rocking Boston, MA from May 7-9 in the Boston Convention and Exhibition Center. Everything you need to know about the current state of open source enterprise-ready software can be found at this event. From customers talking about their experiences leveraging open source in their solutions, to the creators of open source technologies you’re using, and all the way down to hand...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-04-12T15:00:07Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/12/red-hat-summit-2019-labs-integration-and-apis-roadmap/</feedburner:origLink></entry><entry><title>Long 2h Apache Camel video (sorry it's in danish)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/64amRTLKpeo/long-2h-apache-camel-video-sorry-its-in.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><category term="Knative" scheme="searchisko:content:tags" /><category term="roadmap" scheme="searchisko:content:tags" /><category term="video" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-long_2h_apache_camel_video_sorry_it_s_in_danish</id><updated>2019-04-12T08:14:56Z</updated><published>2019-04-12T08:14:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;A couple of days ago I was back in Copenhagen, at the capital region IT division for health care, where my Apache Camel journey &lt;a href="http://www.davsclaus.com/2008/07/apache-camel-140-released.html"&gt;started in 2008&lt;/a&gt;. So it was great being back at that magical place ;)&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-XogT6nBe2bg/XLBGBfGV_cI/AAAAAAAAB54/v2Y41MWPMqI6IlOMb82vQqyhHKxe8BtBACLcBGAs/s1600/IMG_9245.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="256" data-original-width="192" src="https://2.bp.blogspot.com/-XogT6nBe2bg/XLBGBfGV_cI/AAAAAAAAB54/v2Y41MWPMqI6IlOMb82vQqyhHKxe8BtBACLcBGAs/s1600/IMG_9245.jpg" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;The event was hosted by &lt;a href="https://javagruppen.dk/2019/03/12/camel-k-gaa-hjem-mode.html"&gt;Javagruppen&lt;/a&gt; and they had video equipment so they streamed the event live on youtube.&lt;br /&gt;&lt;br /&gt;The agenda of my 2 hour session was:&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;What is Apache Camel?&lt;/li&gt;&lt;li&gt;Apache Camel v3&lt;/li&gt;&lt;li&gt;Apache Camel K&lt;/li&gt;&lt;li&gt;Knative &amp;amp; Camel&lt;/li&gt;&lt;li&gt;Quarkus &amp;amp; Camel&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;div&gt;The main topic of the session was the new Apache Camel K project, but I gave a good extended coverage of what's coming in the upcoming Apache Camel v3.&lt;/div&gt;&lt;br /&gt;For anyone curious a bit what is coming in Apache Camel v3, then you can take a look at the slides as they are in english.&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;The &lt;a href="https://www.slideshare.net/davsclaus/apache-camel-k-copenhagen-v2"&gt;slides of the talk is here&lt;/a&gt;:&lt;br /&gt;&lt;br /&gt;&lt;a href="https://www.slideshare.net/davsclaus/apache-camel-k-copenhagen-v2" style="text-align: center;"&gt;&lt;img border="0" data-original-height="346" data-original-width="474" height="233" src="https://2.bp.blogspot.com/-RVNH75hhUSY/XLBHaF2U5PI/AAAAAAAAB6E/XK3nlb1-0c4OpGkBe3R7d-dzjprbQNBCgCLcBGAs/s320/Screen%2BShot%2B2019-04-12%2Bat%2B10.07.43.png" width="320" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;... and the &lt;a href="https://www.youtube.com/watch?v=AXDahzT5Zck"&gt;video is online at youtube (danish)&lt;/a&gt;:&lt;br /&gt;&lt;br /&gt;&lt;iframe allowfullscreen="" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/AXDahzT5Zck/0.jpg" frameborder="0" height="266" src="https://www.youtube.com/embed/AXDahzT5Zck?feature=player_embedded" width="320"&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=DnC_LR0glQU:U-kswj6-5kw:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=DnC_LR0glQU:U-kswj6-5kw:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=DnC_LR0glQU:U-kswj6-5kw:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=DnC_LR0glQU:U-kswj6-5kw:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=DnC_LR0glQU:U-kswj6-5kw:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=DnC_LR0glQU:U-kswj6-5kw:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=DnC_LR0glQU:U-kswj6-5kw:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/DnC_LR0glQU" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/64amRTLKpeo" height="1" width="1" alt=""/&gt;</content><summary>A couple of days ago I was back in Copenhagen, at the capital region IT division for health care, where my Apache Camel journey started in 2008. So it was great being back at that magical place ;) The event was hosted by Javagruppen and they had video equipment so they streamed the event live on youtube. The agenda of my 2 hour session was: What is Apache Camel? Apache Camel v3 Apache Camel K Knat...</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2019-04-12T08:14:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/DnC_LR0glQU/long-2h-apache-camel-video-sorry-its-in.html</feedburner:origLink></entry><entry><title>Migrating Java applications to Quarkus: Lessons learned</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Cp29xpAF3a4/" /><category term="community" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><author><name>Filippe Spolti</name></author><id>searchisko:content:id:jbossorg_blog-migrating_java_applications_to_quarkus_lessons_learned</id><updated>2019-04-12T07:03:41Z</updated><published>2019-04-12T07:03:41Z</published><content type="html">&lt;p&gt;Migrating applications from a well-grounded framework to a completely new framework just a few days after its public release sounds crazy, right? Before doing so, I asked myself several questions, such as: Why should I do that? Is this new framework stable? What would be the gain? To me, the most important of these is: Why?&lt;/p&gt; &lt;p&gt;To help answer that question, I started thinking about my application&amp;#8217;s performance—in this case, the bootstrap time—and asked myself whether I was happy with the actual time my application took to start up. The answer was no. And, nowadays, this is one of the most important metrics to be considered when working with microservices, mainly on a serverless architecture.&lt;/p&gt; &lt;p&gt;The goal of this article is to provide a point of reference for a basic migration of an existing Java EE application to &lt;a href="https://developers.redhat.com/blog/tag/quarkus/"&gt;Quarkus&lt;/a&gt;. For this reason, I&amp;#8217;ll save a few lines of the article by not &lt;a href="https://developers.redhat.com/blog/2019/03/20/quarkus-0-12-0-released/"&gt;introducing Quarkus&lt;/a&gt; and focus mostly on the migration part. If you don&amp;#8217;t know what Quarkus is, then I recommend reading this article and visiting the &lt;a href="https://quarkus.io"&gt;Quarkus homepage&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;In this article, I&amp;#8217;ll try to illustrate all the changes, or at least the most important changes, that I had to do on my existing application to make it run well with Quarkus.&lt;span id="more-579287"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;A little background&lt;/h2&gt; &lt;p&gt;The app used is a&lt;a href="https://github.com/rebase-it/rebot"&gt; Telegram API + Bot&lt;/a&gt; with several plugins that I&amp;#8217;ve been using as a playground where I can try new things, frameworks, etc. When this app was created, we decided to create a Telegram Java EE API so we could run it in any application server or framework that implements all the EE 7 Standards. The main reason was the ability to use cool stuff like CDI, JPA, and Rest. It was designed for WildFly Swarm, which is now called&lt;a href="https://thorntail.io/"&gt; Thorntail&lt;/a&gt;. Since then there have been no framework changes. Once Quarkus was released, I decided to take a further look at it, and the first impressions were amazing. It supports all the dependencies that I had initially, and most importantly, the ability to create native container images with GraalVM. So, I thought, why not give it a try?&lt;/p&gt; &lt;p&gt;Of course, a migration like this is not easy.&lt;/p&gt; &lt;h2&gt;First steps&lt;/h2&gt; &lt;p&gt;When I started to migrate the application, I divided the work into smaller sections, such as:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Dependencies&lt;/li&gt; &lt;li&gt;Divide and conquer (migrate modules, one by one)&lt;/li&gt; &lt;li&gt;Code changes&lt;/li&gt; &lt;li&gt;Dependencies review&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Dependencies&lt;/h2&gt; &lt;p&gt;As you can imagine, the first thing I did was completely remove Thorntail dependencies—in my case, the BOM from parent pom and the related dependencies from every module. I changed this:&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;io.thorntail&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;bom&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;${version.io.thorntail}&amp;#60;/version&amp;#62; &amp;#60;scope&amp;#62;import&amp;#60;/scope&amp;#62; &amp;#60;type&amp;#62;pom&amp;#60;/type&amp;#62; &amp;#60;/dependency&amp;#62;&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;to:&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;io.quarkus&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;quarkus-bom&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;${io.quarkus.version}&amp;#60;/version&amp;#62; &amp;#60;type&amp;#62;pom&amp;#60;/type&amp;#62; &amp;#60;scope&amp;#62;import&amp;#60;/scope&amp;#62; &amp;#60;/dependency&amp;#62;&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;Next, I also had to remove the &lt;b&gt;javaee-api&lt;/b&gt; dependency, which is mostly used for CDI purposes, and replace it with the &lt;b&gt;quarkus-arc&lt;/b&gt;, one of the core libraries which provides dependency injection. So, I removed it from the parent pom and did a big replace on every &lt;i&gt;pom.xml:&lt;/i&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&amp;#60;dependency&amp;#62; &lt;span style="color: red;"&gt;- &amp;#60;groupId&amp;#62;javax&amp;#60;/groupId&amp;#62;&lt;/span&gt; &lt;span style="color: red;"&gt;- &amp;#60;artifactId&amp;#62;javaee-api&amp;#60;/artifactId&amp;#62;&lt;/span&gt; &lt;span style="color: green;"&gt;+ &amp;#60;groupId&amp;#62;io.quarkus&amp;#60;/groupId&amp;#62;&lt;/span&gt; &lt;span style="color: green;"&gt;+ &amp;#60;artifactId&amp;#62;quarkus-arc&amp;#60;/artifactId&amp;#62;&lt;/span&gt; &lt;span style="color: green;"&gt;+ &amp;#60;scope&amp;#62;provided&amp;#60;/scope&amp;#62;&lt;/span&gt; &amp;#60;/dependency&amp;#62;&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;Below you can find a few more dependencies that I had to change:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;io.thorntail:jaxrs -&amp;#62; io.quarkus:quarkus-resteasy&lt;/li&gt; &lt;li&gt;io.thorntail:jpa -&amp;#62; io.quarkus:quarkus-hibernate-orm&lt;/li&gt; &lt;li&gt;data validation -&amp;#62; io.quarkus:quarkus-hibernate-validator.&lt;/li&gt; &lt;li&gt;com.h2database -&amp;#62; io.quarkus:quarkus-jdbc-h2 (Quarkus already has some jdbc extensions, H2, MariaDB, and PostgreSQL; for Oracle, there is a good starting point&lt;a href="https://groups.google.com/forum/#!search/quarkus-dev$20jdbc/quarkus-dev/ewQt9npczxw/SUCMNNBTCAAJ"&gt; here&lt;/a&gt;).&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;On the project hierarchy, &lt;a href="https://github.com/rebase-it/rebot/tree/master/rebot-telegram"&gt;this&lt;/a&gt; is the module that produces the runnable jar, and it is here that we need to take out the &lt;a href="https://github.com/rebase-it/rebot/blob/0.x/rebot-telegram/pom.xml#L144-L161"&gt; Thorntail maven plugin&lt;/a&gt; and put in the &lt;a href="https://github.com/spolti/rebot/blob/quarkus/rebot-telegram/pom.xml#L141-L168"&gt;Quarkus maven plugin&lt;/a&gt;. This is a very important step; without it, you will not be able to use Quarkus.&lt;/p&gt; &lt;p&gt;Note that when working with a multi-module project, you need to pay attention to the Quarkus dependencies. For example, if some of your modules expose a Rest endpoint, you&amp;#8217;ll need to use the &lt;b&gt;quarkus-resteasy&lt;/b&gt; extension. But, note that, in order to enable this extension, this dependency also needs to be declared on the runnable module.&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;io.quarkus&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;quarkus-resteasy&amp;#60;/artifactId&amp;#62; &amp;#60;scope&amp;#62;provided&amp;#60;/scope&amp;#62; &amp;#60;/dependency&amp;#62; &lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;To make sure the extensions were installed as expected, you can always verify the logs. Quarkus lets you know which extensions were installed, and a similar line is printed when the app is ready:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;&lt;em&gt;INFO [io.quarkus] Installed features: [agroal, cdi, hibernate-orm, jdbc-h2, narayana-jta, resteasy, scheduler]&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Now is the time when the fun really begins, with a lot of issues, missing dependencies, etc. The first time that the &lt;b&gt;mvn compile quarkus:dev&lt;/b&gt; or &lt;b&gt;mvn clean package&lt;/b&gt; is executed, don&amp;#8217;t panic; a lot of issues will happen, and remember, divide and conquer!&lt;/p&gt; &lt;h2&gt;Code changes&lt;/h2&gt; &lt;p&gt;At first, I confess I got a little bit scared, so that was the right time to take a breath, get a cup of coffee, and get things done!&lt;/p&gt; &lt;p&gt;The approach I used to make things easier was to make the build work first on the smaller modules and then move forward to accomplish the first goal: a successful build! At this point, I removed every dependency from the main pom.xml in order to build only the CoreAPI and the runnable jar.&lt;/p&gt; &lt;p&gt;After going through the dependencies, my IDE started to complain about unsatisfied dependencies. In this case, there was an issue related to EJB annotations. As you can see &lt;a href="https://github.com/rebase-it/rebot/blob/0.x/rebot-telegram/src/main/java/it/rebase/rebot/Startup.java#L40-L41"&gt;here&lt;/a&gt;, I used the EJB annotations to execute tasks during the app startup using @Startup, @PostConstruct, and @PreDestroy annotations. A simple way to fix it would be just to remove the EJB annotations and keep using the PostConstruct and add a CDI annotation (i.e., ApplicationScoped on class level). But Quarkus provides a fancy way to control the application&amp;#8217;s lifecycle, with the Startup and Shutdown events that can be observed in &lt;a href="https://github.com/rebase-it/rebot/blob/master/rebot-telegram/src/main/java/it/rebase/rebot/Startup.java#L61-L74"&gt;this&lt;/a&gt; example. For more details about this specific functionality, please refer to the Quarkus &lt;a href="https://quarkus.io/guides/application-lifecycle-events-guide"&gt;documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;One of the easiest parts was the&lt;a href="https://github.com/spolti/rebot/tree/quarkus/rebot-telegram-api"&gt; Core API&lt;/a&gt;, along with some basic changes to configure CDI. On the previous version, I was using the Service Provider Implementation and discovering new providers through Service Provider mechanism. With Quarkus, I could completely remove the Service Provider files and replace it with the &lt;a href="https://github.com/rebase-it/rebot/blob/master/rebot-telegram-api/rebot-telegram-api/src/main/resources/META-INF/beans.xml"&gt;beans.xml&lt;/a&gt; file. In my case, all modules that use CDI had to have the beans.xml file added as well so Quarkus could properly discovery CDI beans. Once that was done, I could move forward and try to build the CoreAPI. If you face an issue, like the example below, the first place you might want to look is whether the dependencies listed in the issue have the beans.xml.&lt;/p&gt; &lt;p&gt;An interesting issue I had to fix was a CDI Circular dependency where I was injecting ClassA and ClassB, but ClassB already was Injecting ClassA. I am not sure why Thorntail was accepting it, but Quarkus is very strict.&lt;/p&gt; &lt;p&gt;At this point, I successfully built the CoreAPI; it requires some &lt;a href="https://github.com/rebase-it/rebot/blob/master/rebot-telegram-api/rebot-telegram-api/src/main/java/it/rebase/rebot/telegram/api/UpdatesReceiver.java#L63"&gt;System Properties&lt;/a&gt; in order to correctly configure the application. If the required properties are not set, the app will fail to start. Previously, the API was expecting only System Properties; with Quarkus this configuration was improved by also reading the &lt;a href="https://github.com/rebase-it/rebot/blob/master/rebot-telegram/src/main/resources/META-INF/microprofile-config.properties"&gt;&lt;em&gt;microprofile-config.properties&lt;/em&gt;&lt;/a&gt;. Once the configuration of the app properties was done, I moved on to the plugins.&lt;/p&gt; &lt;p&gt;The first plugins I moved to Quarkus were the simplest ones that do not require Persistence or the Cache layer, for example, &lt;a href="https://github.com/rebase-it/rebot/tree/master/rebot-plugins/rebot-ping-plugin"&gt; this simple ping plugin&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Another point of attention is the use of private members; if you got a message similar to the one below, you will have to change the access modifiers. Or, if you really think that the access modifier needs to be private, you might want to use package-private instead:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;Found unrecommended usage of private members (use package-private instead) in application beans&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Wow, at this point I already have my app running with the first plugin on Quarkus:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;INFO [it.reb.reb.Startup] (main) The application is starting&amp;#8230;&lt;br /&gt; INFO [io.quarkus] (main) Quarkus 0.11.0 started in 0.359s.&lt;br /&gt; INFO [io.quarkus] (main) Installed features: [cdi]&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Because most of the logging stuff for my app is under the FINE log level, I would like to configure the logging to print only debug messages that belongs to my app. To achieve this, I had to add some logging configurations on the &lt;strong&gt;microprofile-config.properties&lt;/strong&gt;, just like the example below:&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;# DEBUG console logging quarkus.log.console.enable=true quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c] %s%e%n quarkus.log.console.level=TRACE # TRACE file logging quarkus.log.file.enable=true quarkus.log.file.path=/tmp/quarkus.log quarkus.log.file.level=TRACE quarkus.log.file.format=%d{HH:mm:ss} %-5p [%c{2.}]] (%t) %s%e%n # custom loggers quarkus.log.category."it.rebase".level=TRACE&lt;/pre&gt; &lt;/blockquote&gt; &lt;h3&gt;Scheduler&lt;/h3&gt; &lt;p&gt;One of the plugins I was using was the EJB timer. In order to take advantage of everything that Quarkus provides, however, I replaced the EJB timer with the &lt;b&gt;quarkus-scheduler&lt;/b&gt; extension (Quartz under the hood), which also works with Annotations. And, to be honest, its usage is very simple, that is:&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&lt;span class="pl-k"&gt;@Scheduled&lt;/span&gt;(&lt;span class="pl-c1"&gt;every&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1800s&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;delay&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;)&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;And its dependency:&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;io.quarkus&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;quarkus-scheduler&amp;#60;/artifactId&amp;#62; &amp;#60;scope&amp;#62;provided&amp;#60;/scope&amp;#62; &amp;#60;/dependency&amp;#62;&lt;/pre&gt; &lt;/blockquote&gt; &lt;h3&gt;Infinispan cache&lt;/h3&gt; &lt;p&gt;My app was using the Infinispan embedded cache where I was using specific Qualifiers and Producers to configure a different cache for different purposes and where I could just inject a specific cache according to my plugin needs. When I built the cache module, I got the following issue:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;[error]: Build step io.quarkus.arc.deployment.ArcAnnotationProcessor#build threw an exception: javax.enterprise.inject.spi.DefinitionException: Interceptor has no bindings: org.infinispan.jcache.annotation.CachePutInterceptor&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;This was fixed by updating the Infinispan dependencies:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Bump version from 9.1.1.Final to 9.4.9.Final&lt;/li&gt; &lt;li&gt;Update dependency from org.infinispan:infinispan-embedded to org.infinispan:infinispan-cdi-embedded&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;From this point, I got some CDI issues, like:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Unsatisfied dependency for type org.infinispan.manager.EmbeddedCacheManager#defaultCacheContainer&lt;/li&gt; &lt;li&gt;Unsatisfied dependency for type org.infinispan.cdi.embedded.InfinispanExtensionEmbedded#infinispanExtension&lt;/li&gt; &lt;li&gt;Unsatisfied dependency for type org.infinispan.Cache&amp;#60;java.lang.String, java.lang.String&amp;#62; and qualifiers [@Default]&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Basically, the issue is telling us that there are no Producers for the methods above. To fix that, I had to manually create producers to satisfy the missing dependencies; to start I modified the default cache by removing the old cache configuration that looks like:&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;@Produces @ConfigureCache("default-cache") @DefaultCache public Configuration specialCacheCfg(InjectionPoint injectionPoint) { ... }&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;And added the new cache configuration:&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;private DefaultCacheManager defaultCacheManager; @Produces @DefaultCache public Cache&amp;#60;String, String&amp;#62; returnDefaultCacheStringObject() { return defaultCacheContainer().getCache(); } @Produces public Configuration defaultCacheProducer() { log.info("Configuring default-cache..."); return new ConfigurationBuilder() .indexing() .autoConfig(true) .memory() .size(1000) .build(); } @Produces public EmbeddedCacheManager defaultCacheContainer() { if (null == defaultCacheManager) { GlobalConfiguration g = new GlobalConfigurationBuilder() .nonClusteredDefault() .defaultCacheName("default-cache") .globalJmxStatistics() .allowDuplicateDomains(false) .build(); defaultCacheManager = new DefaultCacheManager(g, defaultCacheProducer()); } return defaultCacheManager; } @Produces public InfinispanExtensionEmbedded defaultInfinispanExtensionEmbedded() { return new InfinispanExtensionEmbedded(); }&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;Another point I had to update was the &lt;a href="http://infinispan.org/docs/stable/user_guide/user_guide.html#listeners_and_notifications"&gt;Event Listeners.&lt;/a&gt; Here is an example before the changes:&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;@Listener public class KarmaEventListener { ... @CacheEntryCreated public void entryCreated(@Observes CacheEntryCreatedEvent event) { ... } }&lt;/pre&gt; &lt;/blockquote&gt; &lt;h3&gt;Persistence Module&lt;/h3&gt; &lt;p&gt;Besides the dependency changes described previously on Thorntail, to use the database, you would have to create a file called &lt;b&gt;project-defaults.yaml&lt;/b&gt; under &lt;b&gt;resources/&lt;/b&gt; path and declare the database information there in addition to the persistence.xml file. With Quarkus, this can be done by providing a file called &lt;b&gt;application.properties&lt;/b&gt; on the same path, as described &lt;a href="https://quarkus.io/guides/hibernate-orm-guide"&gt;here&lt;/a&gt;. Or, you can provide all the database settings using System Properties through the command line when running the binary. So, the two old files were replaced by the application.properties; here is an example:&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;quarkus.datasource.url=jdbc:h2:file:/opt/h2/database.db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE quarkus.datasource.driver=org.h2.Driver quarkus.datasource.username=rebot quarkus.datasource.password=rebot quarkus.datasource.max-size=8 quarkus.datasource.min-size=2 quarkus.hibernate-orm.database.generation=update quarkus.hibernate-orm.log.sql=false&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;Another little change was a tweak on the EntityManager Injection that had to be changed from:&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;@PersistenceContext(unitName = "rebotPU") private EntityManager em;&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;to&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;@Inject EntityManager em;&lt;/pre&gt; &lt;/blockquote&gt; &lt;h2&gt;Dependencies review&lt;/h2&gt; &lt;p&gt;I completely removed resteasy dependencies and used quarkus-resteasy instead. After removing the resteasy, a new issue started to happen:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;Caused by: java.lang.ClassNotFoundException: org.glassfish.jersey.client.JerseyClientBuilder&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;To solve this, three new dependencies had to be added on the modules that were using the &lt;strong&gt;javax.ws.rs.client.ClientBuilder&lt;/strong&gt;. The new dependencies are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;org.glassfish.jersey.core:jersey-client&lt;/li&gt; &lt;li&gt;org.glassfish.jersey.inject:jersey-hk2&lt;/li&gt; &lt;li&gt;org.glassfish.jersey.media:jersey-media-json-jackson&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;It would definitely be worthwhile to investigate this further or drop the ClientBuilder usage.&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;WARN: RESTEASY002145: NoClassDefFoundError: Unable to load builtin provider org.jboss.resteasy.plugins.providers.DataSourceProvider from jar:file:/home/spolti/.m2/repository/org/jboss/resteasy/resteasy-core/4.0.0.Beta8/resteasy-core-4.0.0.Beta8.jar!/META-INF/services/javax.ws.rs.ext.Providers&lt;br /&gt; java.lang.NoClassDefFoundError: javax/activation/DataSource&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;This situation was fixed by adding the &lt;strong&gt;quarkus-hibernate-orm&lt;/strong&gt; on the module that failed with this issue.&lt;/p&gt; &lt;p&gt;I think I&amp;#8217;ve covered the most important points that came up during my experience while migrating my app to Quarkus. This was the first step; unfortunately, I was not able to build the native binary because the Infinispan embedded cache dependency is not ready for it yet. Definitely, one of the next steps would be to look for an alternative for it, which will be a topic for a new article.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Fmigrating-java-applications-to-quarkus-lessons-learned%2F&amp;#38;linkname=Migrating%20Java%20applications%20to%20Quarkus%3A%20Lessons%20learned" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Fmigrating-java-applications-to-quarkus-lessons-learned%2F&amp;#38;linkname=Migrating%20Java%20applications%20to%20Quarkus%3A%20Lessons%20learned" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Fmigrating-java-applications-to-quarkus-lessons-learned%2F&amp;#38;linkname=Migrating%20Java%20applications%20to%20Quarkus%3A%20Lessons%20learned" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Fmigrating-java-applications-to-quarkus-lessons-learned%2F&amp;#38;linkname=Migrating%20Java%20applications%20to%20Quarkus%3A%20Lessons%20learned" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Fmigrating-java-applications-to-quarkus-lessons-learned%2F&amp;#38;linkname=Migrating%20Java%20applications%20to%20Quarkus%3A%20Lessons%20learned" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Fmigrating-java-applications-to-quarkus-lessons-learned%2F&amp;#38;linkname=Migrating%20Java%20applications%20to%20Quarkus%3A%20Lessons%20learned" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Fmigrating-java-applications-to-quarkus-lessons-learned%2F&amp;#38;linkname=Migrating%20Java%20applications%20to%20Quarkus%3A%20Lessons%20learned" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Fmigrating-java-applications-to-quarkus-lessons-learned%2F&amp;#38;linkname=Migrating%20Java%20applications%20to%20Quarkus%3A%20Lessons%20learned" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Fmigrating-java-applications-to-quarkus-lessons-learned%2F&amp;#038;title=Migrating%20Java%20applications%20to%20Quarkus%3A%20Lessons%20learned" data-a2a-url="https://developers.redhat.com/blog/2019/04/12/migrating-java-applications-to-quarkus-lessons-learned/" data-a2a-title="Migrating Java applications to Quarkus: Lessons learned"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/12/migrating-java-applications-to-quarkus-lessons-learned/"&gt;Migrating Java applications to Quarkus: Lessons learned&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Cp29xpAF3a4" height="1" width="1" alt=""/&gt;</content><summary>Migrating applications from a well-grounded framework to a completely new framework just a few days after its public release sounds crazy, right? Before doing so, I asked myself several questions, such as: Why should I do that? Is this new framework stable? What would be the gain? To me, the most important of these is: Why? To help answer that question, I started thinking about my application’s pe...</summary><dc:creator>Filippe Spolti</dc:creator><dc:date>2019-04-12T07:03:41Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/12/migrating-java-applications-to-quarkus-lessons-learned/</feedburner:origLink></entry><entry><title>Understanding when not to std::move in C++</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/dO4_jJvIcO0/" /><category term="C++" scheme="searchisko:content:tags" /><category term="developer" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="gcc" scheme="searchisko:content:tags" /><category term="Programming Languages" scheme="searchisko:content:tags" /><author><name>Marek Polacek</name></author><id>searchisko:content:id:jbossorg_blog-understanding_when_not_to_std_move_in_c</id><updated>2019-04-12T07:00:29Z</updated><published>2019-04-12T07:00:29Z</published><content type="html">&lt;p&gt;One of the most important concepts introduced in C++11 was &lt;em&gt;&lt;a href="https://en.cppreference.com/w/cpp/language/move_constructor"&gt;move semantics&lt;/a&gt;. &lt;/em&gt;Move semantics is a way to avoid expensive deep copy operations and replace them with cheaper move operations. Essentially, you can think of it as turning a deep copy into a shallow copy.&lt;/p&gt; &lt;p&gt;Move semantics came along with several more or less related features, such as &lt;a href="https://en.cppreference.com/w/cpp/language/reference#Rvalue_references"&gt;&lt;em&gt;rvalue references&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://en.cppreference.com/w/cpp/language/value_category"&gt;&lt;em&gt;xvalues&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://en.cppreference.com/w/cpp/language/reference#Forwarding_references"&gt;&lt;em&gt;forwarding  references&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://en.cppreference.com/w/cpp/utility/forward"&gt;&lt;em&gt;perfect forwarding&lt;/em&gt;&lt;/a&gt;, and so on. The standard C++ library gained a function template called &lt;code&gt;std::move&lt;/code&gt;, which, despite its name, does not move anything. &lt;code&gt;std::move&lt;/code&gt; merely casts its argument to an rvalue reference to allow moving it, but doesn&amp;#8217;t guarantee a move operation. For example, we can write a more effective version of &lt;code&gt;swap&lt;/code&gt; using &lt;code&gt;std::move&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;template&amp;#60;typename T&amp;#62; void swap(T&amp;#38; a, T&amp;#38; b) { T t(std::move (a)); a = std::move (b); b = std::move (t); }&lt;/pre&gt; &lt;p&gt;This version of swap consists of one move construction and two move assignments and does not involve any deep copies. All is well. However, &lt;code&gt;std::move&lt;/code&gt; must be used judiciously; using it blithely may lead to performance degradation, or simply be redundant, affecting readability of the code. Fortunately, the compiler can sometimes help with finding such wrong uses of &lt;code&gt;std::move&lt;/code&gt;. In this article, I will introduce two new warnings I&amp;#8217;ve implemented for GCC 9 that deal with incorrect usage of &lt;code&gt;std::move&lt;/code&gt;.&lt;span id="more-583077"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;-Wpessimizing-move&lt;/h3&gt; &lt;p&gt;When returning a local variable of the same class type as the function return type, the compiler is free to omit any copying or moving (i.e., perform &lt;a href="https://en.cppreference.com/w/cpp/language/copy_elision"&gt;&lt;em&gt;copy/move elision&lt;/em&gt;&lt;/a&gt;), if the variable we are returning is a non-volatile automatic object and is not a function parameter. In such a case, the compiler can construct the object directly in its final destination (i.e., in the caller&amp;#8217;s stack frame). The compiler is free to perform this optimization even when the move/copy construction has side effects. Additionally, C++17 says that copy elision is mandatory in certain situations. This is what we call &lt;em&gt;Named Return Value Optimization&lt;/em&gt; (NRVO). (Note that this optimization does not depend on any of the &lt;code&gt;-O&lt;/code&gt; levels.) For instance:&lt;/p&gt; &lt;pre&gt;struct T { // ... }; T fn() { T t; return t; } T t = fn ();&lt;/pre&gt; &lt;p&gt;The object a function returns doesn&amp;#8217;t need to have a name. For example, the return statement in the function &lt;code&gt;fn&lt;/code&gt; above might be &lt;code&gt;return T();&lt;/code&gt; and copy elision would still apply. In this case, this optimization is simply &lt;em&gt;Return Value Optimization&lt;/em&gt; (RVO).&lt;/p&gt; &lt;p&gt;Some programmers might be tempted to &amp;#8220;optimize&amp;#8221; the code by putting &lt;code&gt;std::move&lt;/code&gt; into the return statement like this:&lt;/p&gt; &lt;pre&gt;T fn() { T t; return std::move (t); }&lt;/pre&gt; &lt;p&gt;However, here the call to &lt;code&gt;std::move&lt;/code&gt; precludes the NRVO, because it breaks the conditions specified in the C++ standard, namely &lt;a href="http://eel.is/c++draft/class.copy.elision"&gt;&lt;em&gt;[class.copy.elision]&lt;/em&gt;&lt;/a&gt;: the returned expression must be a name. The reason for this is that &lt;code&gt;std::move&lt;/code&gt; returns a reference, and in general, the compiler can&amp;#8217;t know to what object the function returns a reference to. So GCC 9 will issue a warning (when &lt;code&gt;-Wall&lt;/code&gt; is in effect):&lt;/p&gt; &lt;pre&gt;t.C:8:20: warning: moving a local object in a return statement prevents copy elision [-Wpessimizing-move] 8 | return std::move (t); | ~~~~~~~~~~^~~ t.C:8:20: note: remove ‘std::move’ call&lt;/pre&gt; &lt;h3&gt;-Wredundant-move&lt;/h3&gt; &lt;p&gt;When the class object that a function returns is a function parameter, copy elision is not possible. However, when all the other conditions for the RVO are satisfied, C++ (as per the resolution of &lt;a href="https://wg21.link/cwg1148"&gt;Core Issue 1148&lt;/a&gt;) says that a move operation should be used: overload resolution is performed as if the object were an rvalue (this is known as &lt;em&gt;two-stage overload resolution&lt;/em&gt;). The parameter is an lvalue (because it has a name), but it&amp;#8217;s about to be destroyed. Thus, the compiler ought to treat is as an rvalue.&lt;/p&gt; &lt;p&gt;For instance:&lt;/p&gt; &lt;pre&gt;struct T { T(const T&amp;#38;) = delete; T(T&amp;#38;&amp;#38;); }; T fn(T t) { return t; // move used implicitly }&lt;/pre&gt; &lt;p&gt;Explicitly using &lt;code&gt;return std::move (t);&lt;/code&gt; here would not be pessimizing—a move would be used in any case—it is merely redundant. The compiler can now point that out using the new warning &lt;code&gt;-Wredundant-move&lt;/code&gt;, enabled by &lt;code&gt;-Wextra&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;r.C:8:21: warning: redundant move in return statement [-Wredundant-move] 8 | return std::move(t); // move used implicitly | ~~~~~~~~~^~~ r.C:8:21: note: remove ‘std::move’ call&lt;/pre&gt; &lt;p&gt;Because the GNU C++ compiler implements &lt;a href="http://wg21.link/cwg1579"&gt;Core Issue 1579&lt;/a&gt;, the following call to &lt;code&gt;std::move&lt;/code&gt; is also redundant:&lt;/p&gt; &lt;pre&gt;struct U { }; struct T { operator U(); }; U f() { T t; return std::move (t); } &lt;/pre&gt; &lt;p&gt;Copy elision isn&amp;#8217;t possible here because the types &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;U&lt;/code&gt; don&amp;#8217;t match. But, the rules for the implicit rvalue treatment are less strict than the rules for the RVO, and the call to &lt;code&gt;std::move&lt;/code&gt; is not necessary.&lt;/p&gt; &lt;p&gt;There are situations where returning &lt;code&gt;std::move (expr)&lt;/code&gt; makes sense, however. The rules for the implicit move require that the selected constructor take an rvalue reference to the returned object&amp;#8217;s type. Sometimes that isn&amp;#8217;t the case. For example, when a function returns an object whose type is a class derived from the class type the function returns. In that case, overload resolution is performed a second time, this time treating the object as an lvalue:&lt;/p&gt; &lt;pre&gt;struct U { }; struct T : U { }; U f() { T t; return std::move (t); } &lt;/pre&gt; &lt;p&gt;While in general &lt;code&gt;std::move&lt;/code&gt; is a great addition to the language, it&amp;#8217;s not always appropriate to use it, and, sadly, the rules are fairly complicated. Fortunately, the compiler is able to recognize the contexts where a call to &lt;code&gt;std::move&lt;/code&gt; would either prevent elision of a move or a copy—or would actually not make a difference—and warns appropriately. Therefore, we recommend enabling these warnings and perhaps adjusting the code base. The reward may be a minor performance gain and cleaner code. GCC 9 will be part of &lt;a href="https://fedoraproject.org/wiki/Releases/30/Schedule"&gt;Fedora 30&lt;/a&gt;, but you can try it right now on &lt;a href="https://gcc.godbolt.org/"&gt;Godbolt&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Funderstanding-when-not-to-stdmove-in-c%2F&amp;#38;linkname=Understanding%20when%20not%20to%20std%3A%3Amove%20in%20C%2B%2B" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Funderstanding-when-not-to-stdmove-in-c%2F&amp;#38;linkname=Understanding%20when%20not%20to%20std%3A%3Amove%20in%20C%2B%2B" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Funderstanding-when-not-to-stdmove-in-c%2F&amp;#38;linkname=Understanding%20when%20not%20to%20std%3A%3Amove%20in%20C%2B%2B" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Funderstanding-when-not-to-stdmove-in-c%2F&amp;#38;linkname=Understanding%20when%20not%20to%20std%3A%3Amove%20in%20C%2B%2B" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Funderstanding-when-not-to-stdmove-in-c%2F&amp;#38;linkname=Understanding%20when%20not%20to%20std%3A%3Amove%20in%20C%2B%2B" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Funderstanding-when-not-to-stdmove-in-c%2F&amp;#38;linkname=Understanding%20when%20not%20to%20std%3A%3Amove%20in%20C%2B%2B" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Funderstanding-when-not-to-stdmove-in-c%2F&amp;#38;linkname=Understanding%20when%20not%20to%20std%3A%3Amove%20in%20C%2B%2B" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Funderstanding-when-not-to-stdmove-in-c%2F&amp;#38;linkname=Understanding%20when%20not%20to%20std%3A%3Amove%20in%20C%2B%2B" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F12%2Funderstanding-when-not-to-stdmove-in-c%2F&amp;#038;title=Understanding%20when%20not%20to%20std%3A%3Amove%20in%20C%2B%2B" data-a2a-url="https://developers.redhat.com/blog/2019/04/12/understanding-when-not-to-stdmove-in-c/" data-a2a-title="Understanding when not to std::move in C++"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/12/understanding-when-not-to-stdmove-in-c/"&gt;Understanding when not to std::move in C++&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/dO4_jJvIcO0" height="1" width="1" alt=""/&gt;</content><summary>One of the most important concepts introduced in C++11 was move semantics. Move semantics is a way to avoid expensive deep copy operations and replace them with cheaper move operations. Essentially, you can think of it as turning a deep copy into a shallow copy. Move semantics came along with several more or less related features, such as rvalue references, xvalues, forwarding  references, perfect...</summary><dc:creator>Marek Polacek</dc:creator><dc:date>2019-04-12T07:00:29Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/12/understanding-when-not-to-stdmove-in-c/</feedburner:origLink></entry></feed>
