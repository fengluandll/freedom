<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>From zero to Quarkus and Knative: The easy way</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/1fedqc_MGws/" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="Knative" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="minishift" scheme="searchisko:content:tags" /><category term="OpenShift Enterprise by Red Hat" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><category term="serverless" scheme="searchisko:content:tags" /><author><name>Alessandro Arrichiello</name></author><id>searchisko:content:id:jbossorg_blog-from_zero_to_quarkus_and_knative_the_easy_way</id><updated>2019-04-09T07:03:44Z</updated><published>2019-04-09T07:03:44Z</published><content type="html">&lt;p&gt;You&amp;#8217;ve probably already read about &lt;a href="https://developers.redhat.com/blog/2019/03/07/quarkus-next-generation-kubernetes-native-java-framework/"&gt;Quarkus&lt;/a&gt;, but you may not know that the superfast startup speed of Quarkus makes it the best candidate for working with Knative and serverless for your Function-as-a-Service (FaaS) projects.&lt;/p&gt; &lt;p&gt;Quarkus, also known as Supersonic, Subatomic Java, is a Kubernetes native Java stack tailored for GraalVM and OpenJDK HotSpot, crafted from the best-of-breed Java libraries and standards. &lt;a href="https://developers.redhat.com/blog/2019/03/20/knative-what-developers-need-to-know/"&gt;Knative&lt;/a&gt; is a Kubernetes-based platform to build, deploy, and manage modern serverless workloads. You can learn more in this &lt;a href="https://blog.openshift.com/knative-serving-your-serverless-services/"&gt;article series&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;This article does not provide a full deep dive on Knative or Quarkus. Instead, I aim to give you a quick and easy way to start playing with both technologies so you can further explore on your own.&lt;span id="more-581277"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Prerequisites&lt;/h2&gt; &lt;p&gt;In the following examples, I assume you&amp;#8217;ve already installed a Minishift machine. &lt;a href="https://www.okd.io/minishift/"&gt;Minishift&lt;/a&gt; is a tool that helps you run &lt;a href="https://www.okd.io/"&gt;OKD&lt;/a&gt; locally by launching a single-node OKD cluster inside a virtual machine. With Minishift, you can try out OKD or develop with it, day-to-day, on your local machine (Linux, Windows, or Mac).&lt;/p&gt; &lt;p&gt;Please keep in mind that, in this example, I&amp;#8217;m using the upstream version of Minishift; of course, you can replicate and run all the stuff on the &lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Container Development Kit (CDK)&lt;/a&gt; by Red Hat.&lt;/p&gt; &lt;p&gt;I&amp;#8217;ll execute all the following commands as a cluster administrator in the Red Hat OpenShift environment. Thus, you should switch to an admin user before continuing.&lt;/p&gt; &lt;h2&gt;Warm up the engines&lt;/h2&gt; &lt;p&gt;To begin, we need to set up Knative on Minishift. To do this, we need to clone the Minishift add-ons for Knative by the OpenShift team:&lt;/p&gt; &lt;pre&gt;$ git clone https://github.com/openshift-cloud-functions/minishift-addons $ minishift addons install minishift-addons/knative-istio $ minishift addons install minishift-addons/knative-build $ minishift addons install minishift-addons/knative-serving $ minishift addons install minishift-addons/knative-eventing&lt;/pre&gt; &lt;p&gt;After that, we can start the installation process for the first add-on: knative-istio.&lt;/p&gt; &lt;pre&gt;$ minishift addons apply knative-istio&lt;/pre&gt; &lt;p&gt;Once that step is complete, you can install the Knative resources:&lt;/p&gt; &lt;pre&gt;$ minishift addons apply knative-build $ minishift addons apply knative-serving $ minishift addons apply knative-eventing&lt;/pre&gt; &lt;p&gt;When you&amp;#8217;ve finished with all this setup, you should find a bunch of new pods running for enabling your Minishift to Knative:&lt;/p&gt; &lt;pre&gt;$ oc get pods --all-namespaces ... knative-build build-controller-85b9c8d7f-f6jj4 1/1 Running 0 2m knative-build build-webhook-66bfc7ffc8-8s9tq 1/1 Running 0 2m knative-eventing controller-manager-0 1/1 Running 0 1m knative-eventing eventing-controller-7d69f6945b-mhrrj 1/1 Running 0 1m knative-eventing in-memory-channel-controller-569f959967-qkt96 1/1 Running 0 1m knative-eventing in-memory-channel-dispatcher-c54844b75-5l7bv 1/1 Running 0 1m knative-eventing webhook-667567bc86-fz4p7 1/1 Running 0 1m knative-serving activator-5c8d4bbc9d-4mt6l 1/1 Running 0 1m knative-serving activator-5c8d4bbc9d-qw4jh 1/1 Running 0 1m knative-serving activator-5c8d4bbc9d-z65gt 1/1 Running 0 1m knative-serving autoscaler-5d6dcf98f8-pcmqb 1/1 Running 0 1m knative-serving controller-98c69fcc-xjwls 1/1 Running 0 1m knative-serving webhook-68dc778cb5-xmgwm 1/1 Running 0 1m&lt;/pre&gt; &lt;h2&gt;Setting up a Containers Image Registry&lt;/h2&gt; &lt;p&gt;Before playing with Knative Build, we should set up another prerequisite for this quickstart: a container image registry for our Quarkus Knative Build.&lt;/p&gt; &lt;p&gt;Unfortunately, as we&amp;#8217;ll see in few moments, the Quarkus quickstart example will generate (through Maven) Knative Build resources&amp;#8217; files using Kaniko as the Knative Build template. I&amp;#8217;ve tried to make Kaniko work with OpenShift internal registry but I had no luck with that. I also &lt;a href="https://github.com/GoogleContainerTools/kaniko/issues/623"&gt;opened an issue on GitHub&lt;/a&gt; for reporting the behavior.&lt;/p&gt; &lt;p&gt;Unfortunately, &lt;a href="https://github.com/GoogleContainerTools/kaniko/issues/400"&gt;Kaniko doesn&amp;#8217;t seem to play well&lt;/a&gt; with Quay.io Registry either. Another approach could be to move the Knative Build Template from Kaniko to &lt;a href="https://www.projectatomic.io/blog/2017/11/getting-started-with-buildah/"&gt;Buildah&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;But, we want the easiest and fastest way for getting Knative and Quarkus up &amp;#38; running, for this reason, we&amp;#8217;ll use the Dockerhub online registry instead.&lt;/p&gt; &lt;p&gt;To start, log in or register to Dockerhub, and then you&amp;#8217;re ready to create your container repository, named &lt;em&gt;quarkus-greetings.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-581517 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/FireShot-Capture-074-Docker-Hub-cloud.docker.com_-1024x506.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/FireShot-Capture-074-Docker-Hub-cloud.docker.com_.png" alt="" width="1920" height="949" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/FireShot-Capture-074-Docker-Hub-cloud.docker.com_.png 1920w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/FireShot-Capture-074-Docker-Hub-cloud.docker.com_-300x148.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/FireShot-Capture-074-Docker-Hub-cloud.docker.com_-768x380.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/FireShot-Capture-074-Docker-Hub-cloud.docker.com_-1024x506.png 1024w" sizes="(max-width: 1920px) 100vw, 1920px" /&gt;&lt;/p&gt; &lt;p&gt;We can now move forward with the Knative Build.&lt;/p&gt; &lt;h2&gt;Quarkus Knative Build&lt;/h2&gt; &lt;p&gt;We&amp;#8217;re now ready to check out the Quarkus quickstarts repo and start playing with Knative Build.&lt;/p&gt; &lt;pre&gt;$ git clone https://github.com/quarkusio/quarkus-quickstarts $ cd quarkus-quickstarts/getting-started-knative&lt;/pre&gt; &lt;p&gt;Then we can execute the Maven command for building up the Kubernetes resources&amp;#8217; files. We&amp;#8217;ll pass the following parameters to the Maven command:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Container registry URL&lt;/li&gt; &lt;li&gt;Container registry credentials&lt;/li&gt; &lt;li&gt;Git source repo&lt;/li&gt; &lt;li&gt;Target container image to push the build result&lt;/li&gt; &lt;/ul&gt; &lt;pre&gt;$ mvn -Dcontainer.registry.url='https://index.docker.io/v1/' \ &amp;#62; -Dcontainer.registry.user='alezzandro' \ &amp;#62; -Dcontainer.registry.password='XXXXXXXYYYYYYYZZZZZZZZ' \ &amp;#62; -Dgit.source.revision='master' \ &amp;#62; -Dgit.source.repo.url='https://github.com/quarkusio/quarkus-quickstarts.git' \ &amp;#62; -Dapp.container.image='quay.io/alezzandro/quarkus-greetings' \ &amp;#62; clean process-resources [INFO] Scanning for projects... [INFO] [INFO] ----------------&amp;#60; org.acme:quarkus-quickstart-knative &amp;#62;----------------- [INFO] Building quarkus-quickstart-knative 1.0-SNAPSHOT [INFO] --------------------------------[ jar ]--------------------------------- [INFO] [INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ quarkus-quickstart-knative --- [INFO] Deleting /home/alex/gitprojects/quarkus-quickstarts/getting-started-knative/target [INFO] [INFO] --- build-helper-maven-plugin:3.0.0:add-resource (add-resource) @ quarkus-quickstart-knative --- [INFO] [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ quarkus-quickstart-knative --- [INFO] Using 'UTF-8' encoding to copy filtered resources. [INFO] skip non existing resourceDirectory /home/alex/gitprojects/quarkus-quickstarts/getting-started-knative/src/main/resources [INFO] Copying 6 resources to /home/alex/gitprojects/quarkus-quickstarts/getting-started-knative/target/knative [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 1.840 s [INFO] Finished at: 2019-03-29T13:29:55+01:00 [INFO] ------------------------------------------------------------------------&lt;/pre&gt; &lt;p&gt;The command creates the resource files in &lt;code&gt;target/knative&lt;/code&gt; directory:&lt;/p&gt; &lt;pre&gt;$ ls target/knative/ build-sa.yaml container-registry-secrets.yaml deploy-key.yaml kaniko-pvc.yaml m2-pvc.yaml service.yaml&lt;/pre&gt; &lt;p&gt;By the way, the Maven command can also take as an input Git credentials for pulling down a private Git repo. In any case, we just used the public Quarkus quickstart repo, so we don&amp;#8217;t need the generated &lt;code&gt;deploy-key.yaml&lt;/code&gt; file and its reference in the ServiceAccount contained in &lt;code&gt;build-sa.yaml&lt;/code&gt;. We need to remove them:&lt;/p&gt; &lt;pre&gt;$ rm target/knative/deploy-key.yaml $ cat target/knative/build-sa.yaml apiVersion: v1 kind: ServiceAccount metadata: name: build-bot secrets: - name: container-registry-secrets &lt;em&gt; - name: deploy-key &lt;/em&gt;&lt;strong&gt;&amp;#60;- We need to remove this line&lt;/strong&gt;&lt;/pre&gt; &lt;p&gt;We can now create the OpenShift project that will hold all these prepared resources:&lt;/p&gt; &lt;pre&gt;$ oc new-project quarkus-greetings Now using project "quarkus-greetings" on server "https://minishift.inmyopenshift.cloud:8443".&lt;/pre&gt; &lt;p&gt;Before going forward, let&amp;#8217;s set special permissions for the just-created namespace, as suggested by the &lt;a href="https://github.com/openshift-cloud-functions/minishift-addons"&gt;Knative Minishift Addons GitHub repo&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;$ oc adm policy add-scc-to-user anyuid -z default -n quarkus-greetings $ oc adm policy add-scc-to-user privileged -z default -n quarkus-greetings&lt;/pre&gt; &lt;p&gt;And finally, we can deploy our Kubernetes resources:&lt;/p&gt; &lt;pre&gt;$ oc apply --recursive --filename target/knative/ serviceaccount/build-bot created secret/container-registry-secrets created persistentvolumeclaim/kaniko-cache created persistentvolumeclaim/m2-cache created service.serving.knative.dev/quarkus-quickstart-knative created&lt;/pre&gt; &lt;p&gt;After that, Knative Build Controller will notice the new resource, &lt;code&gt;quarkus-quickstart-knative&lt;/code&gt;, and will start the build:&lt;/p&gt; &lt;pre&gt;$ oc get pods NAME READY STATUS RESTARTS AGE quarkus-quickstart-knative-00000-lrb2b 0/1 Init:0/3 0 4s&lt;/pre&gt; &lt;p&gt;This pod is composed of three init-containers that will initialize the credentials, clone the Git repo, build it, and finally push the image to the remote registry:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;build-step-credential-initializer&lt;/li&gt; &lt;li&gt;build-step-git-source&lt;/li&gt; &lt;li&gt;build-step-docker-push&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;We can also take a look to the &lt;a href="https://github.com/quarkusio/quarkus-quickstarts/blob/master/getting-started-knative/Dockerfile"&gt;Dockerfile&lt;/a&gt; that Kaniko will use for building our image in the &amp;#8220;build-step-docker-push&amp;#8221; container.&lt;/p&gt; &lt;p&gt;The Dockerfile is a multi-stage one, containing three &amp;#8220;FROM&amp;#8221; instructions, so three containers will be used. This means Kaniko will run in sequence the first two containers for building the Quarkus app&amp;#8217;s binary and then it will copy to the latest container (the third) the binary build.&lt;/p&gt; &lt;p&gt;We can finally follow the status of the build with these simple commands:&lt;/p&gt; &lt;pre&gt;$ oc get pods NAME READY STATUS RESTARTS AGE quarkus-quickstart-knative-00000-t8228 0/1 Running 0 1m $ oc logs -f -c build-step-docker-push quarkus-quickstart-knative-00000-t8228 ... INFO[0695] EXPOSE 8080 INFO[0695] cmd: EXPOSE INFO[0695] Adding exposed port: 8080/tcp INFO[0695] WORKDIR /work/ INFO[0695] cmd: workdir INFO[0695] Changed working directory to /work INFO[0695] Taking snapshot of full filesystem... INFO[0695] Skipping paths under /kaniko, as it is a whitelisted directory INFO[0695] Skipping paths under /workspace, as it is a whitelisted directory INFO[0695] Skipping paths under /cache, as it is a whitelisted directory INFO[0695] Skipping paths under /builder/home, as it is a whitelisted directory INFO[0695] Skipping paths under /run/secrets, as it is a whitelisted directory INFO[0695] Skipping paths under /var/run, as it is a whitelisted directory INFO[0695] Skipping paths under /dev, as it is a whitelisted directory INFO[0695] Skipping paths under /sys, as it is a whitelisted directory INFO[0695] Skipping paths under /proc, as it is a whitelisted directory INFO[0696] No files were changed, appending empty layer to config. No layer added to image. INFO[0696] ENTRYPOINT ["./application","-Dquarkus.http.host=0.0.0.0"] 2019/03/29 19:16:06 pushed blob sha256:72f1a1307b6f2f9dd158e31e62f06529b09652fffb2630a51c0f3e8fcdcb62ba 2019/03/29 19:16:06 pushed blob sha256:4b3c899486387dd62fe5c4a31eeb37a073dbd9e0ee0065d47bed98ffd8e0889b 2019/03/29 19:16:15 pushed blob sha256:040efd5dc88c66de8192eb1a9f9f764e49d5466381b04b1aaf528caeea156e40 2019/03/29 19:16:16 pushed blob sha256:f0034e1b296e24109590a6436bdfd4ad44500a3b8c76eb21f300861e22c40540 2019/03/29 19:16:18 pushed blob sha256:21d95e340ee05b20c5082eab8847957df806532886d34608fcf6f49e69a21360 2019/03/29 19:16:18 index.docker.io/alezzandro/quarkus-greetings:latest: digest: sha256:fe0ef7d5b8f4d7ac334a9d94d4c8a8ac9f51b884def36e6660d4c46d09ac743c size: 917&lt;/pre&gt; &lt;p&gt;Once the build process is complete, we have all the tools in place for getting our serverless service up and running (if requested). I wrote &amp;#8220;if requested&amp;#8221; because we just built a serverless application that will be spawn up ONLY if a request comes to our service.&lt;/p&gt; &lt;p&gt;We can now take a look at the created Knative resources:&lt;/p&gt; &lt;pre&gt;$ oc get ksvc NAME DOMAIN LATESTCREATED LATESTREADY READY REASON quarkus-quickstart-knative quarkus-quickstart-knative.quarkus-greetings.example.com quarkus-quickstart-knative-00000 quarkus-quickstart-knative-00000 False RevisionFailed $ oc get configuration NAME LATESTCREATED LATESTREADY READY REASON quarkus-quickstart-knative quarkus-quickstart-knative-00000 quarkus-quickstart-knative-00000 False RevisionFailed $ oc get revision NAME SERVICE NAME READY REASON quarkus-quickstart-knative-00000 quarkus-quickstart-knative-00000-service False NoTraffic $ oc get route.serving.knative.dev NAME DOMAIN READY REASON quarkus-quickstart-knative quarkus-quickstart-knative.quarkus-greetings.example.com True&lt;/pre&gt; &lt;p&gt;Don&amp;#8217;t worry about the various &amp;#8220;False&amp;#8221; and &amp;#8220;RevisionFailed&amp;#8221; status messages. They&amp;#8217;re just reporting that &amp;#8220;NoTraffic&amp;#8221; is coming to our service, so the controller and autoscaler placed our application in idle.&lt;/p&gt; &lt;p&gt;Moving forward, we&amp;#8217;re ready to launch the first request to our service. We&amp;#8217;ll use the &lt;code&gt;curl&lt;/code&gt; binary for making the HTTP request, and we need to contact the Knative Ingress Gateway that we&amp;#8217;ll find in the &lt;code&gt;istio-system&lt;/code&gt; namespace:&lt;/p&gt; &lt;pre&gt;$ oc get pods -n istio-system | grep gateway istio-egressgateway-7b46794587-c9mm8 1/1 Running 1 5h istio-ingressgateway-57f76dc4db-7khgt 1/1 Running 1 5h &lt;strong&gt;knative-ingressgateway-56d46fcb88-kmc4g 1/1 Running 1 2h&lt;/strong&gt;&lt;/pre&gt; &lt;p&gt;Keep in mind that Knative uses the HTTP &amp;#8220;Host&amp;#8221; header to route requests to its services. For this reason, we&amp;#8217;ll use some tricks to get the correct IP address and port to contact, and then we&amp;#8217;ll pass the correct hostname contained in the resource &lt;code&gt;route.serving.knative.dev&lt;/code&gt; that we discovered before:&lt;/p&gt; &lt;pre&gt;$ INGRESSGATEWAY=knative-ingressgateway $ IP_ADDRESS="$(minishift ip):$(oc get svc $INGRESSGATEWAY --namespace istio-system --output 'jsonpath={.spec.ports[?(@.port==80)].nodePort}')" $ curl -H 'Host: quarkus-quickstart-knative.quarkus-greetings.example.com' $IP_ADDRESS/greeting/alex hello alex&lt;/pre&gt; &lt;p&gt;Our service just replied to us! Let&amp;#8217;s see what that means in terms of Kubernetes resources:&lt;/p&gt; &lt;pre&gt;$ oc get pods NAME READY STATUS RESTARTS AGE quarkus-quickstart-knative-00000-874sq 0/1 Completed 0 1h &lt;strong&gt;quarkus-quickstart-knative-00000-deployment-688fcd9f4f-wccsf 2/2 Running 0 1m&lt;/strong&gt;&lt;/pre&gt; &lt;p&gt;As you can see our previously built pod is up and running and serving requests.  Let&amp;#8217;s take a closer look:&lt;/p&gt; &lt;pre&gt;$ oc describe pod quarkus-quickstart-knative-00000-deployment-688fcd9f4f-wccsf Name: quarkus-quickstart-knative-00000-deployment-688fcd9f4f-wccsf Namespace: quarkus-greetings ... Status: Running ... Containers: &lt;strong&gt;user-container:&lt;/strong&gt; ... Image: index.docker.io/alezzandro/quarkus-greetings@sha256:fe0d37b98347a321769880030951cfd1a767a0cf1f105f4665ab3a70050a6d2c ... &lt;strong&gt;queue-proxy:&lt;/strong&gt; Image: gcr.io/knative-releases/github.com/knative/serving/cmd/queue@sha256:ce66dd18f0d504e40e050f31b9de4315f8c225f308e9885eb4cbd82b2ba03c1a ...&lt;/pre&gt; &lt;p&gt;Even if I filtered the output, running the previous command, you&amp;#8217;ll see that the running pod is composed of a user-container (the quarkus-greetings service) and queue-proxy (the sidecar container that will bridge our container to the Knative system).&lt;/p&gt; &lt;h2&gt;Troubleshooting Knative in Minishift&lt;/h2&gt; &lt;p&gt;I have tried this example many times on my Minishift appliance and, like any software, it can fail. If something doesn&amp;#8217;t work properly in the &lt;em&gt;Serving&lt;/em&gt; part of this demo, the best way to start troubleshooting is to search in the &amp;#8220;knative-serving&amp;#8221; namespace:&lt;/p&gt; &lt;pre&gt;$ oc get pods -n knative-serving NAME READY STATUS RESTARTS AGE activator-6677bbc9d6-2ql94 1/1 Running 0 51m activator-6677bbc9d6-p6l7z 1/1 Running 0 51m activator-6677bbc9d6-s84zk 1/1 Running 0 51m autoscaler-5d87cc6b75-bjntw 1/1 Running 0 58m controller-f4c59f474-z5x4n 1/1 Running 1 2h webhook-5d9cbd46f7-q5rc6 1/1 Running 1 2h&lt;/pre&gt; &lt;p&gt;Take a look at the logs of activator(s), autoscaler, and controller pods. If you see errors or failures in the logs, try to restart them with a simple command like this:&lt;/p&gt; &lt;pre&gt;$ oc delete pod POD_NAME &lt;/pre&gt; &lt;p&gt;Don&amp;#8217;t worry about the consequences. Kubernetes &lt;em&gt;Deployments&lt;/em&gt; resources will spawn a brand new pod once you manually delete one.&lt;/p&gt; &lt;p&gt;That&amp;#8217;s all, folks. I hope you&amp;#8217;ll try this demo for yourself, and may the &lt;em&gt;kube&lt;/em&gt; be with you!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F09%2Ffrom-zero-to-quarkus-and-knative-the-easy-way%2F&amp;#38;linkname=From%20zero%20to%20Quarkus%20and%20Knative%3A%20The%20easy%20way" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F09%2Ffrom-zero-to-quarkus-and-knative-the-easy-way%2F&amp;#38;linkname=From%20zero%20to%20Quarkus%20and%20Knative%3A%20The%20easy%20way" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F09%2Ffrom-zero-to-quarkus-and-knative-the-easy-way%2F&amp;#38;linkname=From%20zero%20to%20Quarkus%20and%20Knative%3A%20The%20easy%20way" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F09%2Ffrom-zero-to-quarkus-and-knative-the-easy-way%2F&amp;#38;linkname=From%20zero%20to%20Quarkus%20and%20Knative%3A%20The%20easy%20way" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F09%2Ffrom-zero-to-quarkus-and-knative-the-easy-way%2F&amp;#38;linkname=From%20zero%20to%20Quarkus%20and%20Knative%3A%20The%20easy%20way" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F09%2Ffrom-zero-to-quarkus-and-knative-the-easy-way%2F&amp;#38;linkname=From%20zero%20to%20Quarkus%20and%20Knative%3A%20The%20easy%20way" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F09%2Ffrom-zero-to-quarkus-and-knative-the-easy-way%2F&amp;#38;linkname=From%20zero%20to%20Quarkus%20and%20Knative%3A%20The%20easy%20way" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F09%2Ffrom-zero-to-quarkus-and-knative-the-easy-way%2F&amp;#38;linkname=From%20zero%20to%20Quarkus%20and%20Knative%3A%20The%20easy%20way" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F09%2Ffrom-zero-to-quarkus-and-knative-the-easy-way%2F&amp;#038;title=From%20zero%20to%20Quarkus%20and%20Knative%3A%20The%20easy%20way" data-a2a-url="https://developers.redhat.com/blog/2019/04/09/from-zero-to-quarkus-and-knative-the-easy-way/" data-a2a-title="From zero to Quarkus and Knative: The easy way"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/09/from-zero-to-quarkus-and-knative-the-easy-way/"&gt;From zero to Quarkus and Knative: The easy way&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/1fedqc_MGws" height="1" width="1" alt=""/&gt;</content><summary>You’ve probably already read about Quarkus, but you may not know that the superfast startup speed of Quarkus makes it the best candidate for working with Knative and serverless for your Function-as-a-Service (FaaS) projects. Quarkus, also known as Supersonic, Subatomic Java, is a Kubernetes native Java stack tailored for GraalVM and OpenJDK HotSpot, crafted from the best-of-breed Java libraries an...</summary><dc:creator>Alessandro Arrichiello</dc:creator><dc:date>2019-04-09T07:03:44Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/09/from-zero-to-quarkus-and-knative-the-easy-way/</feedburner:origLink></entry><entry><title>How to install Red Hat OpenShift 3.11 on OpenStack 13</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/a6yYpfBp9II/" /><category term="cloud" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="OpenStack" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><author><name>mohammad ahmad</name></author><id>searchisko:content:id:jbossorg_blog-how_to_install_red_hat_openshift_3_11_on_openstack_13</id><updated>2019-04-09T07:01:36Z</updated><published>2019-04-09T07:01:36Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;Red Hat OpenShift Container Platform&lt;/a&gt; is a platform-as-a-service (PaaS). It orchestrates and manages containerized applications through &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;. Although OpenShift Container Platform supports cloud-native applications, it also supports custom-built applications. OpenShift Container Platform can run on a hybrid cloud configuration providing the flexibility to expand and grow.&lt;/p&gt; &lt;p&gt;&lt;a href="https://access.redhat.com/products/red-hat-openstack-platform"&gt;Red Hat OpenStack Platform&lt;/a&gt; is an infrastructure-as-a-service (IaaS). This means it is a cloud-based platform that provides virtual servers and other resources. Users either manage it through a web-based dashboard, through command-line tools, or through RESTful web services.&lt;/p&gt; &lt;p&gt;If you are considering Red Hat OpenShift Container Platform on OpenStack Platform, there are several advantages, including easily increasing the number of compute nodes and using dynamic storage.&lt;/p&gt; &lt;p&gt;In this article, I will outline the main points required to successfully install Red Hat OpenShift Container Platform on OpenStack Platform. Because my OpenStack knowledge is limited, I reached out to my colleagues for help and will not address too many OpenStack technical details here.&lt;/p&gt; &lt;p&gt;&lt;span id="more-576827"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Prerequisites&lt;/h2&gt; &lt;p&gt;Before beginning your installation, you will need an OpenStack Platform environment provisioned with certain requirements. These are mainly authentication and Red Hat subscription requirements. The following sections address these.&lt;/p&gt; &lt;h3&gt;OpenStack Environment&lt;/h3&gt; &lt;p&gt;Basically, you need an environment set up as per the link below:&lt;/p&gt; &lt;pre&gt;https://docs.openshift.com/container-platform/3.11/install_config/configuring_openstack.html&lt;/pre&gt; &lt;p&gt;Therefore, before proceeding, ensure you have the following:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Access to a deployment instance with all the required repositories enabled, and the correct ssh keys to access your nodes&lt;/li&gt; &lt;li&gt;Valid keystone authentication credentials&lt;/li&gt; &lt;li&gt;Enough computing resources to create the cluster you need, as well as any potential growth requirements&lt;/li&gt; &lt;li&gt;DNS services that automatically add new hosts that are provisioned (Personally, I had some challenges here)&lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;OpenStack keystone authentication requirements&lt;/h3&gt; &lt;p&gt;There are specific requirements for keystone authentication. This is to allow the OpenStack Platform cloud provider can authenticate with OpenStack Platform (primarily for Cinder storage).&lt;/p&gt; &lt;p&gt;The main requirement is that your OpenStack Platform user and project exist in the same domain. If you do not have them in the same domain, the installation will fail (as of OpenShift Container Platform 3.11.69).&lt;/p&gt; &lt;p&gt;Therefore, before attempting installation, ensure you can authenticate with the project ID and user via the following command:&lt;/p&gt; &lt;pre&gt;$ openstack \ --os-identity-api-version "3" \ --os-auth-url "https://openstack-default.mydomain:13000/v3" \ --os-username "myorgusername" \ --os-password "mypassword" \ --os-project-id "myprojectid" \ --os-domain-name "myorg" \ server list&lt;/pre&gt; &lt;p&gt;If the above command fails (even if you don&amp;#8217;t have any servers installed), then your OpenShift Container Platform installation will fail. This is due to the OpenShift Container Platform cloud provider being unable to authenticate for projects in a different domain to the user.&lt;/p&gt; &lt;p&gt;When you are running this command, please ensure you have NOT sourced the rc file (which contains all of the above details), because you will get false results.&lt;/p&gt; &lt;h3&gt;Populate your Red Hat OpenShift inventory with your values&lt;/h3&gt; &lt;p&gt;Here are some inventory values that will be required:&lt;/p&gt; &lt;pre&gt;$ cat inventory/group_vars/all.yml |grep rhsub rhsub_server: 'satellite.mydomain' rhsub_ak: 'openshift' rhsub_orgid: 'MyOrg' rhsub_pool: '123456789012345678901234567890'&lt;/pre&gt; &lt;h2&gt;Provision your base stack&lt;/h2&gt; &lt;p&gt;If you have all the required OpenStack settings, running the following playbook will create all the nodes required (as you have specified their numbers in your &lt;code&gt;all.yml&lt;/code&gt; file):&lt;/p&gt; &lt;pre&gt;$ source openrc.sh $ ansible-playbook /usr/share/ansible/openshift-ansible/playbooks/openstack/openshift-cluster/provision.yml&lt;/pre&gt; &lt;p&gt;This will create your OpenShift nodes (as per your &lt;code&gt;all.yml&lt;/code&gt; file). In this example, the following settings here used:&lt;/p&gt; &lt;pre&gt;openshift_openstack_num_masters: 3 openshift_openstack_num_infra: 3 openshift_openstack_num_cns: 0 openshift_openstack_num_nodes: 3 openshift_openstack_num_etcd: 0&lt;/pre&gt; &lt;h3&gt;Check your base stack&lt;/h3&gt; &lt;p&gt;After the previous playbook is complete, check whether your dynamic inventory has been updated:&lt;/p&gt; &lt;pre&gt;$ soruce openrc.sh $ /usr/share/ansible/openshift-ansible/playbooks/openstack/inventory.py –list&lt;/pre&gt; &lt;p&gt;Your dynamic inventory must be set in your &lt;code&gt;ansible.cfg&lt;/code&gt; file. You should also make sure all nodes are contactable and have correct DNS settings.&lt;/p&gt; &lt;p&gt;Most of the problems I encountered during the installations were due to DNS. Please make sure the hostname for all your OpenShift nodes is the &lt;code&gt;fqdn&lt;/code&gt; hostname. All nodes must be able to resolve via DNS.&lt;/p&gt; &lt;h3&gt;Start your installation&lt;/h3&gt; &lt;p&gt;To begin your installation, run the following commands (I have personally increased the timeout for my Ansible playbooks):&lt;/p&gt; &lt;pre&gt;$ ansible-playbook --timeout=120 /usr/share/ansible/openshift-ansible/playbooks/openstack/openshift-cluster/prerequisites.yml $ ansible-playbook --timeout=120 /usr/share/ansible/openshift-ansible/playbooks/openstack/openshift-cluster/install.yml&lt;/pre&gt; &lt;h2&gt;Scaling up compute nodes&lt;/h2&gt; &lt;p&gt;If you are scaling up OpenShift Container Platform compute nodes on a different platform, then you may follow the standard recommended procedure to add a new node to your OpenShift Container Platform cluster.&lt;/p&gt; &lt;p&gt;However, when you are running on OpenStack Platform, you need to get these new nodes into the dynamic inventory first, before you can actually perform a joining of a node. Performing this latter task on OpenStack Platform is not an obvious task.&lt;/p&gt; &lt;p&gt;The only place I have been able to find documentation for this is in the following file (on the deployment instance/jump host):&lt;/p&gt; &lt;pre&gt;/usr/share/ansible/openshift-ansible/playbooks/openstack/configuration.md&lt;/pre&gt; &lt;p&gt;Here I provide an excerpt contained within the file above. This excerpt refers to the exact instructions required to perform a node scale-up on OpenStack Platform:&lt;/p&gt; &lt;pre&gt;Section: ### 2. Scale the Cluster ==&amp;#62; ``` $ ansible-playbook --user openshift \ -i openshift-ansible/playbooks/openstack/scaleup_inventory.py \ -i inventory \ openshift-ansible/playbooks/openstack/openshift-cluster/node-scaleup.yml ``` This will create the new OpenStack nodes, optionally create the DNS records and subscribe them to RHN, configure the `new_masters`, `new_nodes` and `new_etcd` groups and run the OpenShift scaleup tasks. When the playbook finishes, you should have new nodes up and running. Run `oc get nodes` to verify. &lt;/pre&gt; &lt;p&gt;In my case, I was interested in scaling up from three compute nodes to five compute nodes. To do that, the node count in the &lt;code&gt;all.yml&lt;/code&gt; file must be updated.&lt;/p&gt; &lt;p&gt;Step 1: Update the &lt;code&gt;all.yml&lt;/code&gt; file (example shown here):&lt;/p&gt; &lt;pre&gt;$ cat inventory/group_vars/all.yml | grep openshift_openstack_num_nodes openshift_openstack_num_nodes: 3&lt;/pre&gt; &lt;p&gt;to:&lt;/p&gt; &lt;pre&gt;$ cat inventory/group_vars/all.yml | grep openshift_openstack_num_nodes openshift_openstack_num_nodes: 5&lt;/pre&gt; &lt;p&gt;Step 2: Run the OSP specific &lt;code&gt;node-scaleup.yml&lt;/code&gt; playbook:&lt;/p&gt; &lt;pre&gt;$ ansible-playbook \ -i /home/cloud-user/inventory \ -i /usr/share/ansible/openshift-ansible/playbooks/openstack/scaleup_inventory.py \ /usr/share/ansible/openshift-ansible/playbooks/openstack/openshift-cluster/node-scaleup.yml&lt;/pre&gt; &lt;p&gt;Infra-node scaleup requires additional adjustments, which are available in &lt;code&gt;/usr/share/ansible/openshift-ansible/playbooks/openstack/configuration.md&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;I have not attempted to scale up master nodes and have not tested this.&lt;/p&gt; &lt;h2&gt;Dynamic storage&lt;/h2&gt; &lt;p&gt;OpenStack Platform Cinder storage is available to an OpenShift Container Platform cluster configured to utilize OpenStack Platform features.&lt;/p&gt; &lt;p&gt;However, you should understand that Cinder storage is a read-write-once type of storage, which means multiple pods cannot share the same storage. This aspect must be considered when designing your Red Hat OpenShift Container Platform cluster and the applications that run on them.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Installing Red Hat OpenShift Container Platform on OpenStack Platform provides many features and benefits. One main benefit is being able to scale up nodes with relative ease, and another is the ability to use OpenStack Platform Cinder storage.&lt;/p&gt; &lt;p&gt;Although good documentation is available on how to install a base cluster, the documentation on scaling up was more difficult to find. My aim in this article was to highlight all the information required to successfully install and scale up a Red Hat OpenShift cluster.&lt;/p&gt; &lt;p&gt;I didn&amp;#8217;t address OpenStack Platform technical details here primarily because of my own lack of expertise, but I did find that setting up Red Hat OpenShift Container Platform on OpenStack Platform is relatively straightforward once you have all the right information and have all the infrastructure services up and running (mainly DNS).&lt;/p&gt; &lt;p&gt;I thank my colleagues for their selfless help in completing this procedure.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F09%2Fhow-to-install-red-hat-openshift-3-11-on-openstack-13%2F&amp;#38;linkname=How%20to%20install%20Red%20Hat%20OpenShift%203.11%20on%20OpenStack%2013" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F09%2Fhow-to-install-red-hat-openshift-3-11-on-openstack-13%2F&amp;#38;linkname=How%20to%20install%20Red%20Hat%20OpenShift%203.11%20on%20OpenStack%2013" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F09%2Fhow-to-install-red-hat-openshift-3-11-on-openstack-13%2F&amp;#38;linkname=How%20to%20install%20Red%20Hat%20OpenShift%203.11%20on%20OpenStack%2013" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F09%2Fhow-to-install-red-hat-openshift-3-11-on-openstack-13%2F&amp;#38;linkname=How%20to%20install%20Red%20Hat%20OpenShift%203.11%20on%20OpenStack%2013" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F09%2Fhow-to-install-red-hat-openshift-3-11-on-openstack-13%2F&amp;#38;linkname=How%20to%20install%20Red%20Hat%20OpenShift%203.11%20on%20OpenStack%2013" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F09%2Fhow-to-install-red-hat-openshift-3-11-on-openstack-13%2F&amp;#38;linkname=How%20to%20install%20Red%20Hat%20OpenShift%203.11%20on%20OpenStack%2013" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F09%2Fhow-to-install-red-hat-openshift-3-11-on-openstack-13%2F&amp;#38;linkname=How%20to%20install%20Red%20Hat%20OpenShift%203.11%20on%20OpenStack%2013" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F09%2Fhow-to-install-red-hat-openshift-3-11-on-openstack-13%2F&amp;#38;linkname=How%20to%20install%20Red%20Hat%20OpenShift%203.11%20on%20OpenStack%2013" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F09%2Fhow-to-install-red-hat-openshift-3-11-on-openstack-13%2F&amp;#038;title=How%20to%20install%20Red%20Hat%20OpenShift%203.11%20on%20OpenStack%2013" data-a2a-url="https://developers.redhat.com/blog/2019/04/09/how-to-install-red-hat-openshift-3-11-on-openstack-13/" data-a2a-title="How to install Red Hat OpenShift 3.11 on OpenStack 13"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/09/how-to-install-red-hat-openshift-3-11-on-openstack-13/"&gt;How to install Red Hat OpenShift 3.11 on OpenStack 13&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/a6yYpfBp9II" height="1" width="1" alt=""/&gt;</content><summary>Red Hat OpenShift Container Platform is a platform-as-a-service (PaaS). It orchestrates and manages containerized applications through Kubernetes. Although OpenShift Container Platform supports cloud-native applications, it also supports custom-built applications. OpenShift Container Platform can run on a hybrid cloud configuration providing the flexibility to expand and grow. Red Hat OpenStack Pl...</summary><dc:creator>mohammad ahmad</dc:creator><dc:date>2019-04-09T07:01:36Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/09/how-to-install-red-hat-openshift-3-11-on-openstack-13/</feedburner:origLink></entry><entry><title>DevConf.US 2019 - Open Source Career with Automation Integration</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Po8sCe4PeII/devconfus-2019-open-source-career-with-automation-integration.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="jBPM" scheme="searchisko:content:tags" /><category term="workshops" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-devconf_us_2019_open_source_career_with_automation_integration</id><updated>2019-04-09T05:00:08Z</updated><published>2019-04-09T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://devconf.info/us/" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img border="0" data-original-height="542" data-original-width="1186" height="146" src="https://2.bp.blogspot.com/-T6LZWIuPP5o/XHexg0Gq2XI/AAAAAAAAteo/pbLc5j5pqoQiZvEAZ_YdvW9M9DN3oMqeACLcBGAs/s320/Screenshot%2B2019-02-28%2Bat%2B11.01.22.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;Last year &lt;a href="http://www.schabell.org/2018/04/devconus-2018-process-driven-developement-cloud-containers.html" target="_blank"&gt;I submitted to this great conference&lt;/a&gt;, but for the first time since I've been doing conference submissions, I had to pull out due to unforeseen&amp;nbsp; circumstances.&lt;br /&gt;&lt;br /&gt;I really wanted to make a point of returning to support this event, so I have put in three of my best talks. I hope the committee gives this another chance, as I've cleared my schedule for this event and can't wait to meet everyone at Boston University on 15-17 August.&lt;br /&gt;&lt;br /&gt;Here's my list of submissions, fingers crossed:&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;These talks I've submitted are some of the best with regards to attendee reactions, participation in discussion during the sessions, and in providing content to expand attendees developer skill set.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;How to Jump Start Your Career in Open Source&lt;/h3&gt;&lt;i&gt;It's not coincidence. It's not luck. It's not going to happen by itself, so what's the secret sauce? Understanding what makes a career in open source grow, what choices are crucial, and what actions accelerate or damage your open source future are sometimes hard to grasp. Learning to position, expand and grow your personal brand in the open source world is what this session provides. Be ready for your next step in open source. Join me for an hour of power where you'll be given a clear and easy to use plan for jump starting your open source career immediately.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;3 Pitfalls Everyone Ignores with Microservices&lt;/h3&gt;&lt;i&gt;The daily hype is all around you. Microservices are a necessary step along the path to integration for a digitally successful future for your organization. The choices you’ve got to make don’t preclude the daily work of developing amazing applications. From containers, cloud, multicloud, and beyond, microservices are the core infrastructure ensuring your organization's flexibility in the digital world. Join us for an hour of power, where real life developer experiences are used to highlight the three top lessons we're all learning as we transition our integration infrastructure into modern day microservices.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;7 Steps to Expanding Your AppDev Toolbox&lt;/h3&gt;&lt;i&gt;Are you ready to add automation to your development toolbox? Are you looking to integrate processes in your application development projects but not sure&amp;nbsp; where to start? Do the process integration tools intimidate you a little? No worries, we've got the easiest way to spin up your knowledge around process integration using open source technologies. Take a tour with us and learn how in 7 easy steps you can soar to new heights by adding these new skills to your AppDev toolbox. You'll walk away from this session with the learning path to integrating automation in to your next project. This session content provides all materials free, online, and available in easy to follow hands-on format. Attendees can head homeward after this session and continue advancing their skills at their own pace.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Hope to see you soon in Boston!&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1vMLyOIzPBY:Z53h8NFXr1E:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1vMLyOIzPBY:Z53h8NFXr1E:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1vMLyOIzPBY:Z53h8NFXr1E:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1vMLyOIzPBY:Z53h8NFXr1E:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1vMLyOIzPBY:Z53h8NFXr1E:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1vMLyOIzPBY:Z53h8NFXr1E:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1vMLyOIzPBY:Z53h8NFXr1E:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1vMLyOIzPBY:Z53h8NFXr1E:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1vMLyOIzPBY:Z53h8NFXr1E:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1vMLyOIzPBY:Z53h8NFXr1E:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1vMLyOIzPBY:Z53h8NFXr1E:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/1vMLyOIzPBY" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Po8sCe4PeII" height="1" width="1" alt=""/&gt;</content><summary>Last year I submitted to this great conference, but for the first time since I've been doing conference submissions, I had to pull out due to unforeseen  circumstances. I really wanted to make a point of returning to support this event, so I have put in three of my best talks. I hope the committee gives this another chance, as I've cleared my schedule for this event and can't wait to meet everyone...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-04-09T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/1vMLyOIzPBY/devconfus-2019-open-source-career-with-automation-integration.html</feedburner:origLink></entry><entry><title>Operator 0.2.1 out with DNS ping and expanded customizations</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/zWWkQ73X2Jo/operator-021-out-with-dns-ping-and.html" /><category term="beta release" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="operator" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Galder Zamarreño</name></author><id>searchisko:content:id:jbossorg_blog-operator_0_2_1_out_with_dns_ping_and_expanded_customizations</id><updated>2019-04-08T08:00:05Z</updated><published>2019-04-08T08:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;We've just completed the release of the Infinispan Operator version 0.2.1. In this second minor release, we've added the following features:&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;DNS Cluster Discovery&lt;/h3&gt;&lt;br /&gt;Cluster nodes now discover each other using DNS ping,&amp;nbsp;which uses name lookups. Each node publishes a headless service which they use to locate each other. Previously, Kubernetes APIs were queried to discover other nodes, but this required administrator rights. DNS ping does not require admin permissions.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Configurable Image&lt;/h3&gt;&lt;br /&gt;The Infinispan server image used by the operator is now configurable, e.g.&lt;br /&gt;&lt;br /&gt;&lt;script src="https://gist.github.com/galderz/2d3f06dfb3c5fa0d17fa1e7059ad9531.js"&gt;&lt;/script&gt; &lt;h3 style="text-align: left;"&gt;&lt;br /&gt;&lt;/h3&gt;&lt;h3 style="text-align: left;"&gt;Configurable XML&lt;/h3&gt;&lt;br /&gt;You can now provide their own custom Infinispan server XML referencing an existing ConfigMap:&lt;br /&gt;&lt;br /&gt;&lt;script src="https://gist.github.com/galderz/32cf3b56d3914eef1c06044d3d76f638.js"&gt;&lt;/script&gt; Note that this example requires a ConfigMap with the XML file to be created before hand.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Next Steps&lt;/h3&gt;&lt;br /&gt;We're already working on version 0.3.0, and in parallel we've been working on our first OperatorHub submission. We hope to have some news for you very soon :)&lt;br /&gt;&lt;br /&gt;Cheers,&lt;br /&gt;Galder&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/8jeDuSHvJDo" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/zWWkQ73X2Jo" height="1" width="1" alt=""/&gt;</content><summary>We've just completed the release of the Infinispan Operator version 0.2.1. In this second minor release, we've added the following features: DNS Cluster Discovery Cluster nodes now discover each other using DNS ping, which uses name lookups. Each node publishes a headless service which they use to locate each other. Previously, Kubernetes APIs were queried to discover other nodes, but this require...</summary><dc:creator>Galder Zamarreño</dc:creator><dc:date>2019-04-08T08:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/8jeDuSHvJDo/operator-021-out-with-dns-ping-and.html</feedburner:origLink></entry><entry><title>Reduce application image build times with .NET Core incremental builds</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/joDTf-CNcuE/" /><category term=".net" scheme="searchisko:content:tags" /><category term=".NET Core" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><author><name>Tom Deseyn</name></author><id>searchisko:content:id:jbossorg_blog-reduce_application_image_build_times_with_net_core_incremental_builds</id><updated>2019-04-08T07:03:09Z</updated><published>2019-04-08T07:03:09Z</published><content type="html">&lt;p&gt;In a &lt;a href="https://developers.redhat.com/blog/2018/12/13/building-net-core-container-images-using-s2i/"&gt;previous article&lt;/a&gt;, we talked about using containers to build .NET Core application images to make our builds portable and reproducible. Because each build starts from scratch, some time is spent downloading and extracting NuGet packages.&lt;/p&gt; &lt;p&gt;One way to reduce build times is to &lt;a href="https://developers.redhat.com/blog/2019/01/08/local-nuget-server-red-hat-openshift-container-platform/"&gt;add a local NuGet server&lt;/a&gt;; this brings packages closer to the build machines, which reduces the time to download the packages. In this article, we&amp;#8217;ll look at how the new incremental build feature of the .NET Core S2I builder can further reduce build times.&lt;span id="more-581227"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The .NET Core S2I builder now supports incremental builds. When we do an incremental build, the builder will reuse the NuGet packages from a previously built application image. So, the first build of the application image will fetch packages from the NuGet server, and successive builds will reuse those packages.&lt;/p&gt; &lt;p&gt;To perform incremental builds using the &lt;a href="https://github.com/openshift/source-to-image/"&gt;source-to-image&lt;/a&gt; (&lt;code&gt;s2i&lt;/code&gt;) tool, we need to pass the &lt;code&gt;--incremental&lt;/code&gt; flag. By default, the .NET Core S2I builder will remove NuGet packages to reduce the size of the application image. To keep those packages around, we need to set the &lt;code&gt;DOTNET_INCREMENTAL&lt;/code&gt; environment variable to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;On my development machine, performing an &lt;code&gt;s2i&lt;/code&gt; build for the &lt;code&gt;dotnet new mvc&lt;/code&gt;-template gives these build times:&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th&gt;S2I&lt;/th&gt; &lt;th&gt;Total time&lt;/th&gt; &lt;th&gt;Restore time&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;First build&lt;/td&gt; &lt;td&gt;35s&lt;/td&gt; &lt;td&gt;16.5s&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Successive build&lt;/td&gt; &lt;td&gt;24.5s&lt;/td&gt; &lt;td&gt;0.5s&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;We see the build time goes down thanks to the reduced restore time; however, the total time doesn&amp;#8217;t go down by the same amount. This is because we spend extra time to extract the NuGet packages from the previous application image. Note that the previous application image is already present on the build machine, so we spend no time fetching it from an image registry.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/products/openshift/overview/"&gt;Red Hat OpenShift Container Platform&lt;/a&gt; can also be configured to perform incremental builds. Let’s look at the build time difference using a free &lt;a href="https://manage.openshift.com/"&gt;Red Hat OpenShift Online&lt;/a&gt; account.&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th&gt;Free OpenShift Online account&lt;/th&gt; &lt;th&gt;Total time&lt;/th&gt; &lt;th&gt;Restore time&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Non-incremental build&lt;/td&gt; &lt;td&gt;2m18s&lt;/td&gt; &lt;td&gt;28.5s&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Successive incremental build&lt;/td&gt; &lt;td&gt;4m45s&lt;/td&gt; &lt;td&gt;2s&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;In this case, the incremental build is slower. Fetching packages from the NuGet server is faster than retrieving the previously built application image from the cluster container image registry and then extracting the packages from it.&lt;/p&gt; &lt;p&gt;Let’s do this again. Now we’ll use an on-premise Red Hat OpenShift test cluster. These are the build times:&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th&gt;OpenShift test cluster&lt;/th&gt; &lt;th&gt;Total time&lt;/th&gt; &lt;th&gt;Restore time&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Non-incremental build&lt;/td&gt; &lt;td&gt;1m12s&lt;/td&gt; &lt;td&gt;12.72s&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Successive incremental build&lt;/td&gt; &lt;td&gt;1m53s&lt;/td&gt; &lt;td&gt;1s&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;The build times are closer, but again, the non-incremental build is faster thanks to the high bandwidth to the NuGet server compared to the container registry.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, we looked at the new incremental build feature of the S2I .NET Core builder. When using &lt;code&gt;s2i&lt;/code&gt; on a developer machine, the incremental builds are faster when a previously built application image is already present on the machine. This is not the case when building on OpenShift. It depends on the bandwidth to the cluster image registry compared to the bandwidth to the NuGet server whether incremental or non-incremental builds are faster.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F08%2Freduce-application-image-build-times-with-net-core-incremental-builds%2F&amp;#38;linkname=Reduce%20application%20image%20build%20times%20with%20.NET%20Core%20incremental%20builds" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F08%2Freduce-application-image-build-times-with-net-core-incremental-builds%2F&amp;#38;linkname=Reduce%20application%20image%20build%20times%20with%20.NET%20Core%20incremental%20builds" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F08%2Freduce-application-image-build-times-with-net-core-incremental-builds%2F&amp;#38;linkname=Reduce%20application%20image%20build%20times%20with%20.NET%20Core%20incremental%20builds" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F08%2Freduce-application-image-build-times-with-net-core-incremental-builds%2F&amp;#38;linkname=Reduce%20application%20image%20build%20times%20with%20.NET%20Core%20incremental%20builds" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F08%2Freduce-application-image-build-times-with-net-core-incremental-builds%2F&amp;#38;linkname=Reduce%20application%20image%20build%20times%20with%20.NET%20Core%20incremental%20builds" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F08%2Freduce-application-image-build-times-with-net-core-incremental-builds%2F&amp;#38;linkname=Reduce%20application%20image%20build%20times%20with%20.NET%20Core%20incremental%20builds" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F08%2Freduce-application-image-build-times-with-net-core-incremental-builds%2F&amp;#38;linkname=Reduce%20application%20image%20build%20times%20with%20.NET%20Core%20incremental%20builds" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F08%2Freduce-application-image-build-times-with-net-core-incremental-builds%2F&amp;#38;linkname=Reduce%20application%20image%20build%20times%20with%20.NET%20Core%20incremental%20builds" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F08%2Freduce-application-image-build-times-with-net-core-incremental-builds%2F&amp;#038;title=Reduce%20application%20image%20build%20times%20with%20.NET%20Core%20incremental%20builds" data-a2a-url="https://developers.redhat.com/blog/2019/04/08/reduce-application-image-build-times-with-net-core-incremental-builds/" data-a2a-title="Reduce application image build times with .NET Core incremental builds"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/08/reduce-application-image-build-times-with-net-core-incremental-builds/"&gt;Reduce application image build times with .NET Core incremental builds&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/joDTf-CNcuE" height="1" width="1" alt=""/&gt;</content><summary>In a previous article, we talked about using containers to build .NET Core application images to make our builds portable and reproducible. Because each build starts from scratch, some time is spent downloading and extracting NuGet packages. One way to reduce build times is to add a local NuGet server; this brings packages closer to the build machines, which reduces the time to download the packag...</summary><dc:creator>Tom Deseyn</dc:creator><dc:date>2019-04-08T07:03:09Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/08/reduce-application-image-build-times-with-net-core-incremental-builds/</feedburner:origLink></entry><entry><title>Red Hat OpenShift 3.11 disconnected installation using Satellite Docker registry</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/-0ZdMLF-oNQ/" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Application Runtimes" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><author><name>mohammad ahmad</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_openshift_3_11_disconnected_installation_using_satellite_docker_registry</id><updated>2019-04-08T07:01:05Z</updated><published>2019-04-08T07:01:05Z</published><content type="html">&lt;p&gt;In this article, I will discuss the prerequisites and requirements for the successful implementation of Red Hat OpenShift 3.11 disconnected installation using Red Hat Satellite as the local Docker registry, which I have been able to do with the support of my colleagues. I also discuss adjustments that may be required post install.&lt;/p&gt; &lt;p&gt;This work is based on the following references:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://docs.openshift.com/container-platform/3.11/install/disconnected_install.html"&gt;OpenShift disconnected installation documentation&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://blog.openshift.com/using-satellite-6-server-disconnect-openshift-container-platform-install/"&gt;Using Satellite 6 Server for a Disconnect OpenShift Container Platform Install&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span id="more-576807"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Prerequisites&lt;/h2&gt; &lt;h3&gt;Required Images&lt;/h3&gt; &lt;p&gt;Before starting the installation, you must have all the required Docker images synchronized and accessible from all your nodes.&lt;/p&gt; &lt;p&gt;You will not need to synchronize all the images (total 100+), and depending on your requirements you will need:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Red Hat OpenShift Container Platform infrastructure component images, which are required for your base install, a total of 55 images&lt;/li&gt; &lt;li&gt;Red Hat OpenShift Container Platform component images for the optional components, which are required for logging and monitoring, a total of 26 images&lt;/li&gt; &lt;li&gt;Red Hat-certified Source-to-Image (S2I) builder images, which are required for your OpenShift applications, a total of 29 images&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Additionally, if you know exactly which images your installation requires (by checking all the Docker images you have on an existing environment), you can pre-synchronize only those images.&lt;/p&gt; &lt;h3&gt;Determine Red Hat OpenShift 3.11 version&lt;/h3&gt; &lt;p&gt;At the time of this installation, version 3.11.69 was used; however, you should install the latest version available for the bugfixes and features.&lt;/p&gt; &lt;p&gt;This should be reflected in your inventory as follows:&lt;/p&gt; &lt;pre&gt;openshift_release: v3.11 openshift_image_tag: v3.11.69 openshift_pkg_version: -3.11.69&lt;/pre&gt; &lt;h3&gt;Red Hat Satellite settings&lt;/h3&gt; &lt;p&gt;On the Red Hat Satellite server, create a product within the organization that your Red Hat OpenShift nodes will be registered to&lt;/p&gt; &lt;pre&gt;hammer product create --name "ocp311" --organization "MyOrg"&lt;/pre&gt; &lt;p&gt;Then, you will need to create a repository for each image. This is what makes Red Hat Satellite behave slightly differently from other registries, as Red Hat Satellite will synchronize this image with the upstream server (registry.redhat.io), including all its versions. For example, to create a product for openshift3/ose-node, use the following command:&lt;/p&gt; &lt;pre&gt;hammer repository create --name "openshift3/ose-node" --content-type "docker" --url "http://registry.redhat.io/" --docker-upstream-name "openshift3/ose-node" --product "ocp311" --organization "MyOrg"&lt;/pre&gt; &lt;p&gt;Once you have created all the repositories, you can either synchronize using the GUI or via the command line:&lt;/p&gt; &lt;pre&gt;hammer product synchronize --name "ocp311" --organization "MyOrg"&lt;/pre&gt; &lt;p&gt;Ensure you add the product to the content view that your OpenShift will be registered to access.&lt;/p&gt; &lt;p&gt;The Red Hat Satellite server implements a Docker registry slightly differently from traditional Docker registries. This means the URL of a Docker image will change from:&lt;/p&gt; &lt;pre&gt;registry.redhat.io/openshift3/ose-pod:v3.11.69&lt;/pre&gt; &lt;p&gt;to&lt;/p&gt; &lt;pre&gt;satellite.mydomain:5000/MyOrg-ocp311-openshift3_ose-pod:v3.11.69&lt;/pre&gt; &lt;p&gt;If you do not tell the Red Hat OpenShift installer about this change, the installation will fail. I will provide further instructions in the next section.&lt;/p&gt; &lt;p&gt;Test an image pull:&lt;/p&gt; &lt;pre&gt;docker pull satellite.mydomain:5000/MyOrg-ocp311-openshift3_ose-pod:v3.11.69&lt;/pre&gt; &lt;h2&gt;Red Hat OpenShift Ansible inventory modifications&lt;/h2&gt; &lt;p&gt;For the installer to be able to use the Docker registry on Red Hat Satellite, restructure &lt;code&gt;oreg_url&lt;/code&gt; as following:&lt;/p&gt; &lt;pre&gt;oreg_url: satellite.mydomain:5000/MyOrg-ocp311-openshift3_ose-${component}:${version} openshift_disable_check: "docker_image_availability" openshift_docker_insecure_registries: "satellite.mydomain:5000" openshift_docker_additional_registries: "satellite.mydomain:5000" openshift_examples_modify_imagestreams: True&lt;/pre&gt; &lt;p&gt;Set &lt;code&gt;oreg_test_url&lt;/code&gt; to false:&lt;/p&gt; &lt;pre&gt;oreg_test_login: false&lt;/pre&gt; &lt;p&gt;Ensure &lt;code&gt;oreg_auth&lt;/code&gt; values are commented out. Because no authentication is required, not commenting them out will cause issues:&lt;/p&gt; &lt;pre&gt;# oreg_auth_user: '' # our registry doesn't require authentication. # oreg_auth_password: '' # our registry doesn't require authentication. &lt;/pre&gt; &lt;p&gt;Additional inventory variables:&lt;/p&gt; &lt;pre&gt;openshift_examples_registryurl: "{{ oreg_url | default(openshift_hosted_images_dict[openshift_deployment_type]) }}" registry_host: "{{ openshift_examples_registryurl.split('/')[0] if '.' in openshift_examples_registryurl.split('/')[0] else '' }}"&lt;/pre&gt; &lt;p&gt;Also, the pattern &lt;code&gt;"MyOrg-ocp311-openshift3_ose-${component}:${version}&lt;/code&gt; will not work for etcd; therefore, you must specify the exact etcd docker image URL:&lt;/p&gt; &lt;pre&gt;osm_etcd_image: satellite.mydomain:5000/MyOrg-ocp311-rhel7_etcd:3.2.22&lt;/pre&gt; &lt;h2&gt;Post-installation configuration&lt;/h2&gt; &lt;p&gt;Depending on which applications you want to use in your OpenShift cluster, you may want to modify your image streams accordingly. I will not delve into these details here. However, certain tasks may still attempt to pull images from the online registry to perform their functions, such as diagnostics.&lt;/p&gt; &lt;p&gt;Therefore, to run diagnostics, the following images can be retagged to &amp;#8220;trick&amp;#8221; diagnostics so it doesn&amp;#8217;t attempt to pull the image from the online registry:&lt;/p&gt; &lt;pre&gt;ansible nodes --timeout=120 -m shell -b -a 'docker pull satellite.mydomain:5000/MyOrg-ocp311-openshift3_ose-deployer:v3.11.69' ansible nodes --timeout=120 -m shell -b -a 'docker tag satellite.mydomain:5000/MyOrg-ocp311-openshift3_ose-control-plane:v3.11.69 registry.redhat.io/openshift3/ose-control-plane:v3.11.69' ansible nodes --timeout=120 -m shell -b -a 'docker tag satellite.mydomain:5000/MyOrg-ocp311-openshift3_ose-control-plane:v3.11.69 registry.redhat.io/openshift3/ose-control-plane:v3.11' ansible nodes --timeout=120 -m shell -b -a 'docker pull satellite.mydomain:5000/MyOrg-ocp311-openshift3_ose-node:v3.11.69' ansible nodes --timeout=120 -m shell -b -a 'docker tag satellite.mydomain:5000/MyOrg-ocp311-openshift3_ose-node:v3.11.69 registry.redhat.io/openshift3/ose-node:v3.11.69' ansible nodes --timeout=120 -m shell -b -a 'docker tag satellite.mydomain:5000/MyOrg-ocp311-openshift3_ose-node:v3.11.69 registry.redhat.io/openshift3/ose-node:v3.11' ansible nodes --timeout=120 -m shell -b -a 'docker pull satellite.mydomain:5000/MyOrg-ocp311-openshift3_ose-deployer:v3.11.69' ansible nodes --timeout=120 -m shell -b -a 'docker tag satellite.mydomain:5000/MyOrg-ocp311-openshift3_ose-deployer:v3.11.69 registry.redhat.io/openshift3/ose-deployer:v3.11.69' ansible nodes --timeout=120 -m shell -b -a 'docker tag satellite.mydomain:5000/MyOrg-ocp311-openshift3_ose-deployer:v3.11.69 registry.redhat.io/openshift3/ose-deployer:v3.11' &lt;/pre&gt; &lt;p&gt;Then, you should be able to run:&lt;/p&gt; &lt;pre&gt;oc adm diagnostics&lt;/pre&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;To get your cluster installed in a disconnected mode, the instructions in this article should get you started. However, it may be possible to encounter a missing image or a reference to an online image depending on which applications you might be using. In that case, keep an eye out for such possibilities and consider updating the references in the deployment or build configuration of the application, or re-tagging Docker images as a temporary measure only (just to rule out the error being the image is not reachable).&lt;br /&gt; &lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F08%2Fred-hat-openshift-3-11-disconnected-installation-using-satellite-docker-registry%2F&amp;#38;linkname=Red%20Hat%20OpenShift%203.11%20disconnected%20installation%20using%20Satellite%20Docker%20registry" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F08%2Fred-hat-openshift-3-11-disconnected-installation-using-satellite-docker-registry%2F&amp;#38;linkname=Red%20Hat%20OpenShift%203.11%20disconnected%20installation%20using%20Satellite%20Docker%20registry" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F08%2Fred-hat-openshift-3-11-disconnected-installation-using-satellite-docker-registry%2F&amp;#38;linkname=Red%20Hat%20OpenShift%203.11%20disconnected%20installation%20using%20Satellite%20Docker%20registry" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F08%2Fred-hat-openshift-3-11-disconnected-installation-using-satellite-docker-registry%2F&amp;#38;linkname=Red%20Hat%20OpenShift%203.11%20disconnected%20installation%20using%20Satellite%20Docker%20registry" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F08%2Fred-hat-openshift-3-11-disconnected-installation-using-satellite-docker-registry%2F&amp;#38;linkname=Red%20Hat%20OpenShift%203.11%20disconnected%20installation%20using%20Satellite%20Docker%20registry" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F08%2Fred-hat-openshift-3-11-disconnected-installation-using-satellite-docker-registry%2F&amp;#38;linkname=Red%20Hat%20OpenShift%203.11%20disconnected%20installation%20using%20Satellite%20Docker%20registry" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F08%2Fred-hat-openshift-3-11-disconnected-installation-using-satellite-docker-registry%2F&amp;#38;linkname=Red%20Hat%20OpenShift%203.11%20disconnected%20installation%20using%20Satellite%20Docker%20registry" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F08%2Fred-hat-openshift-3-11-disconnected-installation-using-satellite-docker-registry%2F&amp;#38;linkname=Red%20Hat%20OpenShift%203.11%20disconnected%20installation%20using%20Satellite%20Docker%20registry" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F08%2Fred-hat-openshift-3-11-disconnected-installation-using-satellite-docker-registry%2F&amp;#038;title=Red%20Hat%20OpenShift%203.11%20disconnected%20installation%20using%20Satellite%20Docker%20registry" data-a2a-url="https://developers.redhat.com/blog/2019/04/08/red-hat-openshift-3-11-disconnected-installation-using-satellite-docker-registry/" data-a2a-title="Red Hat OpenShift 3.11 disconnected installation using Satellite Docker registry"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/08/red-hat-openshift-3-11-disconnected-installation-using-satellite-docker-registry/"&gt;Red Hat OpenShift 3.11 disconnected installation using Satellite Docker registry&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/-0ZdMLF-oNQ" height="1" width="1" alt=""/&gt;</content><summary>In this article, I will discuss the prerequisites and requirements for the successful implementation of Red Hat OpenShift 3.11 disconnected installation using Red Hat Satellite as the local Docker registry, which I have been able to do with the support of my colleagues. I also discuss adjustments that may be required post install. This work is based on the following references: OpenShift disconnec...</summary><dc:creator>mohammad ahmad</dc:creator><dc:date>2019-04-08T07:01:05Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/08/red-hat-openshift-3-11-disconnected-installation-using-satellite-docker-registry/</feedburner:origLink></entry><entry><title>Infinispan Spring Boot Starter 2.1.5.Final and 1.0.7.Final are out!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/BHwvIR1Jd9s/infinispan-spring-boot-starter-215final.html" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="minor release" scheme="searchisko:content:tags" /><category term="spring-boot" scheme="searchisko:content:tags" /><category term="spring-boot starters" scheme="searchisko:content:tags" /><author><name>Katia Aresti</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_spring_boot_starter_2_1_5_final_and_1_0_7_final_are_out</id><updated>2019-04-08T08:51:08Z</updated><published>2019-04-05T09:48:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;br /&gt;Dear Infinispan and Spring Boot users,&lt;br /&gt;&lt;br /&gt;We have just released&amp;nbsp;&lt;a href="https://github.com/infinispan/infinispan-spring-boot" target="_blank"&gt;Infinispan Spring Boot Starter&lt;/a&gt;&amp;nbsp;&lt;b&gt;2.1.5.Final&amp;nbsp;&lt;/b&gt;and&lt;b&gt; 1.0.7.Final&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;&lt;b&gt;2.1.5.Final&lt;/b&gt;&lt;/h3&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt; &lt;b&gt;2.1.5.Final&lt;/b&gt;&lt;span style="font-weight: 400;"&gt;&amp;nbsp;is using&lt;/span&gt;&lt;b&gt;&amp;nbsp;Infinispan 9.4.11.Final&lt;/b&gt;&lt;span style="font-weight: 400;"&gt;&amp;nbsp;and&amp;nbsp;&lt;/span&gt;&lt;b&gt;Spring-Boot 2.1.4.RELEASE&lt;/b&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;br /&gt;&lt;h4&gt;&lt;b&gt;Important Spring-Boot bug fix&lt;/b&gt;&lt;/h4&gt;Previous&amp;nbsp;versions of Spring-Boot 2.1.x contained a bug related to the &lt;a href="https://openjdk.java.net/jeps/238" target="_blank"&gt;multi-release jars&lt;/a&gt;. Infinispan contains multi-release jars, in consequence, we could not run our applications using &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;java -jar&lt;/span&gt; with Java 11 (Java 8 worked fine). For additional explanations, read &lt;a href="https://stackoverflow.com/questions/54635814/why-does-infinispan-fail-with-noclassdeffounderror-on-spring-boot-java-11" target="_blank"&gt;here&lt;/a&gt;.&lt;br /&gt;Spring-Boot team has fixed this&amp;nbsp;&lt;a href="https://github.com/spring-projects/spring-boot/issues/15981" target="_blank"&gt;bug&lt;/a&gt;&amp;nbsp;and released the correction in Spring-Boot 2.1.4.RELEASE, along with &lt;a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.1.4.RELEASE" target="_blank"&gt;many other&amp;nbsp;features and bug fixes&lt;/a&gt;, so consider upgrading soon.&lt;br /&gt;&lt;h4&gt;&lt;b&gt;Statistics on Client/Server mode and Actuator&lt;/b&gt;&lt;/h4&gt;Statistics configuration in client/server mode for the client&amp;nbsp;evolved in the latest Infinispan versions. As a remainder, to activate actuator statistics in client/server mode :&lt;br /&gt;- Configure &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;'infinispan.remote.statistics=true'&lt;/span&gt; in the &lt;b&gt;application.properties&lt;/b&gt;&lt;br /&gt;&lt;u&gt;or&lt;/u&gt;&lt;br /&gt;- Configure '&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;'infinispan.client.hotrod.statistics=true"&lt;/span&gt; in the &lt;b&gt;hotrod-client.properties&lt;/b&gt;&lt;br /&gt;&lt;u&gt;or&lt;/u&gt;&lt;br /&gt;- Configure by code, for example:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;@Bean&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;public InfinispanRemoteConfigurer infinispanRemoteConfigurer() {&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;nbsp; &amp;nbsp; return () -&amp;gt; new ConfigurationBuilder().statistics().enable().build();&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;}&lt;/span&gt;&lt;br /&gt;&lt;h4&gt;&lt;/h4&gt;&lt;h4&gt;JMX&lt;/h4&gt;&lt;div&gt;If you want to use Infinispan and JMX, for example on Client/Server mode, set the&amp;nbsp;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;'jmx'&lt;/span&gt; property&amp;nbsp;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;'true'&lt;/span&gt; as explained above with the &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;'statistics'&lt;/span&gt; property. However, you might get a&amp;nbsp;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;javax.management.InstanceAlreadyExistsException&amp;nbsp;&lt;/span&gt;because both Infinispan and Spring will try to register the MXBean.&lt;br /&gt;&lt;br /&gt;The correction will land on the next starter release. If you need to avoid this error today, you can tell Spring-Boot not to register the bean with the following code (Thanks Stéphane Nicoll for the tip!):&lt;br /&gt;&lt;br /&gt;&lt;script src="https://gist.github.com/karesti/d539d5dad724f6de11eee8f151e6366f.js"&gt;&lt;/script&gt;&lt;br /&gt;&lt;/div&gt;&lt;h4&gt;&lt;/h4&gt;&lt;h4&gt;Testcontainers&lt;/h4&gt;This version includes an integration test using &lt;a class="" href="https://testcontainers.org/" target="_blank"&gt;Testcontainers&lt;/a&gt;, &lt;a href="https://junit.org/junit5/" target="_blank"&gt;JUnit5&lt;/a&gt; and the &lt;a href="https://hub.docker.com/r/jboss/infinispan-server" target="_blank"&gt;Infinispan Server&lt;/a&gt;. Grab a look &lt;a href="https://github.com/infinispan/infinispan-spring-boot/blob/90e79a81dd32a6c9462e76bfdfb175e2c751b3f0/infinispan-spring-boot-starter-remote/src/test/java/test/org/infinispan/spring/starter/remote/actuator/RemoteCacheMetricBinderTest.java" target="_blank"&gt;here&lt;/a&gt;&amp;nbsp;if you are curious.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;&lt;b&gt;1.0.7.Final&lt;/b&gt;&lt;/h3&gt;&lt;div&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt; &lt;b&gt;1.0.7.Final&lt;/b&gt;&amp;nbsp;upgrades to&amp;nbsp;&lt;b&gt;1.5.19.RELEASE&lt;/b&gt; and Infinispan &lt;b&gt;9.4.11.Final&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;⭐ Don't forget to &lt;b&gt;star&lt;/b&gt; the project in &lt;a href="https://github.com/infinispan/infinispan-spring-boot" target="_blank"&gt;GitHub&lt;/a&gt; if you like the starter! ⭐&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;You can find these releases in the maven central repository.&lt;br /&gt;&lt;br /&gt;Please report any issues in our&amp;nbsp;&lt;a href="https://issues.jboss.org/projects/ISPN"&gt;issue tracker&lt;/a&gt;&amp;nbsp;and join the conversation in our&amp;nbsp;&lt;a href="https://infinispan.zulipchat.com/"&gt;Zulip Chat&lt;/a&gt;&amp;nbsp;to shape up our next release.&lt;br /&gt;&lt;br /&gt;Enjoy,&lt;br /&gt;&lt;br /&gt;The Infinispan Team&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/GFvBbnk9bkI" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/BHwvIR1Jd9s" height="1" width="1" alt=""/&gt;</content><summary>Dear Infinispan and Spring Boot users, We have just released Infinispan Spring Boot Starter 2.1.5.Final and 1.0.7.Final. 2.1.5.Final 2.1.5.Final is using Infinispan 9.4.11.Final and Spring-Boot 2.1.4.RELEASE. Important Spring-Boot bug fixPrevious versions of Spring-Boot 2.1.x contained a bug related to the multi-release jars. Infinispan contains multi-release jars, in consequence, we could not run...</summary><dc:creator>Katia Aresti</dc:creator><dc:date>2019-04-05T09:48:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/GFvBbnk9bkI/infinispan-spring-boot-starter-215final.html</feedburner:origLink></entry><entry><title>10 things developers need to know about JShell</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/EnxoewPDoJY/" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="jdk9" scheme="searchisko:content:tags" /><category term="JShell" scheme="searchisko:content:tags" /><author><name>Rahul Kumar</name></author><id>searchisko:content:id:jbossorg_blog-10_things_developers_need_to_know_about_jshell</id><updated>2019-04-05T07:01:15Z</updated><published>2019-04-05T07:01:15Z</published><content type="html">&lt;p&gt;JShell was introduced in JDK 9 as part of Java Enhancement Proposal (JEP) 222 under project Kulla. Many programming languages, such as JavaScript, Python, Ruby, etc., provide easy-to-use, command-line tools for their execution, but Java was still missing such a utility. So, JDK 9 introduced the Java shell (JShell) tool.&lt;/p&gt; &lt;p&gt;I discussed the basics of JShell (which is a Read-Evaluate-Print-Loop; REPL) in a previous &lt;a href="https://developers.redhat.com/blog/2017/10/03/use-jshell-command-line-tool-introduced-jdk-9/"&gt;article.&lt;/a&gt; In this article, I&amp;#8217;ll cover advanced concepts in JShell that users should know for rapid development.&lt;br /&gt; &lt;span id="more-580567"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;1. Re-declaration of variables&lt;/h3&gt; &lt;p&gt;In Java, it is not possible to re-declare a variable. With the help of JShell, however, you can always re-declare the variable based on needs. Note that this is applicable for both primitive as well as for reference type variables. In fact users can re-declare any construct as many times as they want.&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;jshell&amp;#62; String str="Hello" str ==&amp;#62; "JShell"&lt;/pre&gt; &lt;pre&gt;jshell&amp;#62; Integer str=10 str ==&amp;#62; 10&lt;/pre&gt; &lt;h3&gt;2. Scratch variables&lt;/h3&gt; &lt;p&gt;Any expression evaluation from JShell command line is assigned to some variables if not explicitly assigned by user. Such variables are called scratch variables. Example:&lt;/p&gt; &lt;pre&gt;jshell&amp;#62; "Hello"+"JShell" $1 ==&amp;#62; "HelloJShell"&lt;/pre&gt; &lt;p&gt;Note that in order to know the type of variable or more details about expression evaluation, we can set the feedback mode to verbose as below:&lt;/p&gt; &lt;pre&gt;/set feedback verbose&lt;/pre&gt; &lt;pre&gt;jshell&amp;#62; 60+10 $2 ==&amp;#62; 70 | created scratch variable $21 : int&lt;/pre&gt; &lt;p&gt;To come out of verbose mode, set the feedback mode to normal:&lt;/p&gt; &lt;pre&gt;/set feedback normal&lt;/pre&gt; &lt;h3&gt;3. Forward referencing in JShell&lt;/h3&gt; &lt;p&gt;Forward referencing in JShell allows you to call constructs up front even though they do not exist. For example, suppose there is a method named &lt;code&gt;greet()&lt;/code&gt; as below. Notice that &lt;code&gt;greet()&lt;/code&gt; internally calls another method named &lt;code&gt;greetHelloWorld()&lt;/code&gt;, which is not declared yet. Creation of &lt;code&gt;greet()&lt;/code&gt; is successful, but it can&amp;#8217;t be invoked until &lt;code&gt;greetHelloWorld()&lt;/code&gt; is declared. This is called forward referencing in JShell.&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;jshell&amp;#62; public void greet(){ ...&amp;#62; greetHelloWorld();} | created method greet(), however, it cannot be invoked until method greetHelloWorld() is declared              jshell&amp;#62; greet() | attempted to call method greet() which cannot be invoked until method greetHelloWorld() is declared&lt;/pre&gt; &lt;pre&gt;jshell&amp;#62; public void greetHelloWorld(){ ...&amp;#62; System.out.println("Hello World");} | created method greetHelloWorld()&lt;/pre&gt; &lt;pre&gt;jshell&amp;#62; greet() Hello World&lt;/pre&gt; &lt;h3&gt;4. Exception Handling in JShell&lt;/h3&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;jshell&amp;#62; int divide(int a,int b) throws IOException{ ...&amp;#62; if(b==0){ ...&amp;#62; throw new IOException(); ...&amp;#62; } ...&amp;#62; return a/b; ...&amp;#62; } | created method divide(int,int)&lt;/pre&gt; &lt;pre&gt;jshell&amp;#62; divide(1,0) | java.io.IOException thrown: | at divide (#2:3) | at (#3:1)&lt;/pre&gt; &lt;p&gt;Notice that we are not catching any exceptions thrown by divide method; JShell takes care of that. Also notice that we are not importing IOException class, but the code is compiled and executed just fine. The reason for this is that, for any JShell session, some packages are imported by default. To check all the packages that are by default imported in any JShell Session:&lt;/p&gt; &lt;pre&gt;jshell&amp;#62; /imports | import java.io.* | import java.math.* | import java.net.* | import java.nio.file.* | import java.util.* | import java.util.concurrent.* | import java.util.function.* | import java.util.prefs.* | import java.util.regex.* | import java.util.stream.* | import java.io.IOException&lt;/pre&gt; &lt;h3&gt;5. Persistency behavior of instructions in JShell session&lt;/h3&gt; &lt;p&gt;All instructions in JShell Session are not persistent by default. They are transient in nature and are lost when a user exits from a JShell session.&lt;/p&gt; &lt;p&gt;JShell, however, provides a way for users to save all the information in a particular JShell session and access that information in a different JShell session. This is very handy if users want to save the useful snippets from a JShell session and access them in a different JShell session.&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;jshell&amp;#62; String s="Hello" s ==&amp;#62; "Hello" jshell&amp;#62; int i=100; i ==&amp;#62; 100&lt;/pre&gt; &lt;pre&gt;jshell&amp;#62; /save C:\data\mySession.jsh&lt;/pre&gt; &lt;pre&gt;jshell&amp;#62; /exit | Goodbye λ jshell | Welcome to JShell -- Version 9.0.4 | For an introduction type: /help intro&lt;/pre&gt; &lt;pre&gt;jshell&amp;#62; /vars&lt;/pre&gt; &lt;pre&gt;jshell&amp;#62; /open C:\Data\mySession.jsh&lt;/pre&gt; &lt;pre&gt;jshell&amp;#62; /vars | String s = "Hello" | int i = 100&lt;/pre&gt; &lt;h3&gt;6. Using external libraries&lt;/h3&gt; &lt;p&gt;There are many useful third-party open source libraries. Typically, developers keep those libraries in class-path of project and use it. But, in the case of JShell, using third-party libraries is quite easy.&lt;/p&gt; &lt;p&gt;For example, suppose we want to use a String Utility class from a third-party library called Apache Commons Lang. Here is the syntax for keeping libraries in class-path:&lt;/p&gt; &lt;pre&gt;shell&amp;#62; /env --class-path &amp;#60;Relative Path of lib from where JShell is run&amp;#62;&lt;/pre&gt; &lt;pre&gt;jshell&amp;#62; /env --class-path ../lib/commons-lang3-3.8.1.jar | Setting new options and restoring state.&lt;/pre&gt; &lt;pre&gt; import org.apache.commons.lang3.StringUtils;&lt;/pre&gt; &lt;pre&gt;jshell&amp;#62; System.out.println(StringUtils.isEmpty("")) true&lt;/pre&gt; &lt;pre&gt;jshell&amp;#62; System.out.println(StringUtils.isEmpty("hello")) false&lt;/pre&gt; &lt;h3&gt;7. Using JShell specific commands and tools for quick development&lt;/h3&gt; &lt;p&gt;JShell comes with its own specific handy commands, which can be used for faster testing on the JShell Console. Below are some useful commands:&lt;/p&gt; &lt;pre&gt; /history - Prints all commands executed on JShell (Java Commands+ JShell specific commands)&lt;/pre&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;jshell&amp;#62; String s ="Hello" s ==&amp;#62; "Hello" jshell&amp;#62; class Employee{ ...&amp;#62; } | created class Employee jshell&amp;#62; /vars | String s = "Hello" jshell&amp;#62; /history String s ="Hello" class Employee{ } /vars /history&lt;/pre&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;pre&gt; /list    - Prints all JAVA related commands executed in JShell. Notice that this list the command in Numerical              order of each command identifier. This identifier can be used to execute certain construct again.&lt;/pre&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;jshell&amp;#62; /list 1 : String s ="Hello"; 2 : class Employee{ }&lt;/pre&gt; &lt;pre&gt;jshell&amp;#62; /1 String s ="Hello"; s ==&amp;#62; "Hello"&lt;/pre&gt; &lt;pre&gt;/reset   - Resets the state of current JShell session.&lt;/pre&gt; &lt;pre&gt;CTRL+R   - For searching a particular command&lt;/pre&gt; &lt;pre&gt;CTRL+S   - Performing Forward Search&lt;/pre&gt; &lt;pre&gt;CTRL+C   - To exit from JShell session&lt;/pre&gt; &lt;pre&gt;/exit    - To exit from JShell session&lt;/pre&gt; &lt;pre&gt;/vars     - To list all variables inside current JShell session&lt;/pre&gt; &lt;pre&gt;/imports  - To list all imports inside current JShell session&lt;/pre&gt; &lt;pre&gt;/help    - To know more about JShell specific commands&lt;/pre&gt; &lt;h3&gt;8. Tab completion in JShell&lt;/h3&gt; &lt;p&gt;JShell allows developers to complete their code constructs automatically using the Tab key.&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;p&gt;&lt;img class=" wp-image-580697 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/ffffff-1024x186.jpg" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/ffffff-1024x186.jpg" alt="" width="893" height="162" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/ffffff-1024x186.jpg 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/ffffff-300x54.jpg 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/ffffff-768x139.jpg 768w" sizes="(max-width: 893px) 100vw, 893px" /&gt;&lt;/p&gt; &lt;p&gt;Along with this, user can also see documentation for relevant packages using JShell:&lt;/p&gt; &lt;pre&gt;jshell&amp;#62; java.io io Signatures: java.io&lt;/pre&gt; &lt;pre&gt;&amp;#60;press tab again to see documentation&amp;#62;&lt;/pre&gt; &lt;h3&gt;9. Editing a construct in JShell&lt;/h3&gt; &lt;p&gt;It&amp;#8217;s very common during development to want to edit a previously executed command in JShell session. JShell provides a very handy command and editor for same.&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;/edit        - Edit all constructs in current JShell session&lt;/pre&gt; &lt;pre&gt;/edit 1      - Edit only 1st construct (see from /list) in current JShell session&lt;/pre&gt; &lt;pre&gt;/edit Person - Edit only Person class in current JShell session&lt;/pre&gt; &lt;p&gt;&lt;img class=" wp-image-580727 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Edit-1024x549.jpg" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Edit-1024x549.jpg" alt="" width="831" height="445" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Edit-1024x549.jpg 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/Edit-300x161.jpg 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/Edit-768x412.jpg 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/Edit.jpg 1453w" sizes="(max-width: 831px) 100vw, 831px" /&gt;&lt;/p&gt; &lt;h3&gt;10. Using JShell programmatically&lt;/h3&gt; &lt;p&gt;JDK offers an API for programmers to access JShell programmatically rather than by using REPL. Please refer to the corresponding Java docs for more details.&lt;/p&gt; &lt;p&gt;I&amp;#8217;ve shown just a few advanced concepts in JShell in this article, and this is not the end. I also suggest readers go through the JShell docs for more information.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F05%2F10-things-developers-need-to-know-about-jshell%2F&amp;#38;linkname=10%20things%20developers%20need%20to%20know%20about%20JShell" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F05%2F10-things-developers-need-to-know-about-jshell%2F&amp;#38;linkname=10%20things%20developers%20need%20to%20know%20about%20JShell" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F05%2F10-things-developers-need-to-know-about-jshell%2F&amp;#38;linkname=10%20things%20developers%20need%20to%20know%20about%20JShell" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F05%2F10-things-developers-need-to-know-about-jshell%2F&amp;#38;linkname=10%20things%20developers%20need%20to%20know%20about%20JShell" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F05%2F10-things-developers-need-to-know-about-jshell%2F&amp;#38;linkname=10%20things%20developers%20need%20to%20know%20about%20JShell" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F05%2F10-things-developers-need-to-know-about-jshell%2F&amp;#38;linkname=10%20things%20developers%20need%20to%20know%20about%20JShell" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F05%2F10-things-developers-need-to-know-about-jshell%2F&amp;#38;linkname=10%20things%20developers%20need%20to%20know%20about%20JShell" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F05%2F10-things-developers-need-to-know-about-jshell%2F&amp;#38;linkname=10%20things%20developers%20need%20to%20know%20about%20JShell" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F05%2F10-things-developers-need-to-know-about-jshell%2F&amp;#038;title=10%20things%20developers%20need%20to%20know%20about%20JShell" data-a2a-url="https://developers.redhat.com/blog/2019/04/05/10-things-developers-need-to-know-about-jshell/" data-a2a-title="10 things developers need to know about JShell"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/05/10-things-developers-need-to-know-about-jshell/"&gt;10 things developers need to know about JShell&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/EnxoewPDoJY" height="1" width="1" alt=""/&gt;</content><summary>JShell was introduced in JDK 9 as part of Java Enhancement Proposal (JEP) 222 under project Kulla. Many programming languages, such as JavaScript, Python, Ruby, etc., provide easy-to-use, command-line tools for their execution, but Java was still missing such a utility. So, JDK 9 introduced the Java shell (JShell) tool. I discussed the basics of JShell (which is a Read-Evaluate-Print-Loop; REPL) i...</summary><dc:creator>Rahul Kumar</dc:creator><dc:date>2019-04-05T07:01:15Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/05/10-things-developers-need-to-know-about-jshell/</feedburner:origLink></entry><entry><title>Hibernate Search 6.0.0.Alpha4 released!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/em4f2-N3pTw/" /><category term="elasticsearch" scheme="searchisko:content:tags" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="hibernate search" scheme="searchisko:content:tags" /><category term="lucene" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Yoann Rodière</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_search_6_0_0_alpha4_released</id><updated>2019-04-05T06:37:42Z</updated><published>2019-04-05T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We just published Hibernate Search 6.0.0.Alpha4, the fourth release for the still-in-development 6.0 branch. This release mainly adds an "exists" predicate, improves the DSL by allowing to bypass DSL and projection converters or to override analyzers, restores the Elasticsearch AWS integration, and upgrades the Lucene backend to Lucene 8.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="getting-started-with-hibernate-search-6"&gt;&lt;a class="anchor" href="#getting-started-with-hibernate-search-6"&gt;&lt;/a&gt;Getting started with Hibernate Search 6&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you want to dive right into the new, shiny Hibernate Search 6, a good starting point is the &lt;a href="https://docs.jboss.org/hibernate/search/6.0/reference/en-US/html_single/#getting-started"&gt;getting started guide&lt;/a&gt; included in the reference documentation.&lt;/p&gt; &lt;/div&gt; &lt;div class="admonitionblock note"&gt; &lt;table&gt; &lt;tr&gt; &lt;td class="icon"&gt; &lt;i class="fa icon-note" title="Note"&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class="content"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hibernate Search 6 is still in development and its APIs differ significantly from Search 5.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For more information about the current status of this branch, see &lt;a href="http://hibernate.org/search/releases/6.0/#whats-new"&gt;the page dedicated to Search 6 on hibernate.org&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For more information about migration and what we intend to do to help you, see &lt;a href="http://hibernate.org/search/documentation/migrate/6.0/"&gt;the migration guide&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-new"&gt;&lt;a class="anchor" href="#what-s-new"&gt;&lt;/a&gt;What’s new&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="sect2"&gt; &lt;h3 id="new-exists-predicate"&gt;&lt;a class="anchor" href="#new-exists-predicate"&gt;&lt;/a&gt;New "exists" predicate&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We added support for the "exists" predicate in the Search DSL, allowing to filter documents according to the presence or absence of a non-&lt;code&gt;null&lt;/code&gt; value for a given field:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="JAVA"&gt;SearchQuery&amp;lt;MyEntity&amp;gt; query = searchSession.search(MyEntity.class).asEntity() .predicate(f -&amp;gt; f.exists().onField(&lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;someField&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;)) .toQuery();&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="the-elasticsearch-aws-integration-is-back"&gt;&lt;a class="anchor" href="#the-elasticsearch-aws-integration-is-back"&gt;&lt;/a&gt;The Elasticsearch AWS integration is back&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We restored the AWS integration as part of &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3051"&gt;HSEARCH-3051&lt;/a&gt;. See &lt;a href="https://docs.jboss.org/hibernate/search/6.0/reference/en-US/html_single/#backend-elasticsearch-configuration-aws"&gt;the dedicated section in the documentation&lt;/a&gt; to configure your backend to talk with an AWS-managed Elasticsearch service.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="converters-can-be-bypassed-in-predicates"&gt;&lt;a class="anchor" href="#converters-can-be-bypassed-in-predicates"&gt;&lt;/a&gt;Converters can be bypassed in predicates&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;DSL and projection converters automatically convert values from the type expected by the user to the underlying type exposed by backends. For example &lt;code&gt;java.util.Date&lt;/code&gt; properties have a converter between that type and &lt;code&gt;Instant&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Just like the &lt;code&gt;.ignoreFieldBridge&lt;/code&gt; option in Search 5, &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3510"&gt;there is now an option&lt;/a&gt; to bypass these converters in Search 6:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="JAVA"&gt;&lt;span style="color:#777"&gt;// When the value to match is a java.util.Date&lt;/span&gt; &lt;span style="color:#0a8;font-weight:bold"&gt;Date&lt;/span&gt; dateToMatch = &lt;span style="color:#777"&gt;/* ... */&lt;/span&gt;; SearchQuery&amp;lt;MyEntity&amp;gt; query = searchSession.search(MyEntity.class).asEntity() .predicate(f -&amp;gt; f.match().onField(&lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;myJavaUtilDate&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;).matching(dateToMatch)) .toQuery(); &lt;span style="color:#777"&gt;// When the value to match is a java.time.Instant&lt;/span&gt; Instant instantToMatch = &lt;span style="color:#777"&gt;/* ... */&lt;/span&gt;; SearchQuery&amp;lt;MyEntity&amp;gt; query = searchSession.search(MyEntity.class).asEntity() .predicate(f -&amp;gt; f.match().onField(&lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;myJavaUtilDate&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;).matching(instantToMatch, DslConverter.DISABLED)) .toQuery();&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="JAVA"&gt;&lt;span style="color:#777"&gt;// When we need the projection as a java.util.Date&lt;/span&gt; SearchQuery&amp;lt;&lt;span style="color:#0a8;font-weight:bold"&gt;Date&lt;/span&gt;&amp;gt; query = searchSession.search(MyEntity.class) .asProjection(f -&amp;gt; f.field(&lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;myJavaUtilDate&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span style="color:#0a8;font-weight:bold"&gt;Date&lt;/span&gt;.class) .predicate(f -&amp;gt; f.matchAll()) .toQuery(); &lt;span style="color:#777"&gt;// When we need the projection as a java.time.Instant&lt;/span&gt; SearchQuery&amp;lt;Instant&amp;gt; query = searchSession.search(MyEntity.class) .asProjection(f -&amp;gt; f.field(&lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;myJavaUtilDate&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;, Instant.class, ProjectionConverter.DISABLED) .predicate(f -&amp;gt; f.matchAll()) .toQuery();&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="analyzers-can-be-overridden-at-query-time"&gt;&lt;a class="anchor" href="#analyzers-can-be-overridden-at-query-time"&gt;&lt;/a&gt;Analyzers can be overridden at query time&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Analyzers could already be overridden in Search 5, but only at the &lt;code&gt;QueryBuilder&lt;/code&gt; level and on a per-field basis, which could be annoying if you had many fields in your predicates or if you needed two predicates with different overrides.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In Search 6, &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3312"&gt;you can now override analyzers on a per-predicate basis&lt;/a&gt;:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="JAVA"&gt;SearchQuery&amp;lt;MyEntity&amp;gt; query = searchSession.search(MyEntity.class).asEntity() .predicate(f -&amp;gt; f.match().onField(&lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;name_autocomplete&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;).matching(userInput).analyzer(&lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;edgengram_query&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;)) .toQuery();&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="configuration"&gt;&lt;a class="anchor" href="#configuration"&gt;&lt;/a&gt;Configuration&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Since &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3521"&gt;HSEARCH-3521&lt;/a&gt;, the property keys for index-scoped configuration properties are now prefixed with &lt;code&gt;.backends.&amp;lt;backend name&amp;gt;&lt;/code&gt;. For example:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code&gt;hibernate.search.backends.myBackend.indexes.myIndex.lifecycle.strategy = create&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;See the &lt;a href="https://docs.jboss.org/hibernate/search/6.0/reference/en-US/html_single/#configuration"&gt;section about configuration in the reference documentation&lt;/a&gt; for more information.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="version-upgrades"&gt;&lt;a class="anchor" href="#version-upgrades"&gt;&lt;/a&gt;Version upgrades&lt;/h3&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3531"&gt;HSEARCH-3531&lt;/a&gt;: Upgrade to Lucene 8.0.0&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3533"&gt;HSEARCH-3533&lt;/a&gt;: Upgrade to Hibernate ORM 5.4.2&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="other-improvements-and-bug-fixes"&gt;&lt;a class="anchor" href="#other-improvements-and-bug-fixes"&gt;&lt;/a&gt;Other improvements and bug fixes&lt;/h3&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3507"&gt;HSEARCH-3507&lt;/a&gt;: Improve consistency of naming for methods related to native Elasticsearch/Lucene features (fromJsonString, etc.)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3554"&gt;HSEARCH-3554&lt;/a&gt;: The Elasticsearch backend defaults to a 10 element hit limit&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-2534"&gt;HSEARCH-2534&lt;/a&gt;: Allow using query-only analyzer definitions with Elasticsearch&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-2185"&gt;HSEARCH-2185&lt;/a&gt;: Phrase query with the DSL does not consider the &lt;code&gt;ignoreAnalyzer()&lt;/code&gt; options&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-2423"&gt;HSEARCH-2423&lt;/a&gt;: Projecting an unstored field should raise an exception with Elasticsearch&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-2518"&gt;HSEARCH-2518&lt;/a&gt;: Allow to assign a name to an analyzer class/instance&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-2757"&gt;HSEARCH-2757&lt;/a&gt;: Allow usage of FieldSelectors when using Spatial indexing&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3530"&gt;HSEARCH-3530&lt;/a&gt;: Update the date formats in the reference documentation&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3532"&gt;HSEARCH-3532&lt;/a&gt;: Fix the java module name for hibernate-search-util-common&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3538"&gt;HSEARCH-3538&lt;/a&gt;: Disabling projection converters in projections is ignored when checking compatibility&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3540"&gt;HSEARCH-3540&lt;/a&gt;: The NONE Elasticsearch index lifecycle strategy throws an AssertionFailure&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3543"&gt;HSEARCH-3543&lt;/a&gt;: Allow to set GeoPointBridges as sortable to enable distance sorts&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3548"&gt;HSEARCH-3548&lt;/a&gt;: ZonedDateTime with zone = ZoneOffset.UTC fails when indexing in Elasticsearch 5.6&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3549"&gt;HSEARCH-3549&lt;/a&gt;: Indexing MonthDay.of( 2, 29 ) fails on Elasticsearch&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3557"&gt;HSEARCH-3557&lt;/a&gt;: ZonedDateTime at later offset during DST change gets parsed incorrectly&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;And more. For a full list of changes since the previous releases, please see the &lt;a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?projectId=10061&amp;amp;version=31763"&gt;release notes&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="how-to-get-this-release"&gt;&lt;a class="anchor" href="#how-to-get-this-release"&gt;&lt;/a&gt;How to get this release&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;All details are available and up to date on the &lt;a href="http://hibernate.org/search/releases/6.0/#get-it"&gt;dedicated page on hibernate.org&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="feedback-issues-ideas"&gt;&lt;a class="anchor" href="#feedback-issues-ideas"&gt;&lt;/a&gt;Feedback, issues, ideas?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get in touch, use the following channels:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://stackoverflow.com/questions/tagged/hibernate-search"&gt;hibernate-search tag on Stackoverflow&lt;/a&gt; (usage questions)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/c/hibernate-search"&gt;User forum&lt;/a&gt; (usage questions, general feedback)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH"&gt;Issue tracker&lt;/a&gt; (bug reports, feature requests)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://lists.jboss.org/pipermail/hibernate-dev/"&gt;Mailing list&lt;/a&gt; (development-related discussions)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/em4f2-N3pTw" height="1" width="1" alt=""/&gt;</content><summary>We just published Hibernate Search 6.0.0.Alpha4, the fourth release for the still-in-development 6.0 branch. This release mainly adds an "exists" predicate, improves the DSL by allowing to bypass DSL and projection converters or to override analyzers, restores the Elasticsearch AWS integration, and upgrades the Lucene backend to Lucene 8. Getting started with Hibernate Search 6 If you want to dive...</summary><dc:creator>Yoann Rodière</dc:creator><dc:date>2019-04-05T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2019/04/05/hibernate-search-6-0-0-Alpha4/</feedburner:origLink></entry><entry><title>Build and run Buildah inside a Podman container</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/c-W7rRg-ClM/" /><category term="buildah" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Podman" scheme="searchisko:content:tags" /><author><name>Tom Sweeney</name></author><id>searchisko:content:id:jbossorg_blog-build_and_run_buildah_inside_a_podman_container</id><updated>2019-04-04T07:03:35Z</updated><published>2019-04-04T07:03:35Z</published><content type="html">&lt;p&gt;This past Christmas I gave my wife a set of nesting dolls similar to &lt;a href="https://en.wikipedia.org/wiki/Matryoshka_doll"&gt;Russian Matryoshka dolls&lt;/a&gt;. If you’re not familiar with them, they consist of a wooden doll, which opens to reveal another doll, inside which you&amp;#8217;ll find another doll, and so on until you get to the smallest and often most ornate doll of them all.  This concept got me thinking about nesting containers.&lt;/p&gt; &lt;p&gt;I thought I’d try building my own nesting container using &lt;a href="https://developers.redhat.com/articles/podman-next-generation-linux-container-tools/"&gt;Podman&lt;/a&gt; to create a container in which I could do &lt;a href="https://developers.redhat.com/blog/2019/02/21/podman-and-buildah-for-docker-users/"&gt;Buildah&lt;/a&gt; development and also spin up Buildah containers and images. Once this Podman container was created, I could move it to any &lt;a href="https://developers.redhat.com/topics/linux/"&gt;Linux&lt;/a&gt; platform that supported Podman and do development on Buildah from it. In this article, I&amp;#8217;ll show how I set it up.&lt;/p&gt; &lt;p&gt;&lt;span id="more-576857"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Preparing the environment&lt;/h2&gt; &lt;p&gt;I started this experiment on a newly installed Fedora 29 virtual machine and installed the latest Podman and container-selinux on it with &lt;code&gt;dnf -y install podman container-selinux --enablerepo updates-testing&lt;/code&gt;. This gave me Podman v1.1.2 and container-selinux version 2.85-1.&lt;/p&gt; &lt;p&gt;Because both the container and the container within the container will be using fuse-overlayfs, they won’t be happy trying to mount their respective directories over each other. So, the first step is to create a directory for the container within the container to use, and I’ve named it &lt;code&gt;/var/lib/mycontainer&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;# mkdir /var/lib/mycontainer&lt;/pre&gt; &lt;h2&gt;Podman container creation&lt;/h2&gt; &lt;p&gt;I then created the following Dockerfile, which will pull Fedora, set up the GOPATH, install the Buildah dependencies, use git to clone the project in the &lt;code&gt;/root/buildah&lt;/code&gt; directory, and finally update &lt;code&gt;/etc/container/storage.conf&lt;/code&gt; with sed to uncomment the mount_program:&lt;/p&gt; &lt;pre&gt;# FILE=~/Dockerfile.cinc # /bin/cat &amp;#60;&amp;#60;EOM &amp;#62;$FILE FROM fedora:latest ENV GOPATH=/root/buildah RUN dnf -y install \ make \ golang \ bats \ btrfs-progs-devel \ device-mapper-devel \ glib2-devel \ gpgme-devel \ libassuan-devel \ libseccomp-devel \ ostree-devel \ git \ bzip2 \ go-md2man \ runc \ fuse-overlayfs \ fuse3 \ containers-common; \ mkdir /root/buildah; \ git clone https://github.com/containers/buildah /root/buildah/src/github.com/containers/buildah RUN sed -i -e 's|#mount_program = "/usr/bin/fuse-overlayfs"|mount_program = "/usr/bin/fuse-overlayfs"|' /etc/containers/storage.conf EOM &lt;/pre&gt; &lt;p&gt;Next we create the image using the Dockerfile. (Note the hard-to-see period at the end of the line.) This command can take 5 to 10 minutes to complete, and it seems to hang for a bit near the end, so be patient. This is one of those great commands that you can kick off and let run while you go freshen up your cup of tea.&lt;/p&gt; &lt;pre&gt;# podman build -t buildahimage -f ~/Dockerfile.cinc .&lt;/pre&gt; &lt;p&gt;That’s it for the heavy lifting. Let’s create a Podman container in which we’ll do our Buildah development. The following command creates a container named &lt;code&gt;buildahctr&lt;/code&gt;, mounts the host’s &lt;code&gt;mycontainer&lt;/code&gt; to the container’s &lt;code&gt;containers&lt;/code&gt; directory, runs the container detached using the host’s network, turns off label and seccomp confinement in the container, and finally does a little shell hackery to keep the container up and running.&lt;/p&gt; &lt;pre&gt;# podman run --detach --name=buildahctr --net=host --security-opt label=disable --security-opt seccomp=unconfined --device /dev/fuse:rw -v /var/lib/mycontainer:/var/lib/containers:Z buildahimage sh -c 'while true ;do wait; done' &lt;/pre&gt; &lt;h2&gt;Buildah development&lt;/h2&gt; &lt;p&gt;Great, now we have a container up and running Fedora. Let’s hop in and compile and install Buildah onto it. The following command will get us to the command line inside the container.&lt;/p&gt; &lt;pre&gt;# podman exec -it buildahctr /bin/sh &lt;/pre&gt; &lt;p&gt;Now that we&amp;#8217;re inside the container, it’s time for some standard make, git, and Buildah running. (Note that the next five commands were run at the &lt;code&gt;sh-4.4#&lt;/code&gt; prompt; I’ve removed several of the prompts for easier cutting and pasting.)&lt;/p&gt; &lt;pre&gt;sh-4.4# cd /root/buildah export GOPATH=`pwd` cd /root/buildah/src/github.com/containers/buildah make make install sh-4.4# buildah from alpine alpine-working-container sh-4.4# buildah images REPOSITORY TAG IMAGE ID CREATED SIZE docker.io/library/alpine latest 5cb3aa00f899 9 days ago 5.79 MB &lt;/pre&gt; &lt;p&gt;So now we’ve compiled, installed, and run Buildah from within a Podman container.&lt;/p&gt; &lt;p&gt;Next, let’s do a quick change to the Buildah source and see if we can run that with the change in place. Use vi or your favorite editor to change &lt;code&gt;cmd/buildah/images.go&lt;/code&gt;. Search for the &lt;code&gt;outputHeader()&lt;/code&gt; function (near line 219) and find the line in it: &lt;code&gt;format := "table {{.Name}}\t{{.Tag}}\t"&lt;/code&gt;. Remove the word &amp;#8220;table&amp;#8221; from that line making it &lt;code&gt;format := "{{.Name}}\t{{.Tag}}\t”&lt;/code&gt;. Save the file, exit, then &lt;code&gt;make&lt;/code&gt; and &lt;code&gt;make install&lt;/code&gt; it again.&lt;/p&gt; &lt;pre&gt;sh-4.4# vi cmd/buildah/images.go sh-4.4# make sh-4.4# make install &lt;/pre&gt; &lt;p&gt;Now if you run &lt;code&gt;buildah images&lt;/code&gt;, you should see that we’ve made all output act as if the &lt;code&gt;--quiet&lt;/code&gt; option is on, which doesn’t show the table headers.&lt;/p&gt; &lt;pre&gt;sh-4.4# buildah images docker.io/library/alpine latest 5cb3aa00f899 9 days ago 5.79 MB &lt;/pre&gt; &lt;h2&gt;Running a buildah container inside of a Podman container&lt;/h2&gt; &lt;p&gt;For one last piece of fun, let&amp;#8217;s see if we can run a Buildah container within this Podman container using our modified Buildah code. We&amp;#8217;ll just do something simple and list the contents of the &lt;code&gt;/&lt;/code&gt; directory.&lt;/p&gt; &lt;pre&gt;sh-4.4# buildah from --name myalpine alpine myalpine sh-4.4# buildah run --isolation=chroot myalpine ls / bin dev etc home lib media mnt opt proc root run sbin srv sys tmp usr var &lt;/pre&gt; &lt;h2&gt;A portable Buildah development environment&lt;/h2&gt; &lt;p&gt;If you’ve made it this far, you’ve built a container using Podman that is capable of doing Buildah development. That container can also build containers and then run those containers.  I used Buildah for this example, but I could have used Podman to build the internal container, too. Regardless of the internal tool chosen, I now have a container that can build and run containers within itself, much like Matryoshka dolls. Best yet, I could commit this container and push it out to Quay.io or another container registry and then pull it down and run it on another Fedora machine or even another Linux platform. I’ve made a totally portable Buildah development environment.&lt;/p&gt; &lt;p&gt;I hope this exercise will get you thinking about how you might use Podman and Buildah to create a more flexible and dynamic environment in your own shop. Another blog is underway that will show how to do this without being the root user, so stay tuned!&lt;/p&gt; &lt;p&gt;P.S. No daemons were harmed nor deployed during this demo.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F04%2Fbuild-and-run-buildah-inside-a-podman-container%2F&amp;#38;linkname=Build%20and%20run%20Buildah%20inside%20a%20Podman%20container" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F04%2Fbuild-and-run-buildah-inside-a-podman-container%2F&amp;#38;linkname=Build%20and%20run%20Buildah%20inside%20a%20Podman%20container" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F04%2Fbuild-and-run-buildah-inside-a-podman-container%2F&amp;#38;linkname=Build%20and%20run%20Buildah%20inside%20a%20Podman%20container" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F04%2Fbuild-and-run-buildah-inside-a-podman-container%2F&amp;#38;linkname=Build%20and%20run%20Buildah%20inside%20a%20Podman%20container" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F04%2Fbuild-and-run-buildah-inside-a-podman-container%2F&amp;#38;linkname=Build%20and%20run%20Buildah%20inside%20a%20Podman%20container" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F04%2Fbuild-and-run-buildah-inside-a-podman-container%2F&amp;#38;linkname=Build%20and%20run%20Buildah%20inside%20a%20Podman%20container" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F04%2Fbuild-and-run-buildah-inside-a-podman-container%2F&amp;#38;linkname=Build%20and%20run%20Buildah%20inside%20a%20Podman%20container" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F04%2Fbuild-and-run-buildah-inside-a-podman-container%2F&amp;#38;linkname=Build%20and%20run%20Buildah%20inside%20a%20Podman%20container" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F04%2Fbuild-and-run-buildah-inside-a-podman-container%2F&amp;#038;title=Build%20and%20run%20Buildah%20inside%20a%20Podman%20container" data-a2a-url="https://developers.redhat.com/blog/2019/04/04/build-and-run-buildah-inside-a-podman-container/" data-a2a-title="Build and run Buildah inside a Podman container"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/04/build-and-run-buildah-inside-a-podman-container/"&gt;Build and run Buildah inside a Podman container&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/c-W7rRg-ClM" height="1" width="1" alt=""/&gt;</content><summary>This past Christmas I gave my wife a set of nesting dolls similar to Russian Matryoshka dolls. If you’re not familiar with them, they consist of a wooden doll, which opens to reveal another doll, inside which you’ll find another doll, and so on until you get to the smallest and often most ornate doll of them all.  This concept got me thinking about nesting containers. I thought I’d try building my...</summary><dc:creator>Tom Sweeney</dc:creator><dc:date>2019-04-04T07:03:35Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/04/build-and-run-buildah-inside-a-podman-container/</feedburner:origLink></entry></feed>
